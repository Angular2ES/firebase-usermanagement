var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/guards/AdminAuthGuardService.html",[0,2.498,1,2.24]],["body/guards/AdminAuthGuardService.html",[1,3.138,2,2.33,3,0.255,4,0.255,5,0.189,6,0.194,7,4.504,8,2.516,9,2.598,10,0.4,11,0.662,12,1.249,13,5.333,14,1.841,15,0.892,16,4.819,17,1.032,18,3.501,19,4.234,20,1.539,21,0.764,22,2.957,23,0.96,24,0.027,25,0.764,26,0.647,27,0.764,28,3.983,29,4.819,30,4.504,31,4.819,32,3.501,33,2.957,34,0.614,35,2.11,36,0.507,37,1.158,38,1.56,39,0.255,40,2.598,41,1.533,42,3.501,43,1.082,44,3.501,45,4.716,46,3.501,47,1.426,48,2.957,49,1.24,50,1.011,51,1.24,52,1.158,53,0.221,54,0.189,55,1.785,56,1.329,57,1.315,58,3.501,59,3.501,60,3.501,61,2.957,62,5.333,63,3.501,64,1.938,65,3.501,66,2.173,67,3.501,68,3.501,69,3.501,70,3.501,71,3.501,72,3.501,73,3.501,74,1.187,75,1.785,76,3.501,77,0.889,78,2.335,79,3.501,80,3.501,81,3.501,82,5.333,83,2.598,84,3.501,85,1.343,86,2.225,87,3.501,88,1.158,89,3.501,90,3.501,91,3.501,92,3.501,93,5.333,94,3.501,95,3.501,96,3.501,97,1.329,98,1.329,99,0.013,100,0.018,101,0.013]],["title/injectables/AdminAuthService.html",[38,1.114,102,2.034]],["body/injectables/AdminAuthService.html",[3,0.212,4,0.212,5,0.157,6,0.217,8,1.375,10,0.333,11,0.786,12,1.059,14,1.843,15,0.786,17,0.909,20,1.504,21,0.939,23,1.074,24,0.027,25,0.855,26,0.765,27,0.855,34,0.924,35,1.715,36,0.512,37,0.965,38,1.374,39,0.212,43,0.901,47,1.188,49,1.033,50,0.842,51,1.033,52,0.965,53,0.184,54,0.157,56,1.577,57,1.074,66,2.271,75,2.843,77,0.865,88,1.745,97,1.107,98,1.107,99,0.011,100,0.016,101,0.011,102,2.511,103,1.614,104,2.462,105,1.504,106,2.118,107,2.734,108,3.508,109,3.508,110,3.508,111,4.087,112,1.762,113,2.31,114,3.591,115,3.914,116,2.916,117,2.299,118,2.764,119,2.916,120,2.299,121,2.538,122,1.972,123,2.63,124,1.284,125,1.374,126,3.508,127,1.562,128,5.576,129,2.916,130,1.523,131,3.208,132,4.155,133,4.155,134,4.155,135,4.155,136,3.082,137,4.155,138,3.508,139,2.43,140,2.916,141,2.764,142,2.511,143,2.299,144,2.764,145,1.188,146,2.916,147,2.916,148,2.916,149,1.423,150,3.508,151,1.96,152,2.163,153,2.119,154,1.837,155,1.375,156,2.916,157,1.94,158,1.94,159,1.61,160,2.511,161,2.916,162,2.916,163,2.916,164,2.925,165,4.155,166,2.462,167,2.916,168,2.916,169,1.762,170,4.155,171,2.462,172,2.916,173,2.916,174,2.916,175,2.916,176,2.916,177,2.916,178,2.462,179,4.155,180,2.916,181,2.916,182,2.163]],["title/components/AdminPopupComponent.html",[183,0.384,184,0.791]],["body/components/AdminPopupComponent.html",[3,0.22,4,0.22,5,0.163,6,0.219,10,0.345,11,0.806,12,1.37,15,0.806,17,0.933,21,0.95,23,0.616,24,0.027,25,0.8,26,0.677,27,0.49,34,0.866,35,1.75,36,0.485,39,0.22,43,0.935,47,1.233,49,1.072,53,0.191,54,0.163,55,2.175,57,1.092,77,0.919,85,1.63,99,0.012,100,0.016,101,0.012,105,1.15,113,2.348,117,2.734,124,0.935,125,1.941,127,1.074,130,1.232,149,0.816,154,1.149,155,1.427,183,0.564,184,1.26,185,1.318,186,1.072,187,1.072,188,1.072,189,1.072,190,4.012,191,2.844,192,2.555,193,4.94,194,4.94,195,1.072,196,2.328,197,2.174,198,2.734,199,1.511,200,4.94,201,1.511,202,4.265,203,3.665,204,5.655,205,5.364,206,5.364,207,5.364,208,2.245,209,2.569,210,4.265,211,3.026,212,3.026,213,3.026,214,2.578,215,3.026,216,2.39,217,1.244,218,1.675,219,1.675,220,1.829,221,2.245,222,1.675,223,2.014,224,3.026,225,2.245,226,2.014,227,2.555,228,2.175,229,2.014,230,2.555,231,2.014,232,3.602,233,2.245,234,2.555,235,2.245,236,3.026,237,1.543,238,3.026,239,2.014,240,3.026,241,0.572,242,1.511,243,1.511,244,1.072,245,1.774,246,1.072,247,1.072,248,0.816,249,1.9,250,0.816,251,0.874,252,1.072,253,0.816,254,1.081,255,1.072,256,0.816,257,0.816,258,0.816,259,1.072,260,0.816,261,1.072,262,0.816,263,1.072,264,0.816,265,1.072,266,0.816,267,0.816,268,0.935,269,1.072,270,1.072]],["title/modules/AdminPopupModule.html",[271,0.791,272,2.034]],["body/modules/AdminPopupModule.html",[3,0.335,4,0.335,5,0.249,6,0.167,24,0.027,36,0.502,39,0.335,53,0.291,54,0.249,85,1.16,99,0.018,100,0.022,101,0.018,184,1.63,190,3.066,191,2.173,241,0.871,271,1.082,272,4.038,273,1.749,274,1.632,275,2.474,276,1.877,277,1.877,278,2.659,279,3.89,280,3.89,281,3.89,282,2.463,283,2.017,284,1.749,285,4.607,286,4.751,287,2.463,288,3.418,289,2.868,290,2.017,291,2.017]],["title/injectables/AdminPopupService.html",[38,1.114,292,1.716]],["body/injectables/AdminPopupService.html",[3,0.262,4,0.262,5,0.195,6,0.23,10,0.411,11,0.909,12,1.354,15,0.909,17,1.052,21,1.002,23,0.734,24,0.027,25,0.584,26,0.659,27,0.584,34,1.012,36,0.397,38,1.591,39,0.262,53,0.228,54,0.195,66,2.205,85,1.667,99,0.014,100,0.018,101,0.014,103,1.995,105,1.753,125,1.91,183,0.549,184,0.847,190,4.204,191,2.98,198,3.633,288,2.674,292,2.452,293,3.044,294,5.412,295,5.774,296,5.42,297,4.271,298,5.774,299,3.605,300,6.188,301,5.412,302,5.774,303,4.204,304,4.809,305,3.605,306,3.605,307,3.605,308,3.605,309,6.016,310,4.061,311,3.605,312,3.605,313,3.605,314,3.605,315,3.605,316,3.605,317,3.605,318,3.605,319,3.605,320,3.605,321,3.605,322,3.605,323,3.605,324,3.605,325,3.605]],["title/components/AdminSettingsComponent.html",[183,0.384,248,0.908]],["body/components/AdminSettingsComponent.html",[3,0.141,4,0.141,5,0.104,6,0.222,10,0.348,11,0.577,12,1.449,14,1.605,15,0.577,17,0.668,20,1.259,21,0.979,23,0.951,24,0.027,25,0.897,26,0.829,27,0.756,34,0.752,35,1.654,36,0.457,37,0.64,39,0.141,43,0.598,49,0.685,50,0.558,51,0.685,52,0.64,53,0.122,54,0.104,56,1.158,57,0.394,74,0.951,75,1.555,77,0.964,85,1.355,86,2.45,88,1.009,97,1.434,98,1.434,99,0.007,100,0.012,101,0.007,102,3.139,105,1.338,106,1.555,107,1.782,108,3.622,109,2.576,111,3.19,118,2.03,120,1.688,121,2.044,122,0.788,123,2.202,124,1.326,125,1.419,126,2.576,127,1.249,130,1.091,131,2.979,136,2.263,138,2.576,139,1.243,143,1.688,145,0.788,149,1.019,151,0.912,154,1.884,155,0.912,159,1.348,182,1.435,183,0.431,184,0.454,185,0.943,186,0.685,187,1.081,188,0.685,189,0.685,191,0.912,195,0.685,196,2.141,197,1.999,198,2.374,199,1.081,201,1.081,203,2.803,208,1.435,209,2.172,216,2.31,217,0.487,218,1.07,219,1.07,221,1.435,222,1.07,223,1.287,225,2.263,229,2.514,230,1.633,231,2.03,233,1.435,234,2.576,235,2.263,237,0.986,239,1.287,241,0.366,242,1.081,243,1.081,244,0.685,245,1.419,246,0.685,247,0.685,248,1.157,249,1.52,250,0.521,251,0.558,252,0.685,253,0.521,254,0.827,255,0.685,256,0.521,257,0.521,258,0.521,259,0.685,260,0.521,261,0.685,262,0.521,263,0.685,264,0.521,265,0.685,266,0.521,267,0.521,268,0.598,269,0.685,270,0.685,292,2.187,296,3.19,326,1.633,327,3.255,328,3.778,329,3.051,330,3.778,331,3.778,332,3.427,333,2.38,334,3.778,335,3.778,336,3.051,337,3.19,338,1.934,339,1.934,340,1.688,341,2.263,342,1.934,343,2.576,344,3.051,345,1.934,346,2.576,347,3.464,348,1.934,349,3.066,350,1.007,351,2.803,352,1.081,353,2.514,354,1.934,355,3.051,356,1.934,357,2.03,358,1.934,359,2.187,360,1.934,361,2.576,362,3.681,363,1.934,364,1.934,365,1.934,366,1.934,367,2.263,368,1.934,369,0.734,370,1.633,371,1.435,372,1.934,373,1.934,374,1.934,375,1.934,376,1.633,377,2.38,378,1.336,379,1.934,380,1.934,381,1.934,382,1.934,383,1.435,384,1.633,385,1.934,386,1.435,387,1.934,388,3.051,389,1.934,390,1.934,391,1.934,392,1.934,393,1.934,394,3.051,395,3.051,396,1.555,397,1.435,398,2.091,399,1.435,400,1.435,401,1.435,402,2.091,403,1.934,404,2.263,405,1.934,406,3.051,407,1.934,408,0.847,409,3.051,410,1.07,411,2.263,412,3.183,413,1.633,414,1.633,415,2.576,416,1.934,417,1.934,418,1.934,419,1.934,420,1.934,421,1.934,422,1.435,423,1.287,424,1.287]],["title/injectables/AuthenticationService.html",[38,1.114,113,1.474]],["body/injectables/AuthenticationService.html",[3,0.173,4,0.173,5,0.128,6,0.224,8,1.119,10,0.271,11,0.675,12,1.391,15,0.675,17,0.782,19,3.997,21,0.987,23,1.097,24,0.027,25,0.906,26,0.789,27,0.873,34,1.051,36,0.445,37,0.785,38,1.182,39,0.173,40,1.761,52,0.785,53,0.15,54,0.128,57,1.198,64,1.977,66,0.967,74,0.597,77,0.921,78,1.564,85,1.204,88,2.085,99,0.016,100,0.014,101,0.009,103,1.313,105,1.383,107,2.541,110,3.016,113,1.564,127,1.65,130,1.24,131,2.377,142,1.434,144,3.181,145,0.967,153,2.245,157,1.579,158,1.579,159,1.7,160,2.159,164,2.889,166,4.971,169,1.434,191,1.119,198,1.977,214,3.098,216,1.455,217,1.291,228,2.437,251,1.24,284,1.356,292,2.437,337,3.628,347,3.187,350,0.557,352,1.522,371,1.761,408,1.039,425,2.004,426,3.098,427,3.572,428,3.572,429,3.572,430,3.572,431,3.572,432,4.037,433,4.296,434,4.296,435,2.373,436,2.614,437,3.572,438,3.572,439,3.681,440,5.388,441,2.373,442,2.377,443,3.572,444,2.373,445,4.78,446,3.181,447,3.572,448,2.373,449,3.572,450,5.388,451,2.373,452,3.572,453,3.547,454,4.78,455,3.572,456,2.373,457,2.437,458,2.373,459,3.572,460,3.572,461,3.572,462,3.572,463,2.373,464,2.373,465,2.373,466,3.572,467,2.373,468,2.373,469,4.296,470,3.016,471,3.572,472,2.159,473,3.572,474,1.434,475,2.004,476,2.004,477,1.761,478,2.373,479,2.373,480,2.373,481,2.373,482,2.373,483,3.187,484,2.373,485,2.373,486,2.373,487,2.373,488,2.373,489,2.373,490,2.373,491,2.373,492,2.373,493,2.373,494,3.572,495,2.373,496,2.373,497,2.373,498,2.373,499,2.373,500,2.004,501,2.373]],["title/classes/Group.html",[54,0.182,254,0.737]],["body/classes/Group.html",[3,0.348,4,0.348,5,0.258,6,0.238,10,0.545,11,1.088,21,1.037,24,0.026,26,0.898,27,1.078,53,0.302,54,0.258,99,0.018,100,0.022,101,0.018,122,2.514,127,1.676,149,1.664,254,1.259,502,3.545,503,4.035,504,5.211,505,4.578,506,4.778,507,4.778,508,4.778,509,4.035,510,4.778]],["title/components/GroupCreateComponent.html",[183,0.384,250,0.908]],["body/components/GroupCreateComponent.html",[3,0.177,4,0.177,5,0.131,6,0.219,10,0.277,11,0.687,12,1.296,14,1.741,15,0.687,17,0.531,20,1.396,21,0.959,23,0.887,24,0.027,25,0.913,26,0.812,27,0.706,34,0.637,35,1.543,36,0.478,37,0.803,39,0.177,41,1.063,43,0.75,47,0.989,49,0.86,50,0.701,51,0.86,52,0.803,53,0.154,54,0.131,56,1.38,64,3.007,74,0.611,77,0.884,78,1.591,85,0.915,86,2.281,88,1.202,97,1.38,98,1.38,99,0.009,100,0.014,101,0.009,105,1.562,106,1.853,107,2.054,120,2.011,121,2.117,122,0.989,123,1.714,124,1.346,125,0.803,127,1.519,130,1.049,139,1.48,142,2.196,143,2.011,145,0.989,149,0.655,151,1.714,154,1.38,155,1.145,159,1.258,160,1.467,164,1.467,169,1.467,183,0.497,184,0.57,185,1.123,186,0.86,187,0.86,188,0.86,189,0.86,195,0.86,196,2.242,197,2.094,199,1.287,201,1.287,209,2.467,216,1.97,217,0.611,218,1.343,219,1.343,222,1.343,223,1.615,226,1.615,237,1.853,241,0.459,242,1.287,243,1.287,244,0.86,245,1.6,246,0.86,247,0.86,248,0.655,249,1.713,250,1.304,251,1.627,252,0.86,253,0.655,254,1.46,255,0.86,256,0.655,257,0.655,258,0.655,259,0.86,260,0.655,261,0.86,262,0.655,263,0.86,264,0.655,265,0.86,266,0.655,267,0.655,268,0.75,269,0.86,270,0.86,333,2.64,340,2.011,350,0.57,359,1.853,377,2.22,378,1.063,396,1.853,397,1.801,398,2.011,402,1.343,408,1.591,410,1.343,457,1.853,505,3.231,511,3.645,512,4.475,513,2.05,514,4.355,515,3.634,516,4.355,517,4.355,518,3.068,519,1.591,520,3.217,521,2.898,522,1.801,523,2.77,524,3.404,525,3.634,526,2.427,527,2.011,528,2.427,529,3.678,530,3.634,531,2.427,532,2.696,533,2.427,534,2.418,535,2.427,536,2.427,537,2.427,538,1.907,539,1.615,540,1.801,541,2.427,542,2.427,543,2.427,544,2.427,545,2.05,546,2.427,547,2.427,548,1.615,549,1.615,550,1.801,551,1.801,552,1.615,553,1.801,554,1.801,555,1.467,556,1.615]],["title/components/GroupListComponent.html",[183,0.384,253,0.908]],["body/components/GroupListComponent.html",[3,0.201,4,0.201,5,0.149,6,0.218,10,0.623,11,0.756,12,0.875,15,0.756,17,0.605,21,0.951,23,0.814,24,0.027,25,0.834,26,0.78,27,0.647,34,0.7,35,1.823,36,0.485,39,0.201,43,0.854,47,1.125,49,0.979,53,0.175,54,0.149,55,2.038,57,0.562,64,2.212,74,0.696,77,0.413,85,1.006,99,0.011,100,0.015,101,0.011,105,0.745,123,1.885,124,0.854,125,1.702,130,1.154,139,1.628,149,0.745,154,1.517,155,1.303,159,0.798,183,0.536,184,0.649,185,1.235,186,0.979,187,0.979,188,0.979,189,0.979,195,0.979,196,2.294,197,2.143,199,1.416,201,1.416,209,2.57,216,1.628,217,0.696,218,1.529,222,1.529,232,2.333,237,2.038,241,0.522,242,1.416,243,1.416,244,0.979,245,1.702,246,0.979,247,0.979,248,0.745,249,1.823,250,0.745,251,0.798,252,0.979,253,1.388,254,1.473,255,0.979,256,0.745,257,0.745,258,0.745,259,0.979,260,0.745,261,0.979,262,0.745,263,0.979,264,0.745,265,0.979,266,0.745,267,0.745,268,0.854,269,0.979,270,0.979,297,2.66,327,3.39,346,3.375,350,0.649,357,3.906,362,2.966,367,2.966,396,1.409,398,1.529,399,2.05,400,2.05,401,2.05,404,2.05,408,1.75,410,1.529,422,3.484,423,1.838,424,1.838,511,3.632,519,1.75,520,3.125,522,2.05,523,3.123,527,2.212,538,1.75,539,1.838,552,1.838,555,1.67,556,1.838,557,4.46,558,2.333,559,3.125,560,4.696,561,3.997,562,4.696,563,4.696,564,3.424,565,3.997,566,3.997,567,2.763,568,2.763,569,3.997,570,4.611,571,2.763,572,2.763,573,3.818,574,2.763,575,3.997,576,1.838,577,2.763,578,2.763,579,2.763,580,2.763,581,2.763,582,2.763,583,4.696,584,3.997,585,2.763,586,2.333,587,2.333]],["title/modules/GroupModule.html",[271,0.791,588,2.034]],["body/modules/GroupModule.html",[3,0.281,4,0.281,5,0.209,6,0.14,24,0.027,36,0.544,39,0.281,53,0.244,54,0.209,99,0.015,100,0.019,101,0.015,241,0.73,250,1.816,253,1.816,254,1.298,256,1.816,257,1.816,271,0.907,273,1.467,274,1.368,275,2.281,276,1.574,277,1.574,278,2.452,282,2.204,283,1.691,284,1.467,287,2.204,289,2.566,290,1.691,291,2.204,369,1.467,512,2.866,557,2.866,588,4.164,589,3.262,590,3.262,591,3.262,592,3.262,593,2.762,594,3.863,595,3.35,596,3.35,597,3.35,598,3.35,599,3.35,600,1.822,601,2.334,602,2.866,603,3.863,604,3.863,605,2.866,606,3.863,607,3.863]],["title/injectables/GroupService.html",[38,1.114,523,1.716]],["body/injectables/GroupService.html",[3,0.179,4,0.179,5,0.133,6,0.216,10,0.281,11,0.694,12,0.961,15,0.694,17,0.538,21,0.942,23,1.152,24,0.027,25,0.942,26,0.798,27,0.917,34,0.957,35,1.556,36,0.451,38,1.214,39,0.179,43,0.761,47,1.002,49,0.872,53,0.156,54,0.133,57,1.112,64,2.032,66,1.789,74,0.62,75,1.872,77,0.845,88,2.002,99,0.009,100,0.014,101,0.009,103,1.362,105,1.184,107,2.071,114,2.724,115,3.612,122,1.495,123,2.576,127,1.697,139,2.225,141,2.443,143,2.694,149,1.313,151,1.732,152,1.826,153,1.607,157,1.638,158,1.638,159,1.796,214,2.942,228,1.872,245,0.814,251,1.06,254,1.482,340,2.43,350,0.578,352,1.301,378,1.607,408,1.607,442,1.638,477,3.258,504,5.359,505,4.199,518,3.1,520,3.465,523,1.872,540,1.826,576,1.638,608,2.078,609,4.391,610,3.671,611,3.1,612,3.671,613,3.671,614,3.1,615,2.078,616,3.671,617,3.671,618,4.111,619,2.461,620,4.49,621,3.671,622,2.461,623,4.391,624,3.671,625,2.461,626,2.724,627,3.671,628,2.461,629,3.671,630,2.461,631,3.671,632,2.461,633,3.708,634,3.671,635,5.02,636,3.671,637,2.461,638,3.671,639,2.461,640,2.461,641,2.461,642,2.461,643,2.461,644,2.461,645,2.461,646,2.461,647,2.461,648,2.218,649,2.078,650,2.461,651,2.461,652,2.461,653,2.461,654,2.461,655,2.461,656,2.461,657,2.461]],["title/components/GroupSettingsComponent.html",[183,0.384,256,0.908]],["body/components/GroupSettingsComponent.html",[3,0.187,4,0.187,5,0.138,6,0.218,10,0.293,11,0.716,12,1.315,14,1.772,15,0.716,17,0.561,20,1.429,21,0.954,23,0.916,24,0.027,25,0.858,26,0.786,27,0.729,34,0.788,36,0.41,37,0.848,39,0.187,50,0.74,51,0.908,52,0.848,53,0.162,54,0.138,56,1.437,57,0.771,74,0.646,75,2.532,77,0.672,85,0.953,86,2.499,88,1.643,97,1.708,98,1.708,99,0.01,100,0.015,101,0.01,105,1.213,106,1.93,120,2.095,121,2.175,122,1.045,123,2.499,124,1.39,125,0.848,127,1.133,130,1.093,139,2.023,145,1.045,149,0.692,151,1.785,159,1.093,183,0.513,184,0.602,185,1.17,186,0.908,187,0.908,188,0.908,189,0.908,195,0.908,196,2.265,197,2.115,199,1.341,201,1.341,216,2.259,217,0.646,237,1.93,241,0.485,242,1.341,243,1.341,244,0.908,245,1.643,246,0.908,247,0.908,248,0.692,249,1.76,250,0.692,251,0.74,252,0.908,253,0.692,254,1.477,255,0.908,256,1.34,257,0.692,258,0.692,259,0.908,260,0.692,261,0.908,262,0.692,263,0.908,264,0.692,265,0.908,266,0.692,267,0.692,268,0.793,269,0.908,270,0.908,327,3.258,333,2.701,340,2.095,350,0.602,359,1.93,367,2.808,377,2.701,378,1.657,383,2.808,396,1.93,397,1.903,398,2.095,402,1.419,408,1.657,410,1.419,423,1.706,424,1.706,511,3.632,519,1.657,520,2.994,522,1.903,523,2.827,527,2.095,532,2.808,534,2.519,538,1.97,539,1.706,540,1.903,545,2.165,550,2.808,551,1.903,552,1.706,553,1.903,554,1.903,555,1.55,556,1.706,576,1.706,586,2.165,602,4.459,611,4.194,614,3.196,626,3.931,635,4.474,658,2.165,659,4.499,660,3.785,661,3.799,662,3.785,663,2.564,664,2.564,665,2.564,666,2.564,667,3.785,668,2.564,669,2.564,670,2.564,671,2.564,672,2.808,673,2.564,674,2.564]],["title/components/GroupUsersSettingsComponent.html",[183,0.384,257,0.908]],["body/components/GroupUsersSettingsComponent.html",[3,0.154,4,0.154,5,0.115,6,0.219,10,0.242,11,0.62,12,1.317,14,1.662,15,0.62,17,0.718,20,1.316,21,0.96,23,0.993,24,0.027,25,0.871,26,0.799,27,0.79,34,0.855,35,1.421,36,0.471,37,0.702,39,0.154,43,0.656,47,0.865,49,0.752,50,0.613,51,0.752,52,0.702,53,0.134,54,0.115,55,1.673,56,1.246,57,0.919,74,0.535,77,0.945,85,0.826,86,2.433,88,1.493,97,1.523,98,1.523,99,0.008,100,0.013,101,0.008,102,2.727,105,1.391,106,1.673,120,1.816,121,1.976,122,0.865,124,1.24,125,1.327,127,1.515,130,0.948,144,2.184,145,0.865,149,1.538,151,1.548,154,1.852,155,1.001,159,1.409,178,1.793,183,0.458,184,0.499,185,1.014,186,0.752,187,0.752,188,0.752,189,0.752,195,0.752,196,2.184,197,2.04,199,1.163,201,1.163,216,1.838,217,0.535,219,1.175,225,2.435,229,1.413,231,2.184,239,1.413,241,0.401,242,1.163,243,1.163,244,0.752,245,1.493,246,0.752,247,0.752,248,0.573,249,1.599,250,0.573,251,0.613,252,0.752,253,0.573,254,1.425,255,0.752,256,0.573,257,1.217,258,0.573,259,0.752,260,0.573,261,0.752,262,0.573,263,0.752,264,0.573,265,0.752,266,0.573,267,0.573,268,0.656,269,0.752,270,0.752,327,2.498,332,2.727,333,2.488,340,2.976,349,2.7,350,0.499,357,2.184,359,2.301,362,2.435,369,0.806,370,1.793,377,2.488,378,1.437,396,2.045,402,1.175,408,2.136,411,1.575,415,3.387,423,1.413,424,1.413,511,3.637,519,1.437,523,2.742,532,2.435,534,2.184,538,1.437,539,1.413,550,2.435,551,1.575,555,1.283,559,2.669,564,3.003,573,2.435,576,1.413,587,1.793,605,4.465,618,4.691,620,3.348,661,4.541,672,2.435,675,1.793,676,4.011,677,3.282,678,4.879,679,3.282,680,3.282,681,3.282,682,2.123,683,3.387,684,3.282,685,3.282,686,2.123,687,3.282,688,2.123,689,2.123,690,3.282,691,2.123,692,3.282,693,3.282,694,2.123,695,3.282,696,3.282,697,2.123,698,2.123,699,2.123,700,3.282,701,2.123,702,2.123,703,2.123,704,2.123,705,2.123,706,2.123,707,2.123,708,2.123,709,2.123,710,2.123,711,2.123,712,2.123,713,2.123,714,2.123,715,2.123,716,2.123,717,3.282,718,2.123,719,2.123,720,2.123,721,2.123,722,2.123,723,2.123]],["title/components/LoginEmailPasswordComponent.html",[183,0.384,258,0.908]],["body/components/LoginEmailPasswordComponent.html",[3,0.182,4,0.182,5,0.135,6,0.221,8,1.181,10,0.286,11,0.703,12,1.404,14,1.621,15,0.703,17,0.814,20,1.415,21,0.967,23,0.757,24,0.027,25,0.795,26,0.819,27,0.602,34,0.439,36,0.454,37,0.828,39,0.182,41,1.096,50,0.723,51,0.887,52,0.828,53,0.158,54,0.135,56,1.412,57,0.757,74,0.63,77,0.892,78,1.096,85,0.936,86,2.316,88,1.23,97,1.412,98,1.412,99,0.01,100,0.014,101,0.01,105,1.003,112,1.513,113,2.297,117,2.717,121,1.628,124,1.371,127,1.472,130,1.877,139,1.515,145,1.02,149,0.675,153,1.096,159,1.074,183,0.506,184,0.588,185,1.149,186,0.887,187,0.887,188,0.887,189,0.887,195,0.887,196,2.255,197,2.106,199,1.317,201,1.317,217,1.72,220,1.513,241,0.473,242,1.317,243,1.317,244,0.887,245,1.624,246,0.887,247,0.887,248,0.675,249,1.739,250,0.675,251,0.723,252,0.887,253,0.675,254,0.971,255,0.887,256,0.675,257,0.675,258,1.324,259,0.887,260,0.675,261,0.887,262,0.675,263,0.887,264,0.675,265,0.887,266,0.675,267,0.675,268,0.774,269,0.887,270,0.887,332,3.439,333,2.261,349,2.455,350,0.588,351,1.857,352,1.317,359,1.896,369,0.95,377,2.261,378,1.096,386,2.759,439,3.673,457,1.896,483,2.759,519,1.628,521,2.952,524,3.439,538,1.628,548,1.666,549,1.666,672,1.857,724,4.044,725,4.509,726,2.114,727,4.436,728,3.718,729,4.436,730,3.718,731,2.759,732,3.746,733,3.746,734,3.718,735,2.503,736,3.14,737,3.14,738,4.222,739,2.503,740,4.146,741,2.503,742,2.759,743,3.718,744,2.503,745,2.503,746,2.503,747,3.718,748,2.503,749,3.291,750,2.114,751,2.503,752,2.114,753,3.14,754,2.503,755,2.114,756,2.114,757,2.503,758,2.503,759,2.114,760,2.503]],["title/components/LoginGoogleComponent.html",[183,0.384,260,0.908]],["body/components/LoginGoogleComponent.html",[3,0.165,4,0.165,5,0.122,6,0.225,8,1.069,10,0.259,11,0.652,12,0.914,14,1.553,15,0.652,17,0.755,20,1.355,21,0.99,23,0.85,24,0.027,25,0.814,26,0.797,27,0.677,34,0.881,36,0.415,37,0.75,39,0.165,41,0.992,50,0.654,51,0.803,52,0.75,53,0.218,54,0.122,56,1.31,57,0.461,74,0.571,77,0.885,78,0.992,85,0.869,88,1.545,97,1.31,98,1.31,99,0.024,100,0.013,101,0.009,105,1.625,106,1.759,112,1.369,113,2.045,117,1.909,118,2.296,121,1.829,124,1.291,125,1.662,127,0.869,130,1.87,145,0.923,149,0.611,150,2.913,153,0.992,159,0.996,182,1.681,183,0.477,184,0.532,185,1.066,186,0.803,187,0.803,188,0.803,189,0.803,195,0.803,196,2.213,197,2.067,198,2.93,199,1.222,201,1.222,217,0.571,220,1.369,241,0.428,242,1.222,243,1.222,244,0.803,245,1.545,246,0.803,247,0.803,248,0.611,249,1.654,250,0.611,251,1.206,252,0.803,253,0.611,254,0.914,255,0.803,256,0.611,257,0.611,258,0.611,259,0.803,260,1.259,261,0.803,262,0.611,263,0.803,264,0.611,265,0.803,266,0.611,267,0.611,268,0.7,269,0.803,270,0.803,310,2.913,350,0.532,352,1.48,386,3.465,453,2.56,457,3.072,483,2.56,500,3.528,519,1.511,521,2.78,524,3.326,538,1.829,548,1.508,549,1.508,724,4.114,731,2.56,732,3.528,733,3.528,736,2.913,737,2.913,738,4.083,740,3.943,742,3.465,749,3.099,755,1.914,756,1.914,761,4.286,762,1.681,763,5.005,764,4.177,765,3.45,766,4.177,767,4.67,768,3.45,769,4.67,770,4.67,771,4.177,772,3.45,773,3.528,774,3.45,775,2.266,776,2.913,777,3.45,778,2.266,779,2.266,780,2.266,781,2.266,782,4.67,783,2.266,784,3.45,785,5.025,786,2.266,787,2.266,788,3.943,789,3.45,790,2.266,791,2.913,792,3.45,793,2.913,794,3.45,795,4.177,796,2.266,797,2.266,798,2.266,799,2.266,800,2.266,801,2.266,802,2.266,803,2.266,804,4.177,805,2.266,806,2.266,807,2.266,808,2.266,809,2.266,810,2.266,811,2.266,812,2.266,813,2.266,814,2.266,815,2.266]],["title/modules/LoginProvidersModule.html",[271,0.791,816,2.034]],["body/modules/LoginProvidersModule.html",[3,0.303,4,0.303,5,0.225,6,0.151,24,0.027,36,0.54,39,0.303,53,0.263,54,0.225,99,0.016,100,0.02,101,0.016,217,1.329,241,0.787,258,1.836,260,1.836,271,0.977,273,1.58,274,1.474,275,2.363,276,1.695,277,1.695,278,2.54,282,2.312,283,1.822,284,1.58,287,2.312,289,2.692,290,1.822,291,2.312,369,1.58,593,2.817,595,3.513,596,3.513,597,3.513,598,3.513,599,3.513,600,1.963,601,2.514,725,3.087,761,2.769,816,4.113,817,3.514,818,3.514,819,4.161,820,3.514,821,4.161,822,4.161,823,5.28,824,4.161,825,4.161]],["title/modules/NgUserManagementModule.html",[271,0.791,826,2.034]],["body/modules/NgUserManagementModule.html",[1,2.969,3,0.235,4,0.235,5,0.174,6,0.162,8,2.105,14,1.705,15,0.61,20,1.488,21,0.523,23,0.657,24,0.027,25,0.523,26,0.443,27,0.523,34,0.566,36,0.545,39,0.235,50,1.288,51,1.144,52,1.476,53,0.204,54,0.174,57,0.657,74,0.813,77,0.666,99,0.012,100,0.017,101,0.012,125,1.068,127,0.813,191,2.105,241,0.61,271,0.758,272,3.957,273,1.226,274,1.144,275,1.818,276,1.315,277,2.247,278,2.239,282,1.954,283,1.413,284,1.226,287,2.239,291,1.954,292,3.053,303,2.969,350,0.758,371,2.395,426,3.09,436,2.813,442,2.969,474,2.697,475,2.726,476,3.768,588,3.709,593,2.688,601,1.951,816,3.709,826,4.032,827,2.726,828,3.228,829,2.726,830,2.726,831,3.709,832,3.709,833,4.462,834,3.228,835,4.462,836,4.462,837,3.228,838,5.517,839,3.228,840,2.148,841,5.114,842,4.462,843,4.462,844,2.395,845,3.311,846,3.403,847,3.228,848,3.228,849,3.228,850,3.228,851,3.228,852,3.228,853,4.462,854,3.228,855,2.969,856,3.228,857,3.403,858,3.311,859,3.228,860,3.228,861,5.988,862,5.114,863,3.228,864,5.114,865,4.462]],["title/components/RegisterComponent.html",[183,0.384,262,0.908]],["body/components/RegisterComponent.html",[3,0.191,4,0.191,5,0.142,6,0.22,10,0.3,11,0.729,12,1.324,14,1.654,15,0.729,17,0.843,20,1.443,21,0.96,23,0.785,24,0.027,25,0.814,26,0.813,27,0.624,34,0.461,36,0.462,37,0.869,39,0.191,41,1.151,50,0.759,51,0.931,52,0.869,53,0.166,54,0.142,56,1.463,57,0.785,64,3.096,66,1.071,74,0.662,77,0.799,78,1.151,83,1.95,85,0.97,86,2.371,88,1.275,97,0.998,98,0.998,99,0.01,100,0.015,101,0.01,105,1.356,107,2.153,112,1.588,113,2.201,117,2.133,124,0.812,127,1.493,130,1.113,139,1.57,142,2.329,145,1.071,149,0.709,159,1.113,160,1.588,164,2.329,169,1.588,183,0.521,184,0.617,185,1.191,186,0.931,187,0.931,188,0.931,189,0.931,195,0.931,196,2.275,197,2.124,199,1.365,201,1.365,214,3.582,217,1.408,220,1.588,241,0.497,242,1.365,243,1.365,244,0.931,245,1.663,246,0.931,247,0.931,248,0.709,249,1.781,250,0.709,251,1.318,252,0.931,253,0.709,254,1.171,255,0.931,256,0.709,257,0.709,258,0.709,259,0.931,260,0.709,261,0.931,262,1.356,263,0.931,264,0.709,265,0.931,266,0.709,267,0.709,268,1.191,269,0.931,270,0.931,332,3.037,333,2.327,349,2.526,350,0.617,352,1.781,353,3.345,359,1.965,369,0.998,377,2.327,378,1.151,402,2.133,408,1.688,439,3.582,457,1.965,519,1.688,521,3.037,524,3.493,527,2.133,529,4.244,538,1.998,548,1.749,549,1.749,683,3.854,731,2.86,738,3.386,749,2.86,750,4.519,752,2.219,753,3.854,759,2.219,866,2.219,867,5.594,868,4.564,869,3.854,870,4.564,871,3.854,872,3.854,873,4.564,874,3.854,875,2.628,876,2.628,877,2.628,878,3.854,879,3.854,880,3.854,881,2.628,882,2.628,883,2.628,884,2.329,885,2.628,886,2.628,887,2.628,888,5.026,889,5.026,890,2.628,891,2.628,892,2.628,893,2.219,894,2.628,895,2.219]],["title/modules/RegisterModule.html",[271,0.791,831,2.034]],["body/modules/RegisterModule.html",[3,0.311,4,0.311,5,0.231,6,0.155,24,0.027,36,0.543,39,0.311,53,0.27,54,0.231,99,0.016,100,0.021,101,0.016,241,0.808,262,1.842,268,1.321,271,1.004,273,1.623,274,1.515,275,2.393,276,1.742,277,1.742,278,2.572,282,2.352,283,1.872,284,1.623,287,2.352,289,2.739,290,1.872,291,2.352,369,1.623,593,2.837,595,3.575,596,3.575,597,3.575,598,3.575,599,3.575,600,2.017,601,2.584,831,4.108,896,3.611,897,3.611,898,3.611,899,3.611,900,3.915,901,4.276,902,2.845,903,4.276,904,4.276]],["title/interfaces/SnackBarInterface.html",[20,0.908,905,2.034]],["body/interfaces/SnackBarInterface.html",[3,0.292,4,0.292,5,0.217,6,0.188,10,0.458,14,1.97,15,0.976,20,1.624,21,0.651,23,0.818,24,0.027,25,0.651,26,0.551,27,0.651,34,0.704,36,0.426,39,0.292,50,1.16,53,0.381,57,1.051,66,2.103,77,0.771,78,1.759,99,0.015,100,0.02,101,0.015,122,1.636,124,1.763,127,1.605,159,1.491,297,4.007,303,4.007,350,1.212,352,1.829,426,3.448,442,3.435,446,3.796,472,3.12,527,2.857,600,1.895,648,2.427,840,2.673,857,2.673,905,3.448,906,2.98,907,3.435,908,2.427,909,5.163,910,5.705,911,4.017,912,3.392,913,4.017,914,2.98,915,3.83,916,2.98,917,3.83,918,2.98,919,3.435,920,3.435,921,2.98,922,3.392,923,2.98,924,3.392,925,3.392,926,3.392,927,5.085,928,3.392,929,4.017,930,4.017]],["title/components/SpinnerComponent.html",[183,0.384,264,0.908]],["body/components/SpinnerComponent.html",[3,0.278,4,0.278,5,0.206,6,0.202,10,0.436,15,0.945,17,1.218,21,0.809,24,0.027,25,0.809,34,0.669,36,0.315,39,0.278,53,0.241,54,0.206,55,2.547,77,0.57,85,1.258,99,0.015,100,0.019,101,0.015,124,1.18,125,1.263,130,1.442,149,1.03,183,0.635,184,0.897,185,1.544,186,1.353,187,1.353,188,1.353,189,1.353,195,1.353,196,2.406,197,2.247,199,1.77,201,1.77,217,0.961,229,2.541,231,2.541,233,2.833,237,1.947,239,2.541,241,0.722,242,1.77,243,1.77,244,1.353,245,1.954,246,1.353,247,1.353,248,1.03,249,2.092,250,1.03,251,1.102,252,1.353,253,1.03,254,1.218,255,1.353,256,1.03,257,1.03,258,1.03,259,1.353,260,1.03,261,1.353,262,1.03,263,1.353,264,1.593,265,1.353,266,1.03,267,1.03,268,1.18,269,1.353,270,1.353,361,3.224,399,2.833,400,2.833,401,3.707,411,2.833,412,4.382,413,3.224,414,3.224,559,3.705,564,3.93,931,3.224,932,5.568,933,5.568,934,4.996,935,3.818,936,3.818,937,3.818,938,3.818,939,3.818,940,3.818,941,3.818,942,3.818,943,3.818,944,3.818,945,3.818,946,3.818]],["title/modules/SpinnerModule.html",[271,0.791,593,1.474]],["body/modules/SpinnerModule.html",[3,0.339,4,0.339,5,0.251,6,0.169,24,0.027,36,0.524,39,0.339,53,0.294,54,0.251,99,0.018,100,0.022,101,0.018,241,0.88,264,1.862,271,1.093,273,1.767,274,1.648,275,2.485,276,1.896,277,1.896,278,2.671,282,2.478,283,2.037,284,1.767,287,2.478,289,2.886,290,2.037,291,2.037,593,2.931,600,2.195,947,3.929,948,3.929,949,3.929,950,4.653,951,5.66,952,4.653]],["title/modules/UserAdminSettingsModule.html",[271,0.791,832,2.034]],["body/modules/UserAdminSettingsModule.html",[3,0.3,4,0.3,5,0.222,6,0.15,24,0.027,36,0.545,39,0.3,53,0.26,54,0.222,99,0.016,100,0.02,101,0.016,184,1.355,191,1.942,241,0.778,248,1.833,266,1.833,271,0.967,273,1.563,274,1.458,275,2.351,276,1.677,277,1.677,278,2.527,282,2.296,283,1.802,284,1.563,286,4.428,287,2.296,288,3.054,289,2.674,290,1.802,291,2.296,369,1.563,593,2.809,595,3.49,596,3.49,597,3.49,598,3.49,599,3.49,600,1.942,601,2.488,832,4.107,953,3.476,954,3.476,955,4.117,956,3.476,957,4.117,958,4.117,959,4.117,960,4.117]],["title/guards/UserAuthGuardService.html",[0,2.498,855,2.24]],["body/guards/UserAuthGuardService.html",[2,2.749,3,0.301,4,0.301,5,0.223,6,0.21,8,2.727,9,3.065,10,0.471,11,0.781,12,1.15,14,1.881,15,0.994,16,5.138,17,1.15,20,1.641,21,0.851,22,3.488,23,1.07,24,0.027,25,0.851,26,0.721,27,0.851,28,4.439,29,5.138,30,4.882,31,5.138,33,3.488,34,0.724,35,2.048,36,0.53,37,1.367,38,1.739,39,0.301,41,1.809,43,1.277,47,1.683,49,1.463,50,1.193,51,1.463,52,1.367,53,0.261,54,0.223,55,2.106,56,1.568,57,0.841,77,0.617,97,1.568,98,1.568,99,0.016,100,0.02,101,0.016,105,1.114,208,3.065,209,2.812,218,2.286,219,2.286,222,2.286,226,2.749,228,2.106,855,3.498,961,4.882,962,4.131,963,4.131,964,4.131,965,4.131]],["title/classes/UserModel.html",[54,0.182,154,1.278]],["body/classes/UserModel.html",[3,0.324,4,0.324,5,0.241,6,0.241,10,0.509,11,1.042,21,1.06,24,0.026,25,0.97,26,0.91,27,1.102,53,0.282,54,0.241,99,0.017,100,0.021,101,0.017,127,1.746,131,3.312,154,2.093,217,1.507,502,3.307,509,3.763,570,3.763,573,4.441,966,3.763,967,5.985,968,5.985,969,4.457,970,4.457,971,4.457,972,4.457,973,4.457,974,4.457,975,4.457,976,4.457,977,4.457,978,4.457]],["title/injectables/UserService.html",[38,1.114,209,1.474]],["body/injectables/UserService.html",[3,0.252,4,0.252,5,0.187,6,0.222,10,0.395,11,0.885,12,1.411,15,0.885,17,1.025,19,4.64,21,0.962,23,1.08,24,0.027,25,0.859,26,0.814,27,0.859,34,0.821,35,2.103,36,0.505,38,1.549,39,0.252,40,2.571,43,1.071,47,1.411,48,2.926,49,1.227,53,0.219,54,0.187,57,0.953,74,0.872,75,2.388,77,0.995,88,1.549,99,0.013,100,0.018,101,0.013,103,1.917,105,1.601,114,3.475,115,4.216,123,2.502,127,1.54,131,2.936,139,2.315,141,4.071,143,2.592,151,2.209,152,2.571,154,2.014,155,1.634,157,2.305,158,2.305,159,1.532,209,2.05,216,1.908,226,3.116,228,2.388,347,4.216,350,0.814,615,2.926,620,2.571,633,4.48,979,2.926,980,5.305,981,5.305,982,4.683,983,4.683,984,4.683,985,4.683,986,3.465,987,4.683,988,3.465,989,3.465,990,4.683,991,3.465,992,3.465,993,3.465,994,3.465,995,3.465,996,3.465,997,3.465,998,4.683,999,3.465,1000,3.465]],["title/components/UserSettingsComponent.html",[183,0.384,266,0.908]],["body/components/UserSettingsComponent.html",[3,0.158,4,0.158,5,0.117,6,0.225,10,0.248,11,0.632,12,1.441,14,1.774,15,0.632,17,0.731,20,1.33,21,0.993,23,0.93,24,0.027,25,0.907,26,0.83,27,0.74,34,0.801,35,1.442,36,0.474,37,0.719,39,0.158,41,0.951,43,0.671,49,0.77,50,0.627,51,0.77,52,0.719,53,0.137,54,0.117,56,1.268,57,0.829,74,1.025,75,2.654,77,0.903,78,0.951,83,1.612,85,0.841,86,2.456,88,1.511,97,0.825,98,0.825,99,0.008,100,0.013,101,0.008,105,1.51,106,1.703,107,1.92,112,1.313,113,2,117,1.849,118,2.223,120,1.849,121,2,122,0.885,123,2.558,124,1.676,125,1.511,127,1.241,130,0.965,131,1.849,139,2.429,142,2.019,145,0.885,149,1.33,151,1.025,154,0.825,155,1.025,159,1.175,160,1.313,164,2.019,169,1.313,171,2.821,183,0.464,184,0.51,185,1.032,186,0.77,187,0.77,188,0.77,189,0.77,195,0.77,196,2.195,197,2.049,199,1.183,201,1.183,203,3.02,209,2.566,216,1.861,217,1.025,218,1.202,219,1.202,220,1.313,221,1.612,222,1.202,223,1.446,227,1.835,228,2.329,237,1.703,241,0.411,242,1.183,243,1.183,244,0.77,245,1.511,246,0.77,247,0.77,248,0.586,249,1.618,250,0.586,251,0.627,252,0.77,253,0.586,254,0.891,255,0.77,256,0.586,257,0.586,258,0.586,259,0.77,260,0.586,261,0.77,262,0.586,263,0.77,264,0.586,265,0.77,266,1.232,267,0.586,268,0.671,269,0.77,270,0.77,297,2.223,327,2.729,332,3.542,333,2.514,340,1.849,341,2.479,349,2.729,350,0.956,351,2.479,352,1.844,353,3.608,359,1.703,369,0.825,376,2.821,377,2.654,378,1.463,383,3.02,384,1.835,396,1.108,398,1.202,402,1.202,408,1.463,410,1.202,432,4.949,457,1.703,519,1.463,524,3.277,527,1.849,538,1.782,552,1.446,553,1.612,554,1.612,555,1.313,556,1.446,742,1.612,872,3.437,893,1.835,895,1.835,1001,1.835,1002,4.07,1003,3.341,1004,4.07,1005,3.341,1006,4.07,1007,2.173,1008,2.173,1009,2.173,1010,2.173,1011,2.173,1012,3.341,1013,2.173,1014,3.341,1015,2.173,1016,2.173,1017,2.173,1018,2.173,1019,2.173,1020,2.173,1021,2.173,1022,2.173,1023,2.173,1024,2.173,1025,2.173,1026,2.173,1027,2.173,1028,2.173,1029,2.173,1030,2.173,1031,2.173]],["title/components/ValidationMessageComponent.html",[183,0.384,267,0.908]],["body/components/ValidationMessageComponent.html",[3,0.232,4,0.232,5,0.172,6,0.217,10,0.364,11,0.837,12,1.112,15,0.837,17,1.112,21,0.934,24,0.027,25,0.717,26,0.607,34,0.559,35,1.801,36,0.453,37,1.056,39,0.232,43,0.987,47,1.301,49,1.131,53,0.202,54,0.172,55,2.258,57,0.902,74,0.804,77,0.477,85,1.115,99,0.012,100,0.017,101,0.012,107,2.089,121,1.939,124,1.571,125,1.056,130,1.279,149,0.861,183,0.58,184,0.75,185,1.369,186,1.131,187,1.131,188,1.131,189,1.131,195,1.131,196,2.347,197,2.192,199,1.569,201,1.569,217,1.452,235,2.369,241,0.604,242,1.569,243,1.569,244,1.131,245,1.816,246,1.131,247,1.131,248,0.861,249,1.945,250,0.861,251,0.922,252,1.131,253,0.861,254,1.112,255,1.131,256,0.861,257,0.861,258,0.861,259,1.131,260,0.861,261,1.131,262,0.861,263,1.131,264,0.861,265,1.131,266,0.861,267,1.481,268,1.928,269,1.131,270,1.131,350,0.75,353,3.838,369,1.212,396,1.628,410,1.767,439,2.676,519,1.939,534,3.838,538,2.226,559,3.383,564,3.653,776,3.739,884,2.676,902,3.971,1032,3.971,1033,2.696,1034,5.084,1035,4.428,1036,5.084,1037,5.491,1038,4.428,1039,3.193,1040,4.428,1041,4.636,1042,3.739,1043,3.739,1044,3.739,1045,3.193,1046,4.428,1047,4.428,1048,4.428,1049,3.193,1050,3.193,1051,3.193,1052,3.193,1053,3.193,1054,3.193,1055,3.193,1056,3.193,1057,3.193,1058,3.193,1059,4.428]],["title/modules/ValidationMessageModule.html",[271,0.791,900,2.034]],["body/modules/ValidationMessageModule.html",[3,0.339,4,0.339,5,0.252,6,0.169,24,0.027,36,0.504,39,0.339,53,0.295,54,0.252,99,0.018,100,0.022,101,0.018,241,0.882,267,1.863,268,1.441,271,1.095,273,1.77,274,1.652,275,2.487,276,1.899,277,1.899,278,2.673,282,2.481,283,2.042,284,1.77,287,2.481,289,2.889,290,2.042,291,2.042,900,4.048,902,3.103,1032,3.103,1060,3.937,1061,3.937,1062,3.937,1063,4.663,1064,4.663]],["title/coverage.html",[1065,3.878]],["body/coverage.html",[0,3.426,1,2.258,5,0.183,6,0.253,7,2.866,8,2.178,9,3.426,20,0.915,24,0.027,26,0.465,38,1.95,50,0.98,54,0.249,99,0.013,100,0.018,101,0.013,102,2.051,104,2.866,113,1.486,154,1.288,183,0.753,184,0.797,190,3.073,191,2.178,192,2.866,209,1.486,217,1.163,248,0.915,250,0.915,253,0.915,254,0.743,256,0.915,257,0.915,258,0.915,260,0.915,262,0.915,264,0.915,266,0.915,267,0.915,292,1.73,293,2.866,326,2.866,341,4.511,352,1.202,398,3.365,404,4.697,412,3.894,425,2.866,436,1.73,474,2.051,503,2.866,511,3.405,512,2.518,513,2.866,523,1.73,557,2.518,558,2.866,602,2.518,605,2.518,608,2.866,658,2.866,675,2.866,724,3.073,725,2.518,726,2.866,761,2.258,762,2.518,840,3.073,845,2.518,846,2.258,855,2.258,857,2.258,858,2.518,866,2.866,884,2.051,902,2.258,905,2.791,907,3.749,908,3.879,931,2.866,961,2.866,966,2.866,979,2.866,1001,2.866,1032,3.073,1033,2.866,1065,2.866,1066,2.866,1067,3.394,1068,3.394,1069,4.618,1070,4.618,1071,3.394,1072,3.394,1073,4.618,1074,4.618,1075,5.634,1076,3.394,1077,4.618,1078,3.394,1079,3.921,1080,3.394,1081,6.221,1082,2.518,1083,3.394,1084,3.394,1085,3.394,1086,3.394,1087,3.394,1088,3.394,1089,3.394,1090,3.394,1091,3.394,1092,3.394,1093,3.394,1094,3.394,1095,3.394,1096,3.394,1097,3.394,1098,3.394,1099,3.394,1100,3.394,1101,2.866,1102,3.394,1103,3.394,1104,2.866]],["title/dependencies.html",[274,1.434,1105,2.812]],["body/dependencies.html",[24,0.027,39,0.329,41,1.978,43,1.396,99,0.017,100,0.021,101,0.017,153,1.978,274,1.6,290,1.978,369,1.715,600,2.131,844,3.352,1106,4.517,1107,5.084,1108,4.517,1109,4.694,1110,5.447,1111,4.517,1112,3.815,1113,4.517,1114,4.517,1115,5.559,1116,4.517,1117,4.694,1118,4.124,1119,4.517,1120,4.517,1121,4.517,1122,4.517,1123,4.517,1124,4.517,1125,5.559,1126,4.517,1127,5.559,1128,5.559,1129,4.517,1130,4.517,1131,4.517,1132,4.517,1133,4.517,1134,3.815,1135,4.517,1136,4.517,1137,4.517,1138,4.517,1139,4.517,1140,4.517,1141,3.815,1142,4.517,1143,4.517,1144,4.517,1145,4.517,1146,4.517,1147,4.517]],["title/miscellaneous/enumerations.html",[1148,1.556,1149,3.418]],["body/miscellaneous/enumerations.html",[6,0.191,10,0.598,24,0.025,74,1.53,99,0.02,100,0.023,101,0.02,198,3.362,457,3.098,724,3.488,761,3.488,762,4.508,773,5.13,1148,2.901,1149,4.427,1150,5.243]],["title/miscellaneous/functions.html",[1148,1.556,1151,3.004]],["body/miscellaneous/functions.html",[6,0.212,10,0.56,14,1.807,20,1.324,23,1.19,24,0.026,25,0.947,27,0.947,34,1.024,77,0.733,99,0.019,100,0.022,101,0.019,303,3.89,350,1.373,426,3.533,436,2.503,648,2.967,845,4.337,858,4.337,907,3.267,908,3.905,919,3.267,920,3.267,925,4.146,926,4.146,927,4.146,928,4.146,1079,3.267,1148,2.717,1151,3.643,1152,4.146,1153,4.146,1154,4.146,1155,4.146]],["title/index.html",[10,0.321,1156,2.812,1157,2.812]],["body/index.html",[2,2.692,5,0.256,12,0.615,24,0.026,36,0.487,39,0.294,41,1.23,43,0.868,53,0.178,54,0.152,61,2.373,66,1.648,77,0.821,85,1.194,99,0.011,100,0.015,101,0.011,130,1.168,136,3.002,141,3.809,143,2.624,144,2.692,149,1.091,153,2.733,183,0.673,185,1.25,197,1.952,214,1.698,216,1.145,217,1.306,228,2.063,251,1.168,254,1.203,271,0.95,274,1.68,275,1.145,276,1.145,277,1.931,284,1.067,287,1.771,290,1.23,291,1.23,327,2.87,343,2.373,352,0.995,357,1.87,422,2.085,439,2.865,453,2.085,470,2.373,472,1.698,600,1.325,626,2.085,763,3.416,788,4.003,791,2.373,793,2.373,826,1.698,844,2.085,884,1.698,1041,3.416,1042,2.373,1043,2.373,1044,2.373,1066,3.416,1104,2.373,1107,2.373,1109,2.373,1110,3.416,1112,2.373,1117,3.416,1118,2.085,1134,2.373,1141,2.373,1151,4.247,1158,2.81,1159,4.046,1160,5.725,1161,4.046,1162,4.046,1163,5.187,1164,4.046,1165,4.046,1166,4.741,1167,6.15,1168,2.81,1169,2.81,1170,2.81,1171,4.046,1172,4.38,1173,2.81,1174,2.81,1175,4.046,1176,2.81,1177,2.81,1178,2.81,1179,2.81,1180,2.81,1181,2.81,1182,4.046,1183,5.187,1184,5.187,1185,4.046,1186,4.046,1187,2.81,1188,2.81,1189,2.81,1190,2.81,1191,2.81,1192,4.046,1193,4.046,1194,5.187,1195,6.15,1196,2.81,1197,5.187,1198,5.497,1199,2.373,1200,2.81,1201,2.81,1202,4.046,1203,4.741,1204,2.81,1205,4.046,1206,2.81,1207,3.002,1208,2.81,1209,4.046,1210,2.81,1211,2.373,1212,5.187,1213,2.373,1214,2.373,1215,2.81,1216,2.373,1217,2.81,1218,2.81,1219,2.373,1220,2.373,1221,2.81,1222,2.373,1223,2.81,1224,2.373,1225,4.046,1226,2.81,1227,2.81,1228,2.81,1229,5.497,1230,4.046,1231,4.741,1232,5.187,1233,2.81,1234,4.046,1235,5.725,1236,5.725,1237,5.497,1238,4.046,1239,2.81,1240,5.9,1241,2.81,1242,5.497,1243,2.81,1244,2.81,1245,2.81,1246,2.81,1247,4.046,1248,4.046,1249,2.81,1250,2.81,1251,2.81,1252,2.81,1253,4.046,1254,2.81,1255,4.741,1256,2.81,1257,2.81,1258,4.046,1259,4.046,1260,2.81,1261,4.046,1262,2.81,1263,2.81]],["title/modules.html",[273,1.744]],["body/modules.html",[24,0.023,99,0.019,100,0.023,101,0.019,272,3.018,273,1.896,588,3.018,593,2.187,816,3.018,826,3.018,831,3.018,832,3.018,900,3.018,1118,5.076,1264,6.842,1265,6.842,1266,6.842]],["title/interfaces/ngUserManagementConfig.html",[436,1.716,905,2.034]],["body/interfaces/ngUserManagementConfig.html",[3,0.293,4,0.293,5,0.217,6,0.146,10,0.459,11,0.977,24,0.027,26,0.552,27,0.837,36,0.332,39,0.293,53,0.394,57,0.819,66,2.326,77,0.852,99,0.015,100,0.02,101,0.015,122,1.639,153,2.638,159,1.162,350,1.341,352,1.831,426,3.123,436,3.177,446,3.799,472,3.45,474,2.431,477,2.985,648,3.123,649,4.364,840,2.677,846,2.677,905,3.45,906,2.985,908,2.431,912,3.398,914,2.985,915,3.835,916,2.985,917,3.835,918,2.985,919,2.677,920,3.799,921,3.835,923,2.985,1079,2.677,1082,3.835,1154,3.398,1155,4.364,1172,3.398,1207,4.624,1211,3.398,1213,3.398,1214,3.398,1216,3.398,1219,4.364,1220,3.398,1222,3.398,1224,3.398,1267,3.398,1268,3.398,1269,4.024,1270,4.024,1271,4.024,1272,4.024,1273,4.024]],["title/overview.html",[1274,3.878]],["body/overview.html",[2,2.207,24,0.027,99,0.013,100,0.017,101,0.013,103,1.835,184,1.452,185,1.025,241,0.627,248,1.667,250,1.667,253,1.667,256,1.667,257,1.667,258,1.667,260,1.667,262,1.667,264,1.667,266,1.667,267,1.667,271,0.779,272,3.905,273,1.259,274,1.175,275,1.351,276,1.351,277,1.351,278,1.452,279,2.8,280,2.8,281,2.8,282,1.99,283,1.452,284,1.259,292,2.644,502,2.46,588,4.122,589,2.8,590,2.8,591,2.8,592,2.8,593,2.9,816,4.026,817,2.8,818,2.8,820,2.8,826,3.975,827,2.8,829,2.8,830,2.8,831,4.002,832,4.026,896,2.8,897,2.8,898,2.8,899,2.8,900,3.649,906,2.46,947,2.8,948,2.8,949,2.8,953,2.8,954,2.8,956,2.8,1060,2.8,1061,2.8,1062,2.8,1199,4.379,1274,2.8,1275,3.316,1276,3.316,1277,3.316]],["title/miscellaneous/variables.html",[1148,1.556,1278,3.418]],["body/miscellaneous/variables.html",[6,0.21,10,0.47,24,0.027,26,0.719,50,1.514,57,1.068,66,2.136,74,1.615,77,0.907,78,2.296,99,0.016,100,0.02,101,0.016,153,1.802,254,0.901,349,2.278,350,1.565,352,2.153,378,1.802,436,2.099,446,4.269,472,2.488,474,3.169,648,3.169,846,3.49,857,3.49,884,3.488,907,2.739,908,3.94,914,3.891,915,4.509,916,3.891,917,4.509,918,3.891,919,3.49,920,4.044,921,3.891,922,3.476,923,3.891,924,3.476,1032,2.739,1079,2.739,1082,3.891,1101,3.476,1148,2.278,1152,4.428,1153,4.874,1207,3.054,1267,3.476,1268,3.476,1278,3.476,1279,4.117,1280,4.117,1281,4.117,1282,5.244,1283,4.117,1284,5.244,1285,4.117]]],"invertedIndex":[["",{"_index":24,"title":{},"body":{"guards/AdminAuthGuardService.html":{},"injectables/AdminAuthService.html":{},"components/AdminPopupComponent.html":{},"modules/AdminPopupModule.html":{},"injectables/AdminPopupService.html":{},"components/AdminSettingsComponent.html":{},"injectables/AuthenticationService.html":{},"classes/Group.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"modules/GroupModule.html":{},"injectables/GroupService.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"modules/LoginProvidersModule.html":{},"modules/NgUserManagementModule.html":{},"components/RegisterComponent.html":{},"modules/RegisterModule.html":{},"interfaces/SnackBarInterface.html":{},"components/SpinnerComponent.html":{},"modules/SpinnerModule.html":{},"modules/UserAdminSettingsModule.html":{},"guards/UserAuthGuardService.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{},"modules/ValidationMessageModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"interfaces/ngUserManagementConfig.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":398,"title":{},"body":{"components/AdminSettingsComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"components/GroupSettingsComponent.html":{},"components/UserSettingsComponent.html":{},"coverage.html":{}}}],["0.2",{"_index":407,"title":{},"body":{"components/AdminSettingsComponent.html":{}}}],["0.9.1",{"_index":1147,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1102,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1098,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1078,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1077,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1087,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":1059,"title":{},"body":{"components/ValidationMessageComponent.html":{}}}],["1",{"_index":422,"title":{},"body":{"components/AdminSettingsComponent.html":{},"components/GroupListComponent.html":{},"index.html":{}}}],["1.0.0",{"_index":1140,"title":{},"body":{"dependencies.html":{}}}],["1.10.0",{"_index":1145,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1081,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1080,"title":{},"body":{"coverage.html":{}}}],["10/13",{"_index":1086,"title":{},"body":{"coverage.html":{}}}],["10/15",{"_index":1095,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":404,"title":{},"body":{"components/AdminSettingsComponent.html":{},"components/GroupListComponent.html":{},"coverage.html":{}}}],["100px",{"_index":240,"title":{},"body":{"components/AdminPopupComponent.html":{}}}],["10px",{"_index":415,"title":{},"body":{"components/AdminSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{}}}],["12",{"_index":1276,"title":{},"body":{"overview.html":{}}}],["123",{"_index":649,"title":{},"body":{"injectables/GroupService.html":{},"interfaces/ngUserManagementConfig.html":{}}}],["15.1.10",{"_index":1129,"title":{},"body":{"dependencies.html":{}}}],["150px",{"_index":238,"title":{},"body":{"components/AdminPopupComponent.html":{}}}],["160",{"_index":406,"title":{},"body":{"components/AdminSettingsComponent.html":{}}}],["2",{"_index":1199,"title":{},"body":{"index.html":{},"overview.html":{}}}],["2.0.8",{"_index":1136,"title":{},"body":{"dependencies.html":{}}}],["2.2.4",{"_index":1138,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":1133,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1083,"title":{},"body":{"coverage.html":{}}}],["2/6",{"_index":1100,"title":{},"body":{"coverage.html":{}}}],["2000",{"_index":98,"title":{},"body":{"guards/AdminAuthGuardService.html":{},"injectables/AdminAuthService.html":{},"components/AdminSettingsComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"components/RegisterComponent.html":{},"guards/UserAuthGuardService.html":{},"components/UserSettingsComponent.html":{}}}],["20px",{"_index":722,"title":{},"body":{"components/GroupUsersSettingsComponent.html":{}}}],["3",{"_index":1228,"title":{},"body":{"index.html":{}}}],["3/6",{"_index":1088,"title":{},"body":{"coverage.html":{}}}],["3/7",{"_index":1092,"title":{},"body":{"coverage.html":{}}}],["300px",{"_index":943,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["33",{"_index":1099,"title":{},"body":{"coverage.html":{}}}],["3px",{"_index":418,"title":{},"body":{"components/AdminSettingsComponent.html":{}}}],["4",{"_index":1241,"title":{},"body":{"index.html":{}}}],["4/6",{"_index":1090,"title":{},"body":{"coverage.html":{}}}],["400px",{"_index":553,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/GroupSettingsComponent.html":{},"components/UserSettingsComponent.html":{}}}],["40px",{"_index":555,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/UserSettingsComponent.html":{}}}],["42",{"_index":1091,"title":{},"body":{"coverage.html":{}}}],["450px",{"_index":942,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["5",{"_index":1277,"title":{},"body":{"overview.html":{}}}],["5.2.1",{"_index":1112,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["5/10",{"_index":1084,"title":{},"body":{"coverage.html":{}}}],["5/7",{"_index":1094,"title":{},"body":{"coverage.html":{}}}],["5/8",{"_index":1072,"title":{},"body":{"coverage.html":{}}}],["5/9",{"_index":1074,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":412,"title":{},"body":{"components/AdminSettingsComponent.html":{},"components/SpinnerComponent.html":{},"coverage.html":{}}}],["55",{"_index":1073,"title":{},"body":{"coverage.html":{}}}],["57",{"_index":1096,"title":{},"body":{"coverage.html":{}}}],["5px",{"_index":232,"title":{},"body":{"components/AdminPopupComponent.html":{},"components/GroupListComponent.html":{}}}],["6.4.0",{"_index":1141,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["6.6.2",{"_index":1134,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["6/10",{"_index":1070,"title":{},"body":{"coverage.html":{}}}],["6/9",{"_index":1089,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":1069,"title":{},"body":{"coverage.html":{}}}],["600px",{"_index":585,"title":{},"body":{"components/GroupListComponent.html":{}}}],["62",{"_index":1071,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":1075,"title":{},"body":{"coverage.html":{}}}],["673ab7",{"_index":940,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["70",{"_index":554,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/GroupSettingsComponent.html":{},"components/UserSettingsComponent.html":{}}}],["71",{"_index":1093,"title":{},"body":{"coverage.html":{}}}],["76",{"_index":1085,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":1275,"title":{},"body":{"overview.html":{}}}],["8.0.0",{"_index":1115,"title":{},"body":{"dependencies.html":{}}}],["8.1.0",{"_index":1143,"title":{},"body":{"dependencies.html":{}}}],["8.2.0",{"_index":1110,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["8.2.10",{"_index":1107,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["8.2.2",{"_index":1123,"title":{},"body":{"dependencies.html":{}}}],["8.2.3",{"_index":1109,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["8.7.0",{"_index":1125,"title":{},"body":{"dependencies.html":{}}}],["8/12",{"_index":1076,"title":{},"body":{"coverage.html":{}}}],["8/14",{"_index":1097,"title":{},"body":{"coverage.html":{}}}],["80px",{"_index":397,"title":{},"body":{"components/AdminSettingsComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupSettingsComponent.html":{}}}],["above",{"_index":1196,"title":{},"body":{"index.html":{}}}],["absolute",{"_index":411,"title":{},"body":{"components/AdminSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/SpinnerComponent.html":{}}}],["accessors",{"_index":110,"title":{},"body":{"injectables/AdminAuthService.html":{},"injectables/AuthenticationService.html":{}}}],["account",{"_index":214,"title":{},"body":{"components/AdminPopupComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/GroupService.html":{},"components/RegisterComponent.html":{},"index.html":{}}}],["accounts",{"_index":1169,"title":{},"body":{"index.html":{}}}],["action",{"_index":910,"title":{},"body":{"interfaces/SnackBarInterface.html":{}}}],["actions",{"_index":1162,"title":{},"body":{"index.html":{}}}],["activatedroutesnapshot",{"_index":29,"title":{},"body":{"guards/AdminAuthGuardService.html":{},"guards/UserAuthGuardService.html":{}}}],["actual_component",{"_index":270,"title":{},"body":{"components/AdminPopupComponent.html":{},"components/AdminSettingsComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{}}}],["add",{"_index":408,"title":{},"body":{"components/AdminSettingsComponent.html":{},"injectables/AuthenticationService.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"injectables/GroupService.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/RegisterComponent.html":{},"components/UserSettingsComponent.html":{}}}],["added",{"_index":718,"title":{},"body":{"components/GroupUsersSettingsComponent.html":{}}}],["addextradata",{"_index":872,"title":{},"body":{"components/RegisterComponent.html":{},"components/UserSettingsComponent.html":{}}}],["address",{"_index":1043,"title":{},"body":{"components/ValidationMessageComponent.html":{},"index.html":{}}}],["adduser",{"_index":679,"title":{},"body":{"components/GroupUsersSettingsComponent.html":{}}}],["adduser(userid",{"_index":687,"title":{},"body":{"components/GroupUsersSettingsComponent.html":{}}}],["adduserstogroup",{"_index":610,"title":{},"body":{"injectables/GroupService.html":{}}}],["adduserstogroup(userid",{"_index":617,"title":{},"body":{"injectables/GroupService.html":{}}}],["admin",{"_index":85,"title":{},"body":{"guards/AdminAuthGuardService.html":{},"components/AdminPopupComponent.html":{},"modules/AdminPopupModule.html":{},"injectables/AdminPopupService.html":{},"components/AdminSettingsComponent.html":{},"injectables/AuthenticationService.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{},"index.html":{}}}],["admin.settings.component.css",{"_index":328,"title":{},"body":{"components/AdminSettingsComponent.html":{}}}],["admin.settings.component.html",{"_index":329,"title":{},"body":{"components/AdminSettingsComponent.html":{}}}],["admin/admin",{"_index":960,"title":{},"body":{"modules/UserAdminSettingsModule.html":{}}}],["admin/admin.settings.component",{"_index":958,"title":{},"body":{"modules/UserAdminSettingsModule.html":{}}}],["admin/user",{"_index":134,"title":{},"body":{"injectables/AdminAuthService.html":{}}}],["adminauthguard",{"_index":1187,"title":{},"body":{"index.html":{}}}],["adminauthguardservice",{"_index":1,"title":{"guards/AdminAuthGuardService.html":{}},"body":{"guards/AdminAuthGuardService.html":{},"modules/NgUserManagementModule.html":{},"coverage.html":{}}}],["adminauthservice",{"_index":102,"title":{"injectables/AdminAuthService.html":{}},"body":{"injectables/AdminAuthService.html":{},"components/AdminSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"coverage.html":{}}}],["adminpopup",{"_index":337,"title":{},"body":{"components/AdminSettingsComponent.html":{},"injectables/AuthenticationService.html":{}}}],["adminpopupcomponent",{"_index":184,"title":{"components/AdminPopupComponent.html":{}},"body":{"components/AdminPopupComponent.html":{},"modules/AdminPopupModule.html":{},"injectables/AdminPopupService.html":{},"components/AdminSettingsComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"modules/UserAdminSettingsModule.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["adminpopupmodule",{"_index":272,"title":{"modules/AdminPopupModule.html":{}},"body":{"modules/AdminPopupModule.html":{},"modules/NgUserManagementModule.html":{},"modules.html":{},"overview.html":{}}}],["adminpopupservice",{"_index":292,"title":{"injectables/AdminPopupService.html":{}},"body":{"injectables/AdminPopupService.html":{},"components/AdminSettingsComponent.html":{},"injectables/AuthenticationService.html":{},"modules/NgUserManagementModule.html":{},"coverage.html":{},"overview.html":{}}}],["admins",{"_index":650,"title":{},"body":{"injectables/GroupService.html":{}}}],["adminservice",{"_index":685,"title":{},"body":{"components/GroupUsersSettingsComponent.html":{}}}],["adminsettingscomponent",{"_index":248,"title":{"components/AdminSettingsComponent.html":{}},"body":{"components/AdminPopupComponent.html":{},"components/AdminSettingsComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"modules/UserAdminSettingsModule.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["adminsettingsform",{"_index":330,"title":{},"body":{"components/AdminSettingsComponent.html":{}}}],["admintoken",{"_index":166,"title":{},"body":{"injectables/AdminAuthService.html":{},"injectables/AuthenticationService.html":{}}}],["admintoken.data.customusertoken",{"_index":168,"title":{},"body":{"injectables/AdminAuthService.html":{}}}],["adminuid",{"_index":128,"title":{},"body":{"injectables/AdminAuthService.html":{}}}],["adress",{"_index":967,"title":{},"body":{"classes/UserModel.html":{}}}],["afauth",{"_index":13,"title":{},"body":{"guards/AdminAuthGuardService.html":{}}}],["afterviewinit",{"_index":193,"title":{},"body":{"components/AdminPopupComponent.html":{}}}],["again",{"_index":137,"title":{},"body":{"injectables/AdminAuthService.html":{}}}],["againt",{"_index":461,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["age",{"_index":968,"title":{},"body":{"classes/UserModel.html":{}}}],["aliceblue",{"_index":236,"title":{},"body":{"components/AdminPopupComponent.html":{}}}],["align",{"_index":399,"title":{},"body":{"components/AdminSettingsComponent.html":{},"components/GroupListComponent.html":{},"components/SpinnerComponent.html":{}}}],["alive",{"_index":63,"title":{},"body":{"guards/AdminAuthGuardService.html":{}}}],["allusers",{"_index":111,"title":{},"body":{"injectables/AdminAuthService.html":{},"components/AdminSettingsComponent.html":{}}}],["angular",{"_index":1163,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1106,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1108,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":290,"title":{},"body":{"modules/AdminPopupModule.html":{},"modules/GroupModule.html":{},"modules/LoginProvidersModule.html":{},"modules/RegisterModule.html":{},"modules/SpinnerModule.html":{},"modules/UserAdminSettingsModule.html":{},"modules/ValidationMessageModule.html":{},"dependencies.html":{},"index.html":{}}}],["angular/compiler",{"_index":1111,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":39,"title":{},"body":{"guards/AdminAuthGuardService.html":{},"injectables/AdminAuthService.html":{},"components/AdminPopupComponent.html":{},"modules/AdminPopupModule.html":{},"injectables/AdminPopupService.html":{},"components/AdminSettingsComponent.html":{},"injectables/AuthenticationService.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"modules/GroupModule.html":{},"injectables/GroupService.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"modules/LoginProvidersModule.html":{},"modules/NgUserManagementModule.html":{},"components/RegisterComponent.html":{},"modules/RegisterModule.html":{},"interfaces/SnackBarInterface.html":{},"components/SpinnerComponent.html":{},"modules/SpinnerModule.html":{},"modules/UserAdminSettingsModule.html":{},"guards/UserAuthGuardService.html":{},"injectables/UserService.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{},"modules/ValidationMessageModule.html":{},"dependencies.html":{},"index.html":{},"interfaces/ngUserManagementConfig.html":{}}}],["angular/fire",{"_index":844,"title":{},"body":{"modules/NgUserManagementModule.html":{},"dependencies.html":{},"index.html":{}}}],["angular/fire/auth",{"_index":40,"title":{},"body":{"guards/AdminAuthGuardService.html":{},"injectables/AuthenticationService.html":{},"injectables/UserService.html":{}}}],["angular/fire/firestore",{"_index":152,"title":{},"body":{"injectables/AdminAuthService.html":{},"injectables/GroupService.html":{},"injectables/UserService.html":{}}}],["angular/flex",{"_index":1113,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":369,"title":{},"body":{"components/AdminSettingsComponent.html":{},"modules/GroupModule.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"modules/LoginProvidersModule.html":{},"components/RegisterComponent.html":{},"modules/RegisterModule.html":{},"modules/UserAdminSettingsModule.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":600,"title":{},"body":{"modules/GroupModule.html":{},"modules/LoginProvidersModule.html":{},"modules/RegisterModule.html":{},"interfaces/SnackBarInterface.html":{},"modules/SpinnerModule.html":{},"modules/UserAdminSettingsModule.html":{},"dependencies.html":{},"index.html":{}}}],["angular/platform",{"_index":1117,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["angular/router",{"_index":41,"title":{},"body":{"guards/AdminAuthGuardService.html":{},"components/GroupCreateComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"components/RegisterComponent.html":{},"guards/UserAuthGuardService.html":{},"components/UserSettingsComponent.html":{},"dependencies.html":{},"index.html":{}}}],["angular2",{"_index":1127,"title":{},"body":{"dependencies.html":{}}}],["angularfireauth",{"_index":19,"title":{},"body":{"guards/AdminAuthGuardService.html":{},"injectables/AuthenticationService.html":{},"injectables/UserService.html":{}}}],["angularfirestore",{"_index":115,"title":{},"body":{"injectables/AdminAuthService.html":{},"injectables/GroupService.html":{},"injectables/UserService.html":{}}}],["angularfirestorecollection",{"_index":633,"title":{},"body":{"injectables/GroupService.html":{},"injectables/UserService.html":{}}}],["another",{"_index":736,"title":{},"body":{"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{}}}],["apikey",{"_index":1211,"title":{},"body":{"index.html":{},"interfaces/ngUserManagementConfig.html":{}}}],["app",{"_index":470,"title":{},"body":{"injectables/AuthenticationService.html":{},"index.html":{}}}],["app.component",{"_index":1204,"title":{},"body":{"index.html":{}}}],["appcomponent",{"_index":1203,"title":{},"body":{"index.html":{}}}],["appenddialogcomponenttobody",{"_index":295,"title":{},"body":{"injectables/AdminPopupService.html":{}}}],["appid",{"_index":1224,"title":{},"body":{"index.html":{},"interfaces/ngUserManagementConfig.html":{}}}],["application",{"_index":776,"title":{},"body":{"components/LoginGoogleComponent.html":{},"components/ValidationMessageComponent.html":{}}}],["applicationref",{"_index":302,"title":{},"body":{"injectables/AdminPopupService.html":{}}}],["appmodule",{"_index":1227,"title":{},"body":{"index.html":{}}}],["appnamefactory",{"_index":838,"title":{},"body":{"modules/NgUserManagementModule.html":{}}}],["appref",{"_index":301,"title":{},"body":{"injectables/AdminPopupService.html":{}}}],["array",{"_index":700,"title":{},"body":{"components/GroupUsersSettingsComponent.html":{}}}],["async",{"_index":107,"title":{},"body":{"injectables/AdminAuthService.html":{},"components/AdminSettingsComponent.html":{},"injectables/AuthenticationService.html":{},"components/GroupCreateComponent.html":{},"injectables/GroupService.html":{},"components/RegisterComponent.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{}}}],["auth",{"_index":8,"title":{},"body":{"guards/AdminAuthGuardService.html":{},"injectables/AdminAuthService.html":{},"injectables/AuthenticationService.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"modules/NgUserManagementModule.html":{},"guards/UserAuthGuardService.html":{},"coverage.html":{}}}],["auth.authprovider",{"_index":450,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["auth.googleauthprovider",{"_index":795,"title":{},"body":{"components/LoginGoogleComponent.html":{}}}],["auth.service",{"_index":156,"title":{},"body":{"injectables/AdminAuthService.html":{}}}],["auth.usercredential",{"_index":785,"title":{},"body":{"components/LoginGoogleComponent.html":{}}}],["authdomain",{"_index":1214,"title":{},"body":{"index.html":{},"interfaces/ngUserManagementConfig.html":{}}}],["authenticationflow",{"_index":773,"title":{},"body":{"components/LoginGoogleComponent.html":{},"miscellaneous/enumerations.html":{}}}],["authenticationflow.popup",{"_index":774,"title":{},"body":{"components/LoginGoogleComponent.html":{}}}],["authenticationflow.redirect",{"_index":806,"title":{},"body":{"components/LoginGoogleComponent.html":{}}}],["authenticationflowgoogle",{"_index":771,"title":{},"body":{"components/LoginGoogleComponent.html":{}}}],["authenticationservice",{"_index":113,"title":{"injectables/AuthenticationService.html":{}},"body":{"injectables/AdminAuthService.html":{},"components/AdminPopupComponent.html":{},"injectables/AuthenticationService.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"components/RegisterComponent.html":{},"components/UserSettingsComponent.html":{},"coverage.html":{}}}],["authguardloggedinurl",{"_index":1208,"title":{},"body":{"index.html":{}}}],["authprovider",{"_index":454,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authservice",{"_index":117,"title":{},"body":{"injectables/AdminAuthService.html":{},"components/AdminPopupComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"components/RegisterComponent.html":{},"components/UserSettingsComponent.html":{}}}],["auto",{"_index":556,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"components/GroupSettingsComponent.html":{},"components/UserSettingsComponent.html":{}}}],["await",{"_index":164,"title":{},"body":{"injectables/AdminAuthService.html":{},"injectables/AuthenticationService.html":{},"components/GroupCreateComponent.html":{},"components/RegisterComponent.html":{},"components/UserSettingsComponent.html":{}}}],["background",{"_index":234,"title":{},"body":{"components/AdminPopupComponent.html":{},"components/AdminSettingsComponent.html":{}}}],["being",{"_index":132,"title":{},"body":{"injectables/AdminAuthService.html":{}}}],["beta.27",{"_index":1116,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":919,"title":{},"body":{"interfaces/SnackBarInterface.html":{},"miscellaneous/functions.html":{},"interfaces/ngUserManagementConfig.html":{},"miscellaneous/variables.html":{}}}],["blur",{"_index":889,"title":{},"body":{"components/RegisterComponent.html":{}}}],["boolean",{"_index":359,"title":{},"body":{"components/AdminSettingsComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserSettingsComponent.html":{}}}],["bootstrap",{"_index":276,"title":{},"body":{"modules/AdminPopupModule.html":{},"modules/GroupModule.html":{},"modules/LoginProvidersModule.html":{},"modules/NgUserManagementModule.html":{},"modules/RegisterModule.html":{},"modules/SpinnerModule.html":{},"modules/UserAdminSettingsModule.html":{},"modules/ValidationMessageModule.html":{},"index.html":{},"overview.html":{}}}],["border",{"_index":417,"title":{},"body":{"components/AdminSettingsComponent.html":{}}}],["bottom",{"_index":587,"title":{},"body":{"components/GroupListComponent.html":{},"components/GroupUsersSettingsComponent.html":{}}}],["browse",{"_index":1266,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1118,"title":{},"body":{"dependencies.html":{},"index.html":{},"modules.html":{}}}],["browser/animations",{"_index":1206,"title":{},"body":{"index.html":{}}}],["browseranimationsmodule",{"_index":1205,"title":{},"body":{"index.html":{}}}],["browsermodule",{"_index":1202,"title":{},"body":{"index.html":{}}}],["build",{"_index":1255,"title":{},"body":{"index.html":{}}}],["build:testconfig",{"_index":1249,"title":{},"body":{"index.html":{}}}],["button",{"_index":423,"title":{},"body":{"components/AdminSettingsComponent.html":{},"components/GroupListComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{}}}],["canactivate",{"_index":16,"title":{},"body":{"guards/AdminAuthGuardService.html":{},"guards/UserAuthGuardService.html":{}}}],["canactivate(next",{"_index":28,"title":{},"body":{"guards/AdminAuthGuardService.html":{},"guards/UserAuthGuardService.html":{}}}],["catch",{"_index":175,"title":{},"body":{"injectables/AdminAuthService.html":{}}}],["catch((e",{"_index":384,"title":{},"body":{"components/AdminSettingsComponent.html":{},"components/UserSettingsComponent.html":{}}}],["catch((err",{"_index":672,"title":{},"body":{"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{}}}],["catch((error",{"_index":392,"title":{},"body":{"components/AdminSettingsComponent.html":{}}}],["catch(err",{"_index":169,"title":{},"body":{"injectables/AdminAuthService.html":{},"injectables/AuthenticationService.html":{},"components/GroupCreateComponent.html":{},"components/RegisterComponent.html":{},"components/UserSettingsComponent.html":{}}}],["catch(error",{"_index":500,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginGoogleComponent.html":{}}}],["cd",{"_index":1258,"title":{},"body":{"index.html":{}}}],["center",{"_index":401,"title":{},"body":{"components/AdminSettingsComponent.html":{},"components/GroupListComponent.html":{},"components/SpinnerComponent.html":{}}}],["check",{"_index":812,"title":{},"body":{"components/LoginGoogleComponent.html":{}}}],["checks",{"_index":692,"title":{},"body":{"components/GroupUsersSettingsComponent.html":{}}}],["city",{"_index":975,"title":{},"body":{"classes/UserModel.html":{}}}],["claims",{"_index":84,"title":{},"body":{"guards/AdminAuthGuardService.html":{}}}],["class",{"_index":54,"title":{"classes/Group.html":{},"classes/UserModel.html":{}},"body":{"guards/AdminAuthGuardService.html":{},"injectables/AdminAuthService.html":{},"components/AdminPopupComponent.html":{},"modules/AdminPopupModule.html":{},"injectables/AdminPopupService.html":{},"components/AdminSettingsComponent.html":{},"injectables/AuthenticationService.html":{},"classes/Group.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"modules/GroupModule.html":{},"injectables/GroupService.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"modules/LoginProvidersModule.html":{},"modules/NgUserManagementModule.html":{},"components/RegisterComponent.html":{},"modules/RegisterModule.html":{},"components/SpinnerComponent.html":{},"modules/SpinnerModule.html":{},"modules/UserAdminSettingsModule.html":{},"guards/UserAuthGuardService.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{},"modules/ValidationMessageModule.html":{},"coverage.html":{},"index.html":{}}}],["classes",{"_index":502,"title":{},"body":{"classes/Group.html":{},"classes/UserModel.html":{},"overview.html":{}}}],["click",{"_index":1171,"title":{},"body":{"index.html":{}}}],["close",{"_index":296,"title":{},"body":{"injectables/AdminPopupService.html":{},"components/AdminSettingsComponent.html":{}}}],["cloud",{"_index":1229,"title":{},"body":{"index.html":{}}}],["cluster_adminpopupmodule",{"_index":279,"title":{},"body":{"modules/AdminPopupModule.html":{},"overview.html":{}}}],["cluster_adminpopupmodule_declarations",{"_index":280,"title":{},"body":{"modules/AdminPopupModule.html":{},"overview.html":{}}}],["cluster_adminpopupmodule_exports",{"_index":281,"title":{},"body":{"modules/AdminPopupModule.html":{},"overview.html":{}}}],["cluster_groupmodule",{"_index":589,"title":{},"body":{"modules/GroupModule.html":{},"overview.html":{}}}],["cluster_groupmodule_declarations",{"_index":590,"title":{},"body":{"modules/GroupModule.html":{},"overview.html":{}}}],["cluster_groupmodule_exports",{"_index":592,"title":{},"body":{"modules/GroupModule.html":{},"overview.html":{}}}],["cluster_groupmodule_imports",{"_index":591,"title":{},"body":{"modules/GroupModule.html":{},"overview.html":{}}}],["cluster_loginprovidersmodule",{"_index":817,"title":{},"body":{"modules/LoginProvidersModule.html":{},"overview.html":{}}}],["cluster_loginprovidersmodule_declarations",{"_index":818,"title":{},"body":{"modules/LoginProvidersModule.html":{},"overview.html":{}}}],["cluster_loginprovidersmodule_exports",{"_index":820,"title":{},"body":{"modules/LoginProvidersModule.html":{},"overview.html":{}}}],["cluster_loginprovidersmodule_imports",{"_index":819,"title":{},"body":{"modules/LoginProvidersModule.html":{}}}],["cluster_ngusermanagementmodule",{"_index":827,"title":{},"body":{"modules/NgUserManagementModule.html":{},"overview.html":{}}}],["cluster_ngusermanagementmodule_exports",{"_index":829,"title":{},"body":{"modules/NgUserManagementModule.html":{},"overview.html":{}}}],["cluster_ngusermanagementmodule_imports",{"_index":828,"title":{},"body":{"modules/NgUserManagementModule.html":{}}}],["cluster_ngusermanagementmodule_providers",{"_index":830,"title":{},"body":{"modules/NgUserManagementModule.html":{},"overview.html":{}}}],["cluster_registermodule",{"_index":896,"title":{},"body":{"modules/RegisterModule.html":{},"overview.html":{}}}],["cluster_registermodule_declarations",{"_index":897,"title":{},"body":{"modules/RegisterModule.html":{},"overview.html":{}}}],["cluster_registermodule_exports",{"_index":899,"title":{},"body":{"modules/RegisterModule.html":{},"overview.html":{}}}],["cluster_registermodule_imports",{"_index":898,"title":{},"body":{"modules/RegisterModule.html":{},"overview.html":{}}}],["cluster_spinnermodule",{"_index":947,"title":{},"body":{"modules/SpinnerModule.html":{},"overview.html":{}}}],["cluster_spinnermodule_declarations",{"_index":948,"title":{},"body":{"modules/SpinnerModule.html":{},"overview.html":{}}}],["cluster_spinnermodule_exports",{"_index":949,"title":{},"body":{"modules/SpinnerModule.html":{},"overview.html":{}}}],["cluster_useradminsettingsmodule",{"_index":953,"title":{},"body":{"modules/UserAdminSettingsModule.html":{},"overview.html":{}}}],["cluster_useradminsettingsmodule_declarations",{"_index":954,"title":{},"body":{"modules/UserAdminSettingsModule.html":{},"overview.html":{}}}],["cluster_useradminsettingsmodule_exports",{"_index":956,"title":{},"body":{"modules/UserAdminSettingsModule.html":{},"overview.html":{}}}],["cluster_useradminsettingsmodule_imports",{"_index":955,"title":{},"body":{"modules/UserAdminSettingsModule.html":{}}}],["cluster_validationmessagemodule",{"_index":1060,"title":{},"body":{"modules/ValidationMessageModule.html":{},"overview.html":{}}}],["cluster_validationmessagemodule_declarations",{"_index":1061,"title":{},"body":{"modules/ValidationMessageModule.html":{},"overview.html":{}}}],["cluster_validationmessagemodule_exports",{"_index":1062,"title":{},"body":{"modules/ValidationMessageModule.html":{},"overview.html":{}}}],["collection",{"_index":151,"title":{},"body":{"injectables/AdminAuthService.html":{},"components/AdminSettingsComponent.html":{},"components/GroupCreateComponent.html":{},"injectables/GroupService.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"injectables/UserService.html":{},"components/UserSettingsComponent.html":{}}}],["color",{"_index":235,"title":{},"body":{"components/AdminPopupComponent.html":{},"components/AdminSettingsComponent.html":{},"components/ValidationMessageComponent.html":{}}}],["command",{"_index":1237,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":289,"title":{},"body":{"modules/AdminPopupModule.html":{},"modules/GroupModule.html":{},"modules/LoginProvidersModule.html":{},"modules/RegisterModule.html":{},"modules/SpinnerModule.html":{},"modules/UserAdminSettingsModule.html":{},"modules/ValidationMessageModule.html":{}}}],["complete",{"_index":1173,"title":{},"body":{"index.html":{}}}],["compodoc",{"_index":1261,"title":{},"body":{"index.html":{}}}],["compodoc:servecopy",{"_index":1263,"title":{},"body":{"index.html":{}}}],["component",{"_index":183,"title":{"components/AdminPopupComponent.html":{},"components/AdminSettingsComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{}},"body":{"components/AdminPopupComponent.html":{},"injectables/AdminPopupService.html":{},"components/AdminSettingsComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":246,"title":{},"body":{"components/AdminPopupComponent.html":{},"components/AdminSettingsComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{}}}],["componentfactory",{"_index":312,"title":{},"body":{"injectables/AdminPopupService.html":{}}}],["componentfactory.create(this.injector",{"_index":314,"title":{},"body":{"injectables/AdminPopupService.html":{}}}],["componentfactoryresolver",{"_index":300,"title":{},"body":{"injectables/AdminPopupService.html":{}}}],["componentref",{"_index":309,"title":{},"body":{"injectables/AdminPopupService.html":{}}}],["componentref.hostview",{"_index":317,"title":{},"body":{"injectables/AdminPopupService.html":{}}}],["components",{"_index":185,"title":{},"body":{"components/AdminPopupComponent.html":{},"components/AdminSettingsComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{},"index.html":{},"overview.html":{}}}],["config",{"_index":426,"title":{},"body":{"injectables/AuthenticationService.html":{},"modules/NgUserManagementModule.html":{},"interfaces/SnackBarInterface.html":{},"miscellaneous/functions.html":{},"interfaces/ngUserManagementConfig.html":{}}}],["config.firebaseconfig",{"_index":863,"title":{},"body":{"modules/NgUserManagementModule.html":{}}}],["config.interface",{"_index":52,"title":{},"body":{"guards/AdminAuthGuardService.html":{},"injectables/AdminAuthService.html":{},"components/AdminSettingsComponent.html":{},"injectables/AuthenticationService.html":{},"components/GroupCreateComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"modules/NgUserManagementModule.html":{},"components/RegisterComponent.html":{},"guards/UserAuthGuardService.html":{},"components/UserSettingsComponent.html":{}}}],["config.interface.ts",{"_index":908,"title":{},"body":{"interfaces/SnackBarInterface.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"interfaces/ngUserManagementConfig.html":{},"miscellaneous/variables.html":{}}}],["config.interface.ts:22",{"_index":911,"title":{},"body":{"interfaces/SnackBarInterface.html":{}}}],["configfactory",{"_index":859,"title":{},"body":{"modules/NgUserManagementModule.html":{}}}],["configs",{"_index":472,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/SnackBarInterface.html":{},"index.html":{},"interfaces/ngUserManagementConfig.html":{},"miscellaneous/variables.html":{}}}],["configuration",{"_index":917,"title":{},"body":{"interfaces/SnackBarInterface.html":{},"interfaces/ngUserManagementConfig.html":{},"miscellaneous/variables.html":{}}}],["configurations",{"_index":921,"title":{},"body":{"interfaces/SnackBarInterface.html":{},"interfaces/ngUserManagementConfig.html":{},"miscellaneous/variables.html":{}}}],["confirmpass",{"_index":1284,"title":{},"body":{"miscellaneous/variables.html":{}}}],["confirmpassword",{"_index":890,"title":{},"body":{"components/RegisterComponent.html":{}}}],["console.error(err",{"_index":489,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["console.log('succesfull",{"_index":482,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["const",{"_index":66,"title":{},"body":{"guards/AdminAuthGuardService.html":{},"injectables/AdminAuthService.html":{},"injectables/AdminPopupService.html":{},"injectables/AuthenticationService.html":{},"injectables/GroupService.html":{},"components/RegisterComponent.html":{},"interfaces/SnackBarInterface.html":{},"index.html":{},"interfaces/ngUserManagementConfig.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":17,"title":{},"body":{"guards/AdminAuthGuardService.html":{},"injectables/AdminAuthService.html":{},"components/AdminPopupComponent.html":{},"injectables/AdminPopupService.html":{},"components/AdminSettingsComponent.html":{},"injectables/AuthenticationService.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"injectables/GroupService.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"guards/UserAuthGuardService.html":{},"injectables/UserService.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{}}}],["constructor(adminservice",{"_index":682,"title":{},"body":{"components/GroupUsersSettingsComponent.html":{}}}],["constructor(afauth",{"_index":18,"title":{},"body":{"guards/AdminAuthGuardService.html":{}}}],["constructor(angularfireauth",{"_index":435,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["constructor(authservice",{"_index":112,"title":{},"body":{"injectables/AdminAuthService.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"components/RegisterComponent.html":{},"components/UserSettingsComponent.html":{}}}],["constructor(componentfactoryresolver",{"_index":299,"title":{},"body":{"injectables/AdminPopupService.html":{}}}],["constructor(db",{"_index":615,"title":{},"body":{"injectables/GroupService.html":{},"injectables/UserService.html":{}}}],["constructor(groupservice",{"_index":522,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"components/GroupSettingsComponent.html":{}}}],["constructor(private",{"_index":540,"title":{},"body":{"components/GroupCreateComponent.html":{},"injectables/GroupService.html":{},"components/GroupSettingsComponent.html":{}}}],["constructor(public",{"_index":577,"title":{},"body":{"components/GroupListComponent.html":{}}}],["constructor(userservice",{"_index":208,"title":{},"body":{"components/AdminPopupComponent.html":{},"components/AdminSettingsComponent.html":{},"guards/UserAuthGuardService.html":{}}}],["container",{"_index":409,"title":{},"body":{"components/AdminSettingsComponent.html":{}}}],["containing",{"_index":915,"title":{},"body":{"interfaces/SnackBarInterface.html":{},"interfaces/ngUserManagementConfig.html":{},"miscellaneous/variables.html":{}}}],["content",{"_index":400,"title":{},"body":{"components/AdminSettingsComponent.html":{},"components/GroupListComponent.html":{},"components/SpinnerComponent.html":{}}}],["contents",{"_index":1158,"title":{},"body":{"index.html":{}}}],["control",{"_index":1036,"title":{},"body":{"components/ValidationMessageComponent.html":{}}}],["controller",{"_index":355,"title":{},"body":{"components/AdminSettingsComponent.html":{}}}],["copy",{"_index":1230,"title":{},"body":{"index.html":{}}}],["core",{"_index":1131,"title":{},"body":{"dependencies.html":{}}}],["country",{"_index":976,"title":{},"body":{"classes/UserModel.html":{}}}],["coverage",{"_index":1065,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":251,"title":{},"body":{"components/AdminPopupComponent.html":{},"components/AdminSettingsComponent.html":{},"injectables/AuthenticationService.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"injectables/GroupService.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{},"index.html":{}}}],["create.component",{"_index":604,"title":{},"body":{"modules/GroupModule.html":{}}}],["create.component.css",{"_index":514,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["create.component.html",{"_index":515,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["create.component.ts",{"_index":513,"title":{},"body":{"components/GroupCreateComponent.html":{},"coverage.html":{}}}],["create.component.ts:21",{"_index":526,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["create.component.ts:26",{"_index":528,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["create.component.ts:31",{"_index":535,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["create.component.ts:32",{"_index":536,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["create.component.ts:37",{"_index":525,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["create.component.ts:41",{"_index":537,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["create.component.ts:54",{"_index":531,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["create.component.ts:70",{"_index":533,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["create/group",{"_index":512,"title":{},"body":{"components/GroupCreateComponent.html":{},"modules/GroupModule.html":{},"coverage.html":{}}}],["createaccount",{"_index":427,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["createaccount('email",{"_index":478,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["createaccount(email",{"_index":438,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["created",{"_index":547,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["creategroup",{"_index":518,"title":{},"body":{"components/GroupCreateComponent.html":{},"injectables/GroupService.html":{}}}],["creategroup('userid",{"_index":637,"title":{},"body":{"injectables/GroupService.html":{}}}],["creategroup(groupname",{"_index":530,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["creategroup(userid",{"_index":621,"title":{},"body":{"injectables/GroupService.html":{}}}],["creates",{"_index":452,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["createusertoken",{"_index":161,"title":{},"body":{"injectables/AdminAuthService.html":{}}}],["createusertoken({uid",{"_index":165,"title":{},"body":{"injectables/AdminAuthService.html":{}}}],["creating",{"_index":64,"title":{},"body":{"guards/AdminAuthGuardService.html":{},"injectables/AuthenticationService.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"injectables/GroupService.html":{},"components/RegisterComponent.html":{}}}],["credential",{"_index":758,"title":{},"body":{"components/LoginEmailPasswordComponent.html":{}}}],["credentials",{"_index":483,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{}}}],["credentials.user.email",{"_index":486,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["credentials.user.uid",{"_index":485,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["css",{"_index":1139,"title":{},"body":{"dependencies.html":{}}}],["current",{"_index":216,"title":{},"body":{"components/AdminPopupComponent.html":{},"components/AdminSettingsComponent.html":{},"injectables/AuthenticationService.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"injectables/UserService.html":{},"components/UserSettingsComponent.html":{},"index.html":{}}}],["currentgroup",{"_index":661,"title":{},"body":{"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{}}}],["currentuser",{"_index":203,"title":{},"body":{"components/AdminPopupComponent.html":{},"components/AdminSettingsComponent.html":{},"components/UserSettingsComponent.html":{}}}],["curuser",{"_index":516,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["curuserid",{"_index":517,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["custom",{"_index":445,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["cypress",{"_index":1247,"title":{},"body":{"index.html":{}}}],["data",{"_index":139,"title":{},"body":{"injectables/AdminAuthService.html":{},"components/AdminSettingsComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"injectables/GroupService.html":{},"components/GroupSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{},"components/UserSettingsComponent.html":{}}}],["database",{"_index":142,"title":{},"body":{"injectables/AdminAuthService.html":{},"injectables/AuthenticationService.html":{},"components/GroupCreateComponent.html":{},"components/RegisterComponent.html":{},"components/UserSettingsComponent.html":{}}}],["databaseurl",{"_index":1216,"title":{},"body":{"index.html":{},"interfaces/ngUserManagementConfig.html":{}}}],["db",{"_index":114,"title":{},"body":{"injectables/AdminAuthService.html":{},"injectables/GroupService.html":{},"injectables/UserService.html":{}}}],["debounce",{"_index":44,"title":{},"body":{"guards/AdminAuthGuardService.html":{}}}],["debounce(user",{"_index":76,"title":{},"body":{"guards/AdminAuthGuardService.html":{}}}],["declarations",{"_index":275,"title":{},"body":{"modules/AdminPopupModule.html":{},"modules/GroupModule.html":{},"modules/LoginProvidersModule.html":{},"modules/NgUserManagementModule.html":{},"modules/RegisterModule.html":{},"modules/SpinnerModule.html":{},"modules/UserAdminSettingsModule.html":{},"modules/ValidationMessageModule.html":{},"index.html":{},"overview.html":{}}}],["decorators",{"_index":145,"title":{},"body":{"injectables/AdminAuthService.html":{},"components/AdminSettingsComponent.html":{},"injectables/AuthenticationService.html":{},"components/GroupCreateComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"components/RegisterComponent.html":{},"components/UserSettingsComponent.html":{}}}],["default",{"_index":350,"title":{},"body":{"components/AdminSettingsComponent.html":{},"injectables/AuthenticationService.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"injectables/GroupService.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"modules/NgUserManagementModule.html":{},"components/RegisterComponent.html":{},"interfaces/SnackBarInterface.html":{},"injectables/UserService.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{},"miscellaneous/functions.html":{},"interfaces/ngUserManagementConfig.html":{},"miscellaneous/variables.html":{}}}],["defaultusermanagementconfig",{"_index":1082,"title":{},"body":{"coverage.html":{},"interfaces/ngUserManagementConfig.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":21,"title":{},"body":{"guards/AdminAuthGuardService.html":{},"injectables/AdminAuthService.html":{},"components/AdminPopupComponent.html":{},"injectables/AdminPopupService.html":{},"components/AdminSettingsComponent.html":{},"injectables/AuthenticationService.html":{},"classes/Group.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"injectables/GroupService.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"modules/NgUserManagementModule.html":{},"components/RegisterComponent.html":{},"interfaces/SnackBarInterface.html":{},"components/SpinnerComponent.html":{},"guards/UserAuthGuardService.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{}}}],["delete",{"_index":626,"title":{},"body":{"injectables/GroupService.html":{},"components/GroupSettingsComponent.html":{},"index.html":{}}}],["deletegroup",{"_index":611,"title":{},"body":{"injectables/GroupService.html":{},"components/GroupSettingsComponent.html":{}}}],["deletegroup(groupid",{"_index":624,"title":{},"body":{"injectables/GroupService.html":{}}}],["dependencies",{"_index":274,"title":{"dependencies.html":{}},"body":{"modules/AdminPopupModule.html":{},"modules/GroupModule.html":{},"modules/LoginProvidersModule.html":{},"modules/NgUserManagementModule.html":{},"modules/RegisterModule.html":{},"modules/SpinnerModule.html":{},"modules/UserAdminSettingsModule.html":{},"modules/ValidationMessageModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["deploy",{"_index":1240,"title":{},"body":{"index.html":{}}}],["deps",{"_index":865,"title":{},"body":{"modules/NgUserManagementModule.html":{}}}],["description",{"_index":122,"title":{},"body":{"injectables/AdminAuthService.html":{},"components/AdminSettingsComponent.html":{},"classes/Group.html":{},"components/GroupCreateComponent.html":{},"injectables/GroupService.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"interfaces/SnackBarInterface.html":{},"components/UserSettingsComponent.html":{},"interfaces/ngUserManagementConfig.html":{}}}],["development",{"_index":1246,"title":{},"body":{"index.html":{}}}],["dialogcomponentref",{"_index":294,"title":{},"body":{"injectables/AdminPopupService.html":{}}}],["directive",{"_index":244,"title":{},"body":{"components/AdminPopupComponent.html":{},"components/AdminSettingsComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{}}}],["directives",{"_index":269,"title":{},"body":{"components/AdminPopupComponent.html":{},"components/AdminSettingsComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{}}}],["display",{"_index":361,"title":{},"body":{"components/AdminSettingsComponent.html":{},"components/SpinnerComponent.html":{}}}],["displayname",{"_index":376,"title":{},"body":{"components/AdminSettingsComponent.html":{},"components/UserSettingsComponent.html":{}}}],["displayusersettigs",{"_index":331,"title":{},"body":{"components/AdminSettingsComponent.html":{}}}],["disposable",{"_index":65,"title":{},"body":{"guards/AdminAuthGuardService.html":{}}}],["disposablestream",{"_index":67,"title":{},"body":{"guards/AdminAuthGuardService.html":{}}}],["disposablestream$.pipe",{"_index":69,"title":{},"body":{"guards/AdminAuthGuardService.html":{}}}],["dist",{"_index":1257,"title":{},"body":{"index.html":{}}}],["dist/ng",{"_index":1259,"title":{},"body":{"index.html":{}}}],["distinctuntilchanged",{"_index":45,"title":{},"body":{"guards/AdminAuthGuardService.html":{}}}],["document.body.appendchild(domelem",{"_index":320,"title":{},"body":{"injectables/AdminPopupService.html":{}}}],["documentation",{"_index":1066,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["doens't",{"_index":1233,"title":{},"body":{"index.html":{}}}],["doesn't",{"_index":1243,"title":{},"body":{"index.html":{}}}],["dom",{"_index":188,"title":{},"body":{"components/AdminPopupComponent.html":{},"components/AdminSettingsComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{}}}],["domelem",{"_index":316,"title":{},"body":{"injectables/AdminPopupService.html":{}}}],["duration",{"_index":97,"title":{},"body":{"guards/AdminAuthGuardService.html":{},"injectables/AdminAuthService.html":{},"components/AdminSettingsComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"components/RegisterComponent.html":{},"guards/UserAuthGuardService.html":{},"components/UserSettingsComponent.html":{}}}],["dynamic",{"_index":1119,"title":{},"body":{"dependencies.html":{}}}],["edit",{"_index":394,"title":{},"body":{"components/AdminSettingsComponent.html":{}}}],["element",{"_index":243,"title":{},"body":{"components/AdminPopupComponent.html":{},"components/AdminSettingsComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{}}}],["email",{"_index":217,"title":{},"body":{"components/AdminPopupComponent.html":{},"components/AdminSettingsComponent.html":{},"injectables/AuthenticationService.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"modules/LoginProvidersModule.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"classes/UserModel.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{},"coverage.html":{},"index.html":{}}}],["embeddedviewref",{"_index":311,"title":{},"body":{"injectables/AdminPopupService.html":{}}}],["embeddedviewref).rootnodes[0",{"_index":318,"title":{},"body":{"injectables/AdminPopupService.html":{}}}],["emits",{"_index":740,"title":{},"body":{"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{}}}],["entrycomponents",{"_index":286,"title":{},"body":{"modules/AdminPopupModule.html":{},"modules/UserAdminSettingsModule.html":{}}}],["enum",{"_index":797,"title":{},"body":{"components/LoginGoogleComponent.html":{}}}],["enumerations",{"_index":1149,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["err",{"_index":176,"title":{},"body":{"injectables/AdminAuthService.html":{}}}],["error",{"_index":121,"title":{},"body":{"injectables/AdminAuthService.html":{},"components/AdminSettingsComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{}}}],["errorhandler",{"_index":106,"title":{},"body":{"injectables/AdminAuthService.html":{},"components/AdminSettingsComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginGoogleComponent.html":{},"components/UserSettingsComponent.html":{}}}],["errorhandler(error",{"_index":118,"title":{},"body":{"injectables/AdminAuthService.html":{},"components/AdminSettingsComponent.html":{},"components/LoginGoogleComponent.html":{},"components/UserSettingsComponent.html":{}}}],["errorhandler(errormessage",{"_index":532,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{}}}],["errormessage",{"_index":534,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/ValidationMessageComponent.html":{}}}],["event",{"_index":879,"title":{},"body":{"components/RegisterComponent.html":{}}}],["eventemitter",{"_index":738,"title":{},"body":{"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"components/RegisterComponent.html":{}}}],["example",{"_index":1269,"title":{},"body":{"interfaces/ngUserManagementConfig.html":{}}}],["exist",{"_index":1234,"title":{},"body":{"index.html":{}}}],["export",{"_index":53,"title":{},"body":{"guards/AdminAuthGuardService.html":{},"injectables/AdminAuthService.html":{},"components/AdminPopupComponent.html":{},"modules/AdminPopupModule.html":{},"injectables/AdminPopupService.html":{},"components/AdminSettingsComponent.html":{},"injectables/AuthenticationService.html":{},"classes/Group.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"modules/GroupModule.html":{},"injectables/GroupService.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"modules/LoginProvidersModule.html":{},"modules/NgUserManagementModule.html":{},"components/RegisterComponent.html":{},"modules/RegisterModule.html":{},"interfaces/SnackBarInterface.html":{},"components/SpinnerComponent.html":{},"modules/SpinnerModule.html":{},"modules/UserAdminSettingsModule.html":{},"guards/UserAuthGuardService.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{},"modules/ValidationMessageModule.html":{},"index.html":{},"interfaces/ngUserManagementConfig.html":{}}}],["exports",{"_index":278,"title":{},"body":{"modules/AdminPopupModule.html":{},"modules/GroupModule.html":{},"modules/LoginProvidersModule.html":{},"modules/NgUserManagementModule.html":{},"modules/RegisterModule.html":{},"modules/SpinnerModule.html":{},"modules/UserAdminSettingsModule.html":{},"modules/ValidationMessageModule.html":{},"overview.html":{}}}],["extra",{"_index":527,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"components/GroupSettingsComponent.html":{},"components/RegisterComponent.html":{},"interfaces/SnackBarInterface.html":{},"components/UserSettingsComponent.html":{}}}],["extragroupdata",{"_index":520,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"injectables/GroupService.html":{},"components/GroupSettingsComponent.html":{}}}],["extrauserdata",{"_index":440,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["f1f1f1",{"_index":420,"title":{},"body":{"components/AdminSettingsComponent.html":{}}}],["failed",{"_index":386,"title":{},"body":{"components/AdminSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{}}}],["fallback",{"_index":1184,"title":{},"body":{"index.html":{}}}],["false",{"_index":86,"title":{},"body":{"guards/AdminAuthGuardService.html":{},"components/AdminSettingsComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserSettingsComponent.html":{}}}],["fb",{"_index":683,"title":{},"body":{"components/GroupUsersSettingsComponent.html":{},"components/RegisterComponent.html":{}}}],["fb.group",{"_index":887,"title":{},"body":{"components/RegisterComponent.html":{}}}],["fbuser",{"_index":995,"title":{},"body":{"injectables/UserService.html":{}}}],["file",{"_index":5,"title":{},"body":{"guards/AdminAuthGuardService.html":{},"injectables/AdminAuthService.html":{},"components/AdminPopupComponent.html":{},"modules/AdminPopupModule.html":{},"injectables/AdminPopupService.html":{},"components/AdminSettingsComponent.html":{},"injectables/AuthenticationService.html":{},"classes/Group.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"modules/GroupModule.html":{},"injectables/GroupService.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"modules/LoginProvidersModule.html":{},"modules/NgUserManagementModule.html":{},"components/RegisterComponent.html":{},"modules/RegisterModule.html":{},"interfaces/SnackBarInterface.html":{},"components/SpinnerComponent.html":{},"modules/SpinnerModule.html":{},"modules/UserAdminSettingsModule.html":{},"guards/UserAuthGuardService.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{},"modules/ValidationMessageModule.html":{},"coverage.html":{},"index.html":{},"interfaces/ngUserManagementConfig.html":{}}}],["files",{"_index":1175,"title":{},"body":{"index.html":{}}}],["final",{"_index":916,"title":{},"body":{"interfaces/SnackBarInterface.html":{},"interfaces/ngUserManagementConfig.html":{},"miscellaneous/variables.html":{}}}],["firebase",{"_index":153,"title":{},"body":{"injectables/AdminAuthService.html":{},"injectables/AuthenticationService.html":{},"injectables/GroupService.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"dependencies.html":{},"index.html":{},"interfaces/ngUserManagementConfig.html":{},"miscellaneous/variables.html":{}}}],["firebase.app('secondary",{"_index":499,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["firebase.app.app",{"_index":473,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["firebase.auth().signinwithcustomtoken(uid",{"_index":495,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["firebase.firestore.fieldvalue.arrayremove.apply(null",{"_index":655,"title":{},"body":{"injectables/GroupService.html":{}}}],["firebase.firestore.fieldvalue.arrayunion.apply(null",{"_index":646,"title":{},"body":{"injectables/GroupService.html":{}}}],["firebase.functions().httpscallable('createusertoken",{"_index":162,"title":{},"body":{"injectables/AdminAuthService.html":{}}}],["firebase.functions().httpscallable('updateuserdata",{"_index":172,"title":{},"body":{"injectables/AdminAuthService.html":{}}}],["firebase.initializeapp(this.config.firebaseconfig",{"_index":501,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["firebaseappconfig",{"_index":860,"title":{},"body":{"modules/NgUserManagementModule.html":{}}}],["firebaseconfig",{"_index":1207,"title":{},"body":{"index.html":{},"interfaces/ngUserManagementConfig.html":{},"miscellaneous/variables.html":{}}}],["firebasenameorconfigtoken",{"_index":842,"title":{},"body":{"modules/NgUserManagementModule.html":{}}}],["firebaseoptionstoken",{"_index":843,"title":{},"body":{"modules/NgUserManagementModule.html":{}}}],["firestore",{"_index":141,"title":{},"body":{"injectables/AdminAuthService.html":{},"injectables/GroupService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["firestore:rules",{"_index":1245,"title":{},"body":{"index.html":{}}}],["firestorecopy",{"_index":1244,"title":{},"body":{"index.html":{}}}],["fixed",{"_index":230,"title":{},"body":{"components/AdminPopupComponent.html":{},"components/AdminSettingsComponent.html":{}}}],["flatmap",{"_index":46,"title":{},"body":{"guards/AdminAuthGuardService.html":{}}}],["flatmap((user",{"_index":81,"title":{},"body":{"guards/AdminAuthGuardService.html":{}}}],["flex",{"_index":944,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["float",{"_index":586,"title":{},"body":{"components/GroupListComponent.html":{},"components/GroupSettingsComponent.html":{}}}],["folder",{"_index":1232,"title":{},"body":{"index.html":{}}}],["following",{"_index":1236,"title":{},"body":{"index.html":{}}}],["form",{"_index":402,"title":{},"body":{"components/AdminSettingsComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/RegisterComponent.html":{},"components/UserSettingsComponent.html":{}}}],["formarray",{"_index":702,"title":{},"body":{"components/GroupUsersSettingsComponent.html":{}}}],["formarray).push",{"_index":711,"title":{},"body":{"components/GroupUsersSettingsComponent.html":{}}}],["formbuilder",{"_index":332,"title":{},"body":{"components/AdminSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserSettingsComponent.html":{}}}],["formcontrol",{"_index":353,"title":{},"body":{"components/AdminSettingsComponent.html":{},"components/RegisterComponent.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{}}}],["formgroup",{"_index":349,"title":{},"body":{"components/AdminSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserSettingsComponent.html":{},"miscellaneous/variables.html":{}}}],["formsmodule",{"_index":595,"title":{},"body":{"modules/GroupModule.html":{},"modules/LoginProvidersModule.html":{},"modules/RegisterModule.html":{},"modules/UserAdminSettingsModule.html":{}}}],["forroot",{"_index":836,"title":{},"body":{"modules/NgUserManagementModule.html":{}}}],["forroot(config",{"_index":837,"title":{},"body":{"modules/NgUserManagementModule.html":{}}}],["fromgroup",{"_index":747,"title":{},"body":{"components/LoginEmailPasswordComponent.html":{}}}],["function",{"_index":840,"title":{},"body":{"modules/NgUserManagementModule.html":{},"interfaces/SnackBarInterface.html":{},"coverage.html":{},"interfaces/ngUserManagementConfig.html":{}}}],["functions",{"_index":1151,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["functionscopy",{"_index":1239,"title":{},"body":{"index.html":{}}}],["getallusers",{"_index":147,"title":{},"body":{"injectables/AdminAuthService.html":{}}}],["getgroup",{"_index":612,"title":{},"body":{"injectables/GroupService.html":{}}}],["getgroup(groupid",{"_index":627,"title":{},"body":{"injectables/GroupService.html":{}}}],["getredirectresult",{"_index":464,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getsecondaryapp",{"_index":467,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getting",{"_index":1156,"title":{"index.html":{}},"body":{}}],["getuserwithid",{"_index":982,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserwithid(uid",{"_index":985,"title":{},"body":{"injectables/UserService.html":{}}}],["give",{"_index":1048,"title":{},"body":{"components/ValidationMessageComponent.html":{}}}],["given",{"_index":144,"title":{},"body":{"injectables/AdminAuthService.html":{},"injectables/AuthenticationService.html":{},"components/GroupUsersSettingsComponent.html":{},"index.html":{}}}],["go",{"_index":1176,"title":{},"body":{"index.html":{}}}],["google",{"_index":763,"title":{},"body":{"components/LoginGoogleComponent.html":{},"index.html":{}}}],["google'},{'name",{"_index":261,"title":{},"body":{"components/AdminPopupComponent.html":{},"components/AdminSettingsComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{}}}],["google.component",{"_index":825,"title":{},"body":{"modules/LoginProvidersModule.html":{}}}],["google.component.css",{"_index":764,"title":{},"body":{"components/LoginGoogleComponent.html":{}}}],["google.component.html",{"_index":765,"title":{},"body":{"components/LoginGoogleComponent.html":{}}}],["google.component.ts",{"_index":762,"title":{},"body":{"components/LoginGoogleComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["google.component.ts:105",{"_index":781,"title":{},"body":{"components/LoginGoogleComponent.html":{}}}],["google.component.ts:22",{"_index":775,"title":{},"body":{"components/LoginGoogleComponent.html":{}}}],["google.component.ts:26",{"_index":778,"title":{},"body":{"components/LoginGoogleComponent.html":{}}}],["google.component.ts:31",{"_index":780,"title":{},"body":{"components/LoginGoogleComponent.html":{}}}],["google.component.ts:35",{"_index":779,"title":{},"body":{"components/LoginGoogleComponent.html":{}}}],["google.component.ts:40",{"_index":772,"title":{},"body":{"components/LoginGoogleComponent.html":{}}}],["google.component.ts:44",{"_index":796,"title":{},"body":{"components/LoginGoogleComponent.html":{}}}],["google.component.ts:61",{"_index":783,"title":{},"body":{"components/LoginGoogleComponent.html":{}}}],["google.component.ts:70",{"_index":790,"title":{},"body":{"components/LoginGoogleComponent.html":{}}}],["google.component.ts:78",{"_index":787,"title":{},"body":{"components/LoginGoogleComponent.html":{}}}],["google.component.ts:88",{"_index":786,"title":{},"body":{"components/LoginGoogleComponent.html":{}}}],["google/login",{"_index":761,"title":{},"body":{"components/LoginGoogleComponent.html":{},"modules/LoginProvidersModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["googleprovider",{"_index":766,"title":{},"body":{"components/LoginGoogleComponent.html":{}}}],["group",{"_index":254,"title":{"classes/Group.html":{}},"body":{"components/AdminPopupComponent.html":{},"components/AdminSettingsComponent.html":{},"classes/Group.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"modules/GroupModule.html":{},"injectables/GroupService.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["group'},{'name",{"_index":252,"title":{},"body":{"components/AdminPopupComponent.html":{},"components/AdminSettingsComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{}}}],["group.get('confirmpassword').value",{"_index":1285,"title":{},"body":{"miscellaneous/variables.html":{}}}],["group.get('password').value",{"_index":1283,"title":{},"body":{"miscellaneous/variables.html":{}}}],["group.groupname",{"_index":584,"title":{},"body":{"components/GroupListComponent.html":{}}}],["group.users",{"_index":653,"title":{},"body":{"injectables/GroupService.html":{}}}],["group/group.module",{"_index":851,"title":{},"body":{"modules/NgUserManagementModule.html":{}}}],["groupcol",{"_index":609,"title":{},"body":{"injectables/GroupService.html":{}}}],["groupcreatecomponent",{"_index":250,"title":{"components/GroupCreateComponent.html":{}},"body":{"components/AdminPopupComponent.html":{},"components/AdminSettingsComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"modules/GroupModule.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["groupdata",{"_index":635,"title":{},"body":{"injectables/GroupService.html":{},"components/GroupSettingsComponent.html":{}}}],["groupdata.users[role",{"_index":645,"title":{},"body":{"injectables/GroupService.html":{}}}],["groupdata.users[rolekey",{"_index":654,"title":{},"body":{"injectables/GroupService.html":{}}}],["groupid",{"_index":504,"title":{},"body":{"classes/Group.html":{},"injectables/GroupService.html":{}}}],["grouplist",{"_index":562,"title":{},"body":{"components/GroupListComponent.html":{}}}],["grouplistcomponent",{"_index":253,"title":{"components/GroupListComponent.html":{}},"body":{"components/AdminPopupComponent.html":{},"components/AdminSettingsComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"modules/GroupModule.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["groupmodule",{"_index":588,"title":{"modules/GroupModule.html":{}},"body":{"modules/GroupModule.html":{},"modules/NgUserManagementModule.html":{},"modules.html":{},"overview.html":{}}}],["groupname",{"_index":505,"title":{},"body":{"classes/Group.html":{},"components/GroupCreateComponent.html":{},"injectables/GroupService.html":{}}}],["groups",{"_index":573,"title":{},"body":{"components/GroupListComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"classes/UserModel.html":{}}}],["groups.push(this.groupservice.getgroup(groupid).pipe(map(group",{"_index":582,"title":{},"body":{"components/GroupListComponent.html":{}}}],["groupservice",{"_index":523,"title":{"injectables/GroupService.html":{}},"body":{"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"injectables/GroupService.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"coverage.html":{}}}],["groupsettingsactive",{"_index":563,"title":{},"body":{"components/GroupListComponent.html":{}}}],["groupsettingscomponent",{"_index":256,"title":{"components/GroupSettingsComponent.html":{}},"body":{"components/AdminPopupComponent.html":{},"components/AdminSettingsComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"modules/GroupModule.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["groupuserssettingscomponent",{"_index":257,"title":{"components/GroupUsersSettingsComponent.html":{}},"body":{"components/AdminPopupComponent.html":{},"components/AdminSettingsComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"modules/GroupModule.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["guard",{"_index":0,"title":{"guards/AdminAuthGuardService.html":{},"guards/UserAuthGuardService.html":{}},"body":{"coverage.html":{}}}],["guard.service",{"_index":853,"title":{},"body":{"modules/NgUserManagementModule.html":{}}}],["guard.service.ts",{"_index":9,"title":{},"body":{"guards/AdminAuthGuardService.html":{},"guards/UserAuthGuardService.html":{},"coverage.html":{}}}],["guard.service.ts:16",{"_index":962,"title":{},"body":{"guards/UserAuthGuardService.html":{}}}],["guard.service.ts:17",{"_index":32,"title":{},"body":{"guards/AdminAuthGuardService.html":{}}}],["guard.service.ts:9",{"_index":22,"title":{},"body":{"guards/AdminAuthGuardService.html":{},"guards/UserAuthGuardService.html":{}}}],["guards",{"_index":2,"title":{},"body":{"guards/AdminAuthGuardService.html":{},"guards/UserAuthGuardService.html":{},"index.html":{},"overview.html":{}}}],["guards/admin",{"_index":852,"title":{},"body":{"modules/NgUserManagementModule.html":{}}}],["guards/user",{"_index":856,"title":{},"body":{"modules/NgUserManagementModule.html":{}}}],["guide",{"_index":1174,"title":{},"body":{"index.html":{}}}],["hammerjs",{"_index":1135,"title":{},"body":{"dependencies.html":{}}}],["handler",{"_index":782,"title":{},"body":{"components/LoginGoogleComponent.html":{}}}],["height",{"_index":239,"title":{},"body":{"components/AdminPopupComponent.html":{},"components/AdminSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/SpinnerComponent.html":{}}}],["hello",{"_index":636,"title":{},"body":{"injectables/GroupService.html":{}}}],["here",{"_index":1172,"title":{},"body":{"index.html":{},"interfaces/ngUserManagementConfig.html":{}}}],["hidden",{"_index":403,"title":{},"body":{"components/AdminSettingsComponent.html":{}}}],["html",{"_index":242,"title":{},"body":{"components/AdminPopupComponent.html":{},"components/AdminSettingsComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{}}}],["htmlelement",{"_index":319,"title":{},"body":{"injectables/AdminPopupService.html":{}}}],["https://[project",{"_index":1217,"title":{},"body":{"index.html":{}}}],["https://[projectid].firebaseio.com",{"_index":1271,"title":{},"body":{"interfaces/ngUserManagementConfig.html":{}}}],["id",{"_index":143,"title":{},"body":{"injectables/AdminAuthService.html":{},"components/AdminSettingsComponent.html":{},"components/GroupCreateComponent.html":{},"injectables/GroupService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["id].appspot.com",{"_index":1221,"title":{},"body":{"index.html":{}}}],["id].firebaseapp.com",{"_index":1215,"title":{},"body":{"index.html":{}}}],["id].firebaseio.com",{"_index":1218,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":1067,"title":{},"body":{"coverage.html":{}}}],["idtokenresult.claims.admin",{"_index":94,"title":{},"body":{"guards/AdminAuthGuardService.html":{}}}],["ie",{"_index":918,"title":{},"body":{"interfaces/SnackBarInterface.html":{},"interfaces/ngUserManagementConfig.html":{},"miscellaneous/variables.html":{}}}],["if(!isuser",{"_index":964,"title":{},"body":{"guards/UserAuthGuardService.html":{}}}],["if(user.groups",{"_index":580,"title":{},"body":{"components/GroupListComponent.html":{}}}],["impersonate",{"_index":343,"title":{},"body":{"components/AdminSettingsComponent.html":{},"index.html":{}}}],["impersonated",{"_index":133,"title":{},"body":{"injectables/AdminAuthService.html":{}}}],["impersonateuser",{"_index":108,"title":{},"body":{"injectables/AdminAuthService.html":{},"components/AdminSettingsComponent.html":{}}}],["impersonateuser(uid",{"_index":126,"title":{},"body":{"injectables/AdminAuthService.html":{},"components/AdminSettingsComponent.html":{}}}],["impersonating",{"_index":135,"title":{},"body":{"injectables/AdminAuthService.html":{}}}],["impersonation",{"_index":460,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["implementation",{"_index":1170,"title":{},"body":{"index.html":{}}}],["implements",{"_index":55,"title":{},"body":{"guards/AdminAuthGuardService.html":{},"components/AdminPopupComponent.html":{},"components/GroupListComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/SpinnerComponent.html":{},"guards/UserAuthGuardService.html":{},"components/ValidationMessageComponent.html":{}}}],["import",{"_index":36,"title":{},"body":{"guards/AdminAuthGuardService.html":{},"injectables/AdminAuthService.html":{},"components/AdminPopupComponent.html":{},"modules/AdminPopupModule.html":{},"injectables/AdminPopupService.html":{},"components/AdminSettingsComponent.html":{},"injectables/AuthenticationService.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"modules/GroupModule.html":{},"injectables/GroupService.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"modules/LoginProvidersModule.html":{},"modules/NgUserManagementModule.html":{},"components/RegisterComponent.html":{},"modules/RegisterModule.html":{},"interfaces/SnackBarInterface.html":{},"components/SpinnerComponent.html":{},"modules/SpinnerModule.html":{},"modules/UserAdminSettingsModule.html":{},"guards/UserAuthGuardService.html":{},"injectables/UserService.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{},"modules/ValidationMessageModule.html":{},"index.html":{},"interfaces/ngUserManagementConfig.html":{}}}],["imports",{"_index":291,"title":{},"body":{"modules/AdminPopupModule.html":{},"modules/GroupModule.html":{},"modules/LoginProvidersModule.html":{},"modules/NgUserManagementModule.html":{},"modules/RegisterModule.html":{},"modules/SpinnerModule.html":{},"modules/UserAdminSettingsModule.html":{},"modules/ValidationMessageModule.html":{},"index.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"guards/AdminAuthGuardService.html":{},"injectables/AdminAuthService.html":{},"components/AdminPopupComponent.html":{},"injectables/AdminPopupService.html":{},"components/AdminSettingsComponent.html":{},"injectables/AuthenticationService.html":{},"classes/Group.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"injectables/GroupService.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"components/RegisterComponent.html":{},"interfaces/SnackBarInterface.html":{},"components/SpinnerComponent.html":{},"guards/UserAuthGuardService.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"interfaces/ngUserManagementConfig.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"guards/AdminAuthGuardService.html":{},"injectables/AdminAuthService.html":{},"components/AdminPopupComponent.html":{},"modules/AdminPopupModule.html":{},"injectables/AdminPopupService.html":{},"components/AdminSettingsComponent.html":{},"injectables/AuthenticationService.html":{},"classes/Group.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"modules/GroupModule.html":{},"injectables/GroupService.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"modules/LoginProvidersModule.html":{},"modules/NgUserManagementModule.html":{},"components/RegisterComponent.html":{},"modules/RegisterModule.html":{},"interfaces/SnackBarInterface.html":{},"components/SpinnerComponent.html":{},"modules/SpinnerModule.html":{},"modules/UserAdminSettingsModule.html":{},"guards/UserAuthGuardService.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{},"modules/ValidationMessageModule.html":{},"interfaces/ngUserManagementConfig.html":{}}}],["init",{"_index":1238,"title":{},"body":{"index.html":{}}}],["initialzized",{"_index":471,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["inject",{"_index":37,"title":{},"body":{"guards/AdminAuthGuardService.html":{},"injectables/AdminAuthService.html":{},"components/AdminSettingsComponent.html":{},"injectables/AuthenticationService.html":{},"components/GroupCreateComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"components/RegisterComponent.html":{},"guards/UserAuthGuardService.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{}}}],["inject(ngsnackbartoken",{"_index":56,"title":{},"body":{"guards/AdminAuthGuardService.html":{},"injectables/AdminAuthService.html":{},"components/AdminSettingsComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"components/RegisterComponent.html":{},"guards/UserAuthGuardService.html":{},"components/UserSettingsComponent.html":{}}}],["inject(ngusermanagementconfigtoken",{"_index":462,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["injectable",{"_index":38,"title":{"injectables/AdminAuthService.html":{},"injectables/AdminPopupService.html":{},"injectables/AuthenticationService.html":{},"injectables/GroupService.html":{},"injectables/UserService.html":{}},"body":{"guards/AdminAuthGuardService.html":{},"injectables/AdminAuthService.html":{},"injectables/AdminPopupService.html":{},"injectables/AuthenticationService.html":{},"injectables/GroupService.html":{},"guards/UserAuthGuardService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":103,"title":{},"body":{"injectables/AdminAuthService.html":{},"injectables/AdminPopupService.html":{},"injectables/AuthenticationService.html":{},"injectables/GroupService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectiontoken",{"_index":912,"title":{},"body":{"interfaces/SnackBarInterface.html":{},"interfaces/ngUserManagementConfig.html":{}}}],["injectiontoken('ngsnackbartoken",{"_index":922,"title":{},"body":{"interfaces/SnackBarInterface.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('ngusermanagementconfigtoken",{"_index":1267,"title":{},"body":{"interfaces/ngUserManagementConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('userprovidedconfigtoken",{"_index":1268,"title":{},"body":{"interfaces/ngUserManagementConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('userprovidedsnackbartoken",{"_index":924,"title":{},"body":{"interfaces/SnackBarInterface.html":{},"miscellaneous/variables.html":{}}}],["injector",{"_index":303,"title":{},"body":{"injectables/AdminPopupService.html":{},"modules/NgUserManagementModule.html":{},"interfaces/SnackBarInterface.html":{},"miscellaneous/functions.html":{}}}],["injector.get(matsnackbar",{"_index":930,"title":{},"body":{"interfaces/SnackBarInterface.html":{}}}],["input",{"_index":538,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"components/RegisterComponent.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{}}}],["inputs",{"_index":519,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"components/RegisterComponent.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{}}}],["inputvalidationconfig",{"_index":1225,"title":{},"body":{"index.html":{}}}],["install",{"_index":1194,"title":{},"body":{"index.html":{}}}],["installation",{"_index":1165,"title":{},"body":{"index.html":{}}}],["installed",{"_index":1193,"title":{},"body":{"index.html":{}}}],["interface",{"_index":905,"title":{"interfaces/SnackBarInterface.html":{},"interfaces/ngUserManagementConfig.html":{}},"body":{"interfaces/SnackBarInterface.html":{},"coverage.html":{},"interfaces/ngUserManagementConfig.html":{}}}],["interfaces",{"_index":906,"title":{},"body":{"interfaces/SnackBarInterface.html":{},"interfaces/ngUserManagementConfig.html":{},"overview.html":{}}}],["interfaces/firebase",{"_index":475,"title":{},"body":{"injectables/AuthenticationService.html":{},"modules/NgUserManagementModule.html":{}}}],["interfaces/snackbar",{"_index":51,"title":{},"body":{"guards/AdminAuthGuardService.html":{},"injectables/AdminAuthService.html":{},"components/AdminSettingsComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"modules/NgUserManagementModule.html":{},"components/RegisterComponent.html":{},"guards/UserAuthGuardService.html":{},"components/UserSettingsComponent.html":{}}}],["intermediate",{"_index":923,"title":{},"body":{"interfaces/SnackBarInterface.html":{},"interfaces/ngUserManagementConfig.html":{},"miscellaneous/variables.html":{}}}],["interval",{"_index":42,"title":{},"body":{"guards/AdminAuthGuardService.html":{}}}],["interval(0",{"_index":80,"title":{},"body":{"guards/AdminAuthGuardService.html":{}}}],["interval(1000",{"_index":79,"title":{},"body":{"guards/AdminAuthGuardService.html":{}}}],["invalid",{"_index":1042,"title":{},"body":{"components/ValidationMessageComponent.html":{},"index.html":{}}}],["isadmin",{"_index":93,"title":{},"body":{"guards/AdminAuthGuardService.html":{}}}],["isn't",{"_index":1210,"title":{},"body":{"index.html":{}}}],["ispartofgroup",{"_index":680,"title":{},"body":{"components/GroupUsersSettingsComponent.html":{}}}],["ispartofgroup(user",{"_index":690,"title":{},"body":{"components/GroupUsersSettingsComponent.html":{}}}],["issue",{"_index":71,"title":{},"body":{"guards/AdminAuthGuardService.html":{}}}],["items",{"_index":945,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["iterator",{"_index":575,"title":{},"body":{"components/GroupListComponent.html":{}}}],["jan",{"_index":480,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["jquery",{"_index":1137,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":1132,"title":{},"body":{"dependencies.html":{}}}],["justify",{"_index":946,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["keeping",{"_index":60,"title":{},"body":{"guards/AdminAuthGuardService.html":{}}}],["key",{"_index":1213,"title":{},"body":{"index.html":{},"interfaces/ngUserManagementConfig.html":{}}}],["layout",{"_index":1114,"title":{},"body":{"dependencies.html":{}}}],["left",{"_index":233,"title":{},"body":{"components/AdminPopupComponent.html":{},"components/AdminSettingsComponent.html":{},"components/SpinnerComponent.html":{}}}],["legend",{"_index":241,"title":{},"body":{"components/AdminPopupComponent.html":{},"modules/AdminPopupModule.html":{},"components/AdminSettingsComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"modules/GroupModule.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"modules/LoginProvidersModule.html":{},"modules/NgUserManagementModule.html":{},"components/RegisterComponent.html":{},"modules/RegisterModule.html":{},"components/SpinnerComponent.html":{},"modules/SpinnerModule.html":{},"modules/UserAdminSettingsModule.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{},"modules/ValidationMessageModule.html":{},"overview.html":{}}}],["library",{"_index":1197,"title":{},"body":{"index.html":{}}}],["library's",{"_index":1159,"title":{},"body":{"index.html":{}}}],["libs/.../firebase",{"_index":1153,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["libs/.../login",{"_index":1150,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/.../snackbar",{"_index":1152,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["libs/.../validators.ts",{"_index":1279,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/ng",{"_index":6,"title":{},"body":{"guards/AdminAuthGuardService.html":{},"injectables/AdminAuthService.html":{},"components/AdminPopupComponent.html":{},"modules/AdminPopupModule.html":{},"injectables/AdminPopupService.html":{},"components/AdminSettingsComponent.html":{},"injectables/AuthenticationService.html":{},"classes/Group.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"modules/GroupModule.html":{},"injectables/GroupService.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"modules/LoginProvidersModule.html":{},"modules/NgUserManagementModule.html":{},"components/RegisterComponent.html":{},"modules/RegisterModule.html":{},"interfaces/SnackBarInterface.html":{},"components/SpinnerComponent.html":{},"modules/SpinnerModule.html":{},"modules/UserAdminSettingsModule.html":{},"guards/UserAuthGuardService.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{},"modules/ValidationMessageModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"interfaces/ngUserManagementConfig.html":{},"miscellaneous/variables.html":{}}}],["list",{"_index":357,"title":{},"body":{"components/AdminSettingsComponent.html":{},"components/GroupListComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"index.html":{}}}],["list'},{'name",{"_index":255,"title":{},"body":{"components/AdminPopupComponent.html":{},"components/AdminSettingsComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{}}}],["list.component",{"_index":607,"title":{},"body":{"modules/GroupModule.html":{}}}],["list.component.css",{"_index":560,"title":{},"body":{"components/GroupListComponent.html":{}}}],["list.component.html",{"_index":561,"title":{},"body":{"components/GroupListComponent.html":{}}}],["list.component.ts",{"_index":558,"title":{},"body":{"components/GroupListComponent.html":{},"coverage.html":{}}}],["list.component.ts:18",{"_index":567,"title":{},"body":{"components/GroupListComponent.html":{}}}],["list.component.ts:23",{"_index":572,"title":{},"body":{"components/GroupListComponent.html":{}}}],["list.component.ts:28",{"_index":566,"title":{},"body":{"components/GroupListComponent.html":{}}}],["list.component.ts:30",{"_index":574,"title":{},"body":{"components/GroupListComponent.html":{}}}],["list.component.ts:36",{"_index":568,"title":{},"body":{"components/GroupListComponent.html":{}}}],["list.component.ts:54",{"_index":571,"title":{},"body":{"components/GroupListComponent.html":{}}}],["list/group",{"_index":557,"title":{},"body":{"components/GroupListComponent.html":{},"modules/GroupModule.html":{},"coverage.html":{}}}],["literal",{"_index":509,"title":{},"body":{"classes/Group.html":{},"classes/UserModel.html":{}}}],["loader",{"_index":941,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["loading",{"_index":333,"title":{},"body":{"components/AdminSettingsComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserSettingsComponent.html":{}}}],["log",{"_index":459,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["logged",{"_index":228,"title":{},"body":{"components/AdminPopupComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/GroupService.html":{},"guards/UserAuthGuardService.html":{},"injectables/UserService.html":{},"components/UserSettingsComponent.html":{},"index.html":{}}}],["loggedinguard",{"_index":1181,"title":{},"body":{"index.html":{}}}],["login",{"_index":130,"title":{},"body":{"injectables/AdminAuthService.html":{},"components/AdminPopupComponent.html":{},"components/AdminSettingsComponent.html":{},"injectables/AuthenticationService.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{},"index.html":{}}}],["login/login",{"_index":847,"title":{},"body":{"modules/NgUserManagementModule.html":{}}}],["loginemailpasswordcomponent",{"_index":258,"title":{"components/LoginEmailPasswordComponent.html":{}},"body":{"components/AdminPopupComponent.html":{},"components/AdminSettingsComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"modules/LoginProvidersModule.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginform",{"_index":729,"title":{},"body":{"components/LoginEmailPasswordComponent.html":{}}}],["logingooglecomponent",{"_index":260,"title":{"components/LoginGoogleComponent.html":{}},"body":{"components/AdminPopupComponent.html":{},"components/AdminSettingsComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"modules/LoginProvidersModule.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginprovidersmodule",{"_index":816,"title":{"modules/LoginProvidersModule.html":{}},"body":{"modules/LoginProvidersModule.html":{},"modules/NgUserManagementModule.html":{},"modules.html":{},"overview.html":{}}}],["loginuser",{"_index":730,"title":{},"body":{"components/LoginEmailPasswordComponent.html":{}}}],["loginuser(email",{"_index":743,"title":{},"body":{"components/LoginEmailPasswordComponent.html":{}}}],["loginwithcustomtoken",{"_index":428,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["loginwithcustomtoken(uid",{"_index":443,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["loginwithemailandpassword",{"_index":429,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["loginwithemailandpassword(email",{"_index":447,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["loginwithgoogle",{"_index":767,"title":{},"body":{"components/LoginGoogleComponent.html":{}}}],["loginwithpopup",{"_index":430,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["loginwithpopup(authprovider",{"_index":449,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["loginwithredirect",{"_index":431,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["loginwithredirect(authprovider",{"_index":455,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["logout",{"_index":432,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/UserSettingsComponent.html":{}}}],["main",{"_index":61,"title":{},"body":{"guards/AdminAuthGuardService.html":{},"index.html":{}}}],["make",{"_index":1190,"title":{},"body":{"index.html":{}}}],["management.module.ts",{"_index":834,"title":{},"body":{"modules/NgUserManagementModule.html":{}}}],["management.module.ts:37",{"_index":839,"title":{},"body":{"modules/NgUserManagementModule.html":{}}}],["map",{"_index":47,"title":{},"body":{"guards/AdminAuthGuardService.html":{},"injectables/AdminAuthService.html":{},"components/AdminPopupComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"injectables/GroupService.html":{},"components/GroupUsersSettingsComponent.html":{},"guards/UserAuthGuardService.html":{},"injectables/UserService.html":{},"components/ValidationMessageComponent.html":{}}}],["map((control",{"_index":1052,"title":{},"body":{"components/ValidationMessageComponent.html":{}}}],["map((group",{"_index":642,"title":{},"body":{"injectables/GroupService.html":{}}}],["map((idtokenresult",{"_index":91,"title":{},"body":{"guards/AdminAuthGuardService.html":{}}}],["map((user",{"_index":579,"title":{},"body":{"components/GroupListComponent.html":{}}}],["map(user",{"_index":226,"title":{},"body":{"components/AdminPopupComponent.html":{},"components/GroupCreateComponent.html":{},"guards/UserAuthGuardService.html":{},"injectables/UserService.html":{}}}],["map(users",{"_index":178,"title":{},"body":{"injectables/AdminAuthService.html":{},"components/GroupUsersSettingsComponent.html":{}}}],["margin",{"_index":410,"title":{},"body":{"components/AdminSettingsComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"components/GroupSettingsComponent.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{}}}],["mat",{"_index":937,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["matbuttonmodule",{"_index":597,"title":{},"body":{"modules/GroupModule.html":{},"modules/LoginProvidersModule.html":{},"modules/RegisterModule.html":{},"modules/UserAdminSettingsModule.html":{}}}],["matching",{"_index":100,"title":{},"body":{"guards/AdminAuthGuardService.html":{},"injectables/AdminAuthService.html":{},"components/AdminPopupComponent.html":{},"modules/AdminPopupModule.html":{},"injectables/AdminPopupService.html":{},"components/AdminSettingsComponent.html":{},"injectables/AuthenticationService.html":{},"classes/Group.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"modules/GroupModule.html":{},"injectables/GroupService.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"modules/LoginProvidersModule.html":{},"modules/NgUserManagementModule.html":{},"components/RegisterComponent.html":{},"modules/RegisterModule.html":{},"interfaces/SnackBarInterface.html":{},"components/SpinnerComponent.html":{},"modules/SpinnerModule.html":{},"modules/UserAdminSettingsModule.html":{},"guards/UserAuthGuardService.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{},"modules/ValidationMessageModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"interfaces/ngUserManagementConfig.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["materialize",{"_index":1128,"title":{},"body":{"dependencies.html":{}}}],["matinputmodule",{"_index":598,"title":{},"body":{"modules/GroupModule.html":{},"modules/LoginProvidersModule.html":{},"modules/RegisterModule.html":{},"modules/UserAdminSettingsModule.html":{}}}],["matprogressspinnermodule",{"_index":951,"title":{},"body":{"modules/SpinnerModule.html":{}}}],["matsnackbar",{"_index":913,"title":{},"body":{"interfaces/SnackBarInterface.html":{}}}],["matsnackbarmodule",{"_index":599,"title":{},"body":{"modules/GroupModule.html":{},"modules/LoginProvidersModule.html":{},"modules/RegisterModule.html":{},"modules/UserAdminSettingsModule.html":{}}}],["max",{"_index":552,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"components/GroupSettingsComponent.html":{},"components/UserSettingsComponent.html":{}}}],["merge",{"_index":648,"title":{},"body":{"injectables/GroupService.html":{},"interfaces/SnackBarInterface.html":{},"miscellaneous/functions.html":{},"interfaces/ngUserManagementConfig.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":124,"title":{},"body":{"injectables/AdminAuthService.html":{},"components/AdminPopupComponent.html":{},"components/AdminSettingsComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"components/RegisterComponent.html":{},"interfaces/SnackBarInterface.html":{},"components/SpinnerComponent.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{}}}],["message.component",{"_index":1064,"title":{},"body":{"modules/ValidationMessageModule.html":{}}}],["message.component.css",{"_index":1034,"title":{},"body":{"components/ValidationMessageComponent.html":{}}}],["message.component.html",{"_index":1035,"title":{},"body":{"components/ValidationMessageComponent.html":{}}}],["message.component.ts",{"_index":1033,"title":{},"body":{"components/ValidationMessageComponent.html":{},"coverage.html":{}}}],["message.component.ts:16",{"_index":1039,"title":{},"body":{"components/ValidationMessageComponent.html":{}}}],["message.component.ts:21",{"_index":1045,"title":{},"body":{"components/ValidationMessageComponent.html":{}}}],["message.component.ts:27",{"_index":1038,"title":{},"body":{"components/ValidationMessageComponent.html":{}}}],["message.component.ts:31",{"_index":1049,"title":{},"body":{"components/ValidationMessageComponent.html":{}}}],["message.module",{"_index":903,"title":{},"body":{"modules/RegisterModule.html":{}}}],["message.module.ts",{"_index":1063,"title":{},"body":{"modules/ValidationMessageModule.html":{}}}],["message/validation",{"_index":902,"title":{},"body":{"modules/RegisterModule.html":{},"components/ValidationMessageComponent.html":{},"modules/ValidationMessageModule.html":{},"coverage.html":{}}}],["message/validators",{"_index":885,"title":{},"body":{"components/RegisterComponent.html":{}}}],["message/validators.ts",{"_index":1101,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["messages",{"_index":1047,"title":{},"body":{"components/ValidationMessageComponent.html":{}}}],["messagesender",{"_index":1223,"title":{},"body":{"index.html":{}}}],["messagingsenderid",{"_index":1222,"title":{},"body":{"index.html":{},"interfaces/ngUserManagementConfig.html":{}}}],["metadata",{"_index":195,"title":{},"body":{"components/AdminPopupComponent.html":{},"components/AdminSettingsComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{}}}],["methods",{"_index":15,"title":{},"body":{"guards/AdminAuthGuardService.html":{},"injectables/AdminAuthService.html":{},"components/AdminPopupComponent.html":{},"injectables/AdminPopupService.html":{},"components/AdminSettingsComponent.html":{},"injectables/AuthenticationService.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"injectables/GroupService.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"modules/NgUserManagementModule.html":{},"components/RegisterComponent.html":{},"interfaces/SnackBarInterface.html":{},"components/SpinnerComponent.html":{},"guards/UserAuthGuardService.html":{},"injectables/UserService.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{}}}],["min",{"_index":723,"title":{},"body":{"components/GroupUsersSettingsComponent.html":{}}}],["miscellaneous",{"_index":1148,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["models/group.model",{"_index":576,"title":{},"body":{"components/GroupListComponent.html":{},"injectables/GroupService.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{}}}],["models/user.model",{"_index":155,"title":{},"body":{"injectables/AdminAuthService.html":{},"components/AdminPopupComponent.html":{},"components/AdminSettingsComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"injectables/UserService.html":{},"components/UserSettingsComponent.html":{}}}],["module",{"_index":271,"title":{"modules/AdminPopupModule.html":{},"modules/GroupModule.html":{},"modules/LoginProvidersModule.html":{},"modules/NgUserManagementModule.html":{},"modules/RegisterModule.html":{},"modules/SpinnerModule.html":{},"modules/UserAdminSettingsModule.html":{},"modules/ValidationMessageModule.html":{}},"body":{"modules/AdminPopupModule.html":{},"modules/GroupModule.html":{},"modules/LoginProvidersModule.html":{},"modules/NgUserManagementModule.html":{},"modules/RegisterModule.html":{},"modules/SpinnerModule.html":{},"modules/UserAdminSettingsModule.html":{},"modules/ValidationMessageModule.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":273,"title":{"modules.html":{}},"body":{"modules/AdminPopupModule.html":{},"modules/GroupModule.html":{},"modules/LoginProvidersModule.html":{},"modules/NgUserManagementModule.html":{},"modules/RegisterModule.html":{},"modules/SpinnerModule.html":{},"modules/UserAdminSettingsModule.html":{},"modules/ValidationMessageModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithproviders",{"_index":841,"title":{},"body":{"modules/NgUserManagementModule.html":{}}}],["name",{"_index":25,"title":{},"body":{"guards/AdminAuthGuardService.html":{},"injectables/AdminAuthService.html":{},"components/AdminPopupComponent.html":{},"injectables/AdminPopupService.html":{},"components/AdminSettingsComponent.html":{},"injectables/AuthenticationService.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"injectables/GroupService.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"modules/NgUserManagementModule.html":{},"components/RegisterComponent.html":{},"interfaces/SnackBarInterface.html":{},"components/SpinnerComponent.html":{},"guards/UserAuthGuardService.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{},"miscellaneous/functions.html":{}}}],["need",{"_index":1201,"title":{},"body":{"index.html":{}}}],["needed",{"_index":1262,"title":{},"body":{"index.html":{}}}],["new",{"_index":352,"title":{},"body":{"components/AdminSettingsComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/GroupService.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"components/RegisterComponent.html":{},"interfaces/SnackBarInterface.html":{},"components/UserSettingsComponent.html":{},"coverage.html":{},"index.html":{},"interfaces/ngUserManagementConfig.html":{},"miscellaneous/variables.html":{}}}],["newid",{"_index":638,"title":{},"body":{"injectables/GroupService.html":{}}}],["next",{"_index":33,"title":{},"body":{"guards/AdminAuthGuardService.html":{},"guards/UserAuthGuardService.html":{}}}],["ng",{"_index":197,"title":{},"body":{"components/AdminPopupComponent.html":{},"components/AdminSettingsComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{},"index.html":{}}}],["ngafterviewinit",{"_index":205,"title":{},"body":{"components/AdminPopupComponent.html":{}}}],["ngmodule",{"_index":287,"title":{},"body":{"modules/AdminPopupModule.html":{},"modules/GroupModule.html":{},"modules/LoginProvidersModule.html":{},"modules/NgUserManagementModule.html":{},"modules/RegisterModule.html":{},"modules/SpinnerModule.html":{},"modules/UserAdminSettingsModule.html":{},"modules/ValidationMessageModule.html":{},"index.html":{}}}],["ngondestroy",{"_index":206,"title":{},"body":{"components/AdminPopupComponent.html":{}}}],["ngoninit",{"_index":564,"title":{},"body":{"components/GroupListComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/SpinnerComponent.html":{},"components/ValidationMessageComponent.html":{}}}],["ngsnackbarfactory",{"_index":858,"title":{},"body":{"modules/NgUserManagementModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["ngsnackbarfactory(userprovidedsnackbar",{"_index":928,"title":{},"body":{"interfaces/SnackBarInterface.html":{},"miscellaneous/functions.html":{}}}],["ngsnackbartoken",{"_index":50,"title":{},"body":{"guards/AdminAuthGuardService.html":{},"injectables/AdminAuthService.html":{},"components/AdminSettingsComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"modules/NgUserManagementModule.html":{},"components/RegisterComponent.html":{},"interfaces/SnackBarInterface.html":{},"guards/UserAuthGuardService.html":{},"components/UserSettingsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ngusermanagementconfig",{"_index":436,"title":{"interfaces/ngUserManagementConfig.html":{}},"body":{"injectables/AuthenticationService.html":{},"modules/NgUserManagementModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"interfaces/ngUserManagementConfig.html":{},"miscellaneous/variables.html":{}}}],["ngusermanagementconfigfactory",{"_index":845,"title":{},"body":{"modules/NgUserManagementModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["ngusermanagementconfigfactory(userprovidedconfig",{"_index":1154,"title":{},"body":{"miscellaneous/functions.html":{},"interfaces/ngUserManagementConfig.html":{}}}],["ngusermanagementconfigtoken",{"_index":474,"title":{},"body":{"injectables/AuthenticationService.html":{},"modules/NgUserManagementModule.html":{},"coverage.html":{},"interfaces/ngUserManagementConfig.html":{},"miscellaneous/variables.html":{}}}],["ngusermanagementmodule",{"_index":826,"title":{"modules/NgUserManagementModule.html":{}},"body":{"modules/NgUserManagementModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["ngusermanagementmodule.forroot(firebaseconfig",{"_index":1226,"title":{},"body":{"index.html":{}}}],["ngx",{"_index":1120,"title":{},"body":{"dependencies.html":{}}}],["ngxauthfirebaseuiconfig",{"_index":1186,"title":{},"body":{"index.html":{}}}],["non",{"_index":1188,"title":{},"body":{"index.html":{}}}],["notanadminpromise",{"_index":82,"title":{},"body":{"guards/AdminAuthGuardService.html":{}}}],["npm",{"_index":1195,"title":{},"body":{"index.html":{}}}],["npx",{"_index":1250,"title":{},"body":{"index.html":{}}}],["nrwl/angular",{"_index":1124,"title":{},"body":{"dependencies.html":{}}}],["nrwl/workspace",{"_index":1126,"title":{},"body":{"dependencies.html":{}}}],["null",{"_index":78,"title":{},"body":{"guards/AdminAuthGuardService.html":{},"injectables/AuthenticationService.html":{},"components/GroupCreateComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"components/RegisterComponent.html":{},"interfaces/SnackBarInterface.html":{},"components/UserSettingsComponent.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":570,"title":{},"body":{"components/GroupListComponent.html":{},"classes/UserModel.html":{}}}],["object",{"_index":123,"title":{},"body":{"injectables/AdminAuthService.html":{},"components/AdminSettingsComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"injectables/GroupService.html":{},"components/GroupSettingsComponent.html":{},"injectables/UserService.html":{},"components/UserSettingsComponent.html":{}}}],["object.assign",{"_index":1273,"title":{},"body":{"interfaces/ngUserManagementConfig.html":{}}}],["observable",{"_index":35,"title":{},"body":{"guards/AdminAuthGuardService.html":{},"injectables/AdminAuthService.html":{},"components/AdminPopupComponent.html":{},"components/AdminSettingsComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"injectables/GroupService.html":{},"components/GroupUsersSettingsComponent.html":{},"guards/UserAuthGuardService.html":{},"injectables/UserService.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{}}}],["of(null",{"_index":997,"title":{},"body":{"injectables/UserService.html":{}}}],["of(user",{"_index":68,"title":{},"body":{"guards/AdminAuthGuardService.html":{}}}],["official",{"_index":914,"title":{},"body":{"interfaces/SnackBarInterface.html":{},"interfaces/ngUserManagementConfig.html":{},"miscellaneous/variables.html":{}}}],["once",{"_index":1200,"title":{},"body":{"index.html":{}}}],["ondestroy",{"_index":194,"title":{},"body":{"components/AdminPopupComponent.html":{}}}],["onfailed",{"_index":732,"title":{},"body":{"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{}}}],["oninit",{"_index":559,"title":{},"body":{"components/GroupListComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/SpinnerComponent.html":{},"components/ValidationMessageComponent.html":{}}}],["onsuccescreateaccount",{"_index":873,"title":{},"body":{"components/RegisterComponent.html":{}}}],["onsuccess",{"_index":733,"title":{},"body":{"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{}}}],["open",{"_index":297,"title":{},"body":{"injectables/AdminPopupService.html":{},"components/GroupListComponent.html":{},"interfaces/SnackBarInterface.html":{},"components/UserSettingsComponent.html":{}}}],["open(message",{"_index":909,"title":{},"body":{"interfaces/SnackBarInterface.html":{}}}],["openstart",{"_index":1251,"title":{},"body":{"index.html":{}}}],["optional",{"_index":27,"title":{},"body":{"guards/AdminAuthGuardService.html":{},"injectables/AdminAuthService.html":{},"components/AdminPopupComponent.html":{},"injectables/AdminPopupService.html":{},"components/AdminSettingsComponent.html":{},"injectables/AuthenticationService.html":{},"classes/Group.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"injectables/GroupService.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"modules/NgUserManagementModule.html":{},"components/RegisterComponent.html":{},"interfaces/SnackBarInterface.html":{},"guards/UserAuthGuardService.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{},"components/UserSettingsComponent.html":{},"miscellaneous/functions.html":{},"interfaces/ngUserManagementConfig.html":{}}}],["options",{"_index":777,"title":{},"body":{"components/LoginGoogleComponent.html":{}}}],["out",{"_index":284,"title":{},"body":{"modules/AdminPopupModule.html":{},"injectables/AuthenticationService.html":{},"modules/GroupModule.html":{},"modules/LoginProvidersModule.html":{},"modules/NgUserManagementModule.html":{},"modules/RegisterModule.html":{},"modules/SpinnerModule.html":{},"modules/UserAdminSettingsModule.html":{},"modules/ValidationMessageModule.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":749,"title":{},"body":{"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"components/RegisterComponent.html":{}}}],["outputs",{"_index":731,"title":{},"body":{"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"components/RegisterComponent.html":{}}}],["overview",{"_index":1274,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":623,"title":{},"body":{"injectables/GroupService.html":{}}}],["p",{"_index":1057,"title":{},"body":{"components/ValidationMessageComponent.html":{}}}],["package",{"_index":1105,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":396,"title":{},"body":{"components/AdminSettingsComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{}}}],["page",{"_index":737,"title":{},"body":{"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{}}}],["param",{"_index":159,"title":{},"body":{"injectables/AdminAuthService.html":{},"components/AdminSettingsComponent.html":{},"injectables/AuthenticationService.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"injectables/GroupService.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"components/RegisterComponent.html":{},"interfaces/SnackBarInterface.html":{},"injectables/UserService.html":{},"components/UserSettingsComponent.html":{},"interfaces/ngUserManagementConfig.html":{}}}],["parameters",{"_index":23,"title":{},"body":{"guards/AdminAuthGuardService.html":{},"injectables/AdminAuthService.html":{},"components/AdminPopupComponent.html":{},"injectables/AdminPopupService.html":{},"components/AdminSettingsComponent.html":{},"injectables/AuthenticationService.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"injectables/GroupService.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"modules/NgUserManagementModule.html":{},"components/RegisterComponent.html":{},"interfaces/SnackBarInterface.html":{},"guards/UserAuthGuardService.html":{},"injectables/UserService.html":{},"components/UserSettingsComponent.html":{},"miscellaneous/functions.html":{}}}],["part",{"_index":693,"title":{},"body":{"components/GroupUsersSettingsComponent.html":{}}}],["pass",{"_index":1282,"title":{},"body":{"miscellaneous/variables.html":{}}}],["password",{"_index":439,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginEmailPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ValidationMessageComponent.html":{},"index.html":{}}}],["password'},{'name",{"_index":259,"title":{},"body":{"components/AdminPopupComponent.html":{},"components/AdminSettingsComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{}}}],["password.component",{"_index":824,"title":{},"body":{"modules/LoginProvidersModule.html":{}}}],["password.component.css",{"_index":727,"title":{},"body":{"components/LoginEmailPasswordComponent.html":{}}}],["password.component.html",{"_index":728,"title":{},"body":{"components/LoginEmailPasswordComponent.html":{}}}],["password.component.ts",{"_index":726,"title":{},"body":{"components/LoginEmailPasswordComponent.html":{},"coverage.html":{}}}],["password.component.ts:18",{"_index":735,"title":{},"body":{"components/LoginEmailPasswordComponent.html":{}}}],["password.component.ts:23",{"_index":741,"title":{},"body":{"components/LoginEmailPasswordComponent.html":{}}}],["password.component.ts:27",{"_index":739,"title":{},"body":{"components/LoginEmailPasswordComponent.html":{}}}],["password.component.ts:32",{"_index":746,"title":{},"body":{"components/LoginEmailPasswordComponent.html":{}}}],["password.component.ts:34",{"_index":734,"title":{},"body":{"components/LoginEmailPasswordComponent.html":{}}}],["password.component.ts:37",{"_index":745,"title":{},"body":{"components/LoginEmailPasswordComponent.html":{}}}],["password.component.ts:40",{"_index":748,"title":{},"body":{"components/LoginEmailPasswordComponent.html":{}}}],["password.component.ts:53",{"_index":744,"title":{},"body":{"components/LoginEmailPasswordComponent.html":{}}}],["password/login",{"_index":725,"title":{},"body":{"components/LoginEmailPasswordComponent.html":{},"modules/LoginProvidersModule.html":{},"coverage.html":{}}}],["paste",{"_index":1231,"title":{},"body":{"index.html":{}}}],["peer",{"_index":1164,"title":{},"body":{"index.html":{}}}],["peerdependencies",{"_index":1192,"title":{},"body":{"index.html":{}}}],["permission",{"_index":96,"title":{},"body":{"guards/AdminAuthGuardService.html":{}}}],["please",{"_index":1189,"title":{},"body":{"index.html":{}}}],["popup",{"_index":198,"title":{},"body":{"components/AdminPopupComponent.html":{},"injectables/AdminPopupService.html":{},"components/AdminSettingsComponent.html":{},"injectables/AuthenticationService.html":{},"components/LoginGoogleComponent.html":{},"miscellaneous/enumerations.html":{}}}],["popup'},{'name",{"_index":247,"title":{},"body":{"components/AdminPopupComponent.html":{},"components/AdminSettingsComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{}}}],["popup.component",{"_index":288,"title":{},"body":{"modules/AdminPopupModule.html":{},"injectables/AdminPopupService.html":{},"modules/UserAdminSettingsModule.html":{}}}],["popup.component.css",{"_index":200,"title":{},"body":{"components/AdminPopupComponent.html":{}}}],["popup.component.html",{"_index":202,"title":{},"body":{"components/AdminPopupComponent.html":{}}}],["popup.component.ts",{"_index":192,"title":{},"body":{"components/AdminPopupComponent.html":{},"coverage.html":{}}}],["popup.component.ts:19",{"_index":215,"title":{},"body":{"components/AdminPopupComponent.html":{}}}],["popup.component.ts:23",{"_index":210,"title":{},"body":{"components/AdminPopupComponent.html":{}}}],["popup.component.ts:34",{"_index":211,"title":{},"body":{"components/AdminPopupComponent.html":{}}}],["popup.component.ts:36",{"_index":212,"title":{},"body":{"components/AdminPopupComponent.html":{}}}],["popup.component.ts:41",{"_index":213,"title":{},"body":{"components/AdminPopupComponent.html":{}}}],["popup.module",{"_index":854,"title":{},"body":{"modules/NgUserManagementModule.html":{}}}],["popup.module.ts",{"_index":285,"title":{},"body":{"modules/AdminPopupModule.html":{}}}],["popup.service",{"_index":371,"title":{},"body":{"components/AdminSettingsComponent.html":{},"injectables/AuthenticationService.html":{},"modules/NgUserManagementModule.html":{}}}],["popup.service.ts",{"_index":293,"title":{},"body":{"injectables/AdminPopupService.html":{},"coverage.html":{}}}],["popup.service.ts:17",{"_index":304,"title":{},"body":{"injectables/AdminPopupService.html":{}}}],["popup.service.ts:28",{"_index":305,"title":{},"body":{"injectables/AdminPopupService.html":{}}}],["popup.service.ts:42",{"_index":308,"title":{},"body":{"injectables/AdminPopupService.html":{}}}],["popup.service.ts:50",{"_index":307,"title":{},"body":{"injectables/AdminPopupService.html":{}}}],["popup.service.ts:57",{"_index":306,"title":{},"body":{"injectables/AdminPopupService.html":{}}}],["popup/admin",{"_index":191,"title":{},"body":{"components/AdminPopupComponent.html":{},"modules/AdminPopupModule.html":{},"injectables/AdminPopupService.html":{},"components/AdminSettingsComponent.html":{},"injectables/AuthenticationService.html":{},"modules/NgUserManagementModule.html":{},"modules/UserAdminSettingsModule.html":{},"coverage.html":{}}}],["position",{"_index":229,"title":{},"body":{"components/AdminPopupComponent.html":{},"components/AdminSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/SpinnerComponent.html":{}}}],["possible",{"_index":1046,"title":{},"body":{"components/ValidationMessageComponent.html":{}}}],["postcode",{"_index":977,"title":{},"body":{"classes/UserModel.html":{}}}],["poup",{"_index":789,"title":{},"body":{"components/LoginGoogleComponent.html":{}}}],["private",{"_index":105,"title":{},"body":{"injectables/AdminAuthService.html":{},"components/AdminPopupComponent.html":{},"injectables/AdminPopupService.html":{},"components/AdminSettingsComponent.html":{},"injectables/AuthenticationService.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"injectables/GroupService.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"components/RegisterComponent.html":{},"guards/UserAuthGuardService.html":{},"injectables/UserService.html":{},"components/UserSettingsComponent.html":{}}}],["process",{"_index":792,"title":{},"body":{"components/LoginGoogleComponent.html":{}}}],["processes",{"_index":1161,"title":{},"body":{"index.html":{}}}],["progress",{"_index":938,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["project",{"_index":1212,"title":{},"body":{"index.html":{}}}],["projectid",{"_index":1219,"title":{},"body":{"index.html":{},"interfaces/ngUserManagementConfig.html":{}}}],["projectid].appspot.com",{"_index":1272,"title":{},"body":{"interfaces/ngUserManagementConfig.html":{}}}],["projectid].firebaseapp.com",{"_index":1270,"title":{},"body":{"interfaces/ngUserManagementConfig.html":{}}}],["promise",{"_index":88,"title":{},"body":{"guards/AdminAuthGuardService.html":{},"injectables/AdminAuthService.html":{},"components/AdminSettingsComponent.html":{},"injectables/AuthenticationService.html":{},"components/GroupCreateComponent.html":{},"injectables/GroupService.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{},"components/UserSettingsComponent.html":{}}}],["promise.reject(err",{"_index":895,"title":{},"body":{"components/RegisterComponent.html":{},"components/UserSettingsComponent.html":{}}}],["promise.resolve",{"_index":83,"title":{},"body":{"guards/AdminAuthGuardService.html":{},"components/RegisterComponent.html":{},"components/UserSettingsComponent.html":{}}}],["properties",{"_index":11,"title":{},"body":{"guards/AdminAuthGuardService.html":{},"injectables/AdminAuthService.html":{},"components/AdminPopupComponent.html":{},"injectables/AdminPopupService.html":{},"components/AdminSettingsComponent.html":{},"injectables/AuthenticationService.html":{},"classes/Group.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"injectables/GroupService.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"components/RegisterComponent.html":{},"guards/UserAuthGuardService.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{},"interfaces/ngUserManagementConfig.html":{}}}],["propertyname",{"_index":1053,"title":{},"body":{"components/ValidationMessageComponent.html":{}}}],["protect",{"_index":1182,"title":{},"body":{"index.html":{}}}],["provide",{"_index":861,"title":{},"body":{"modules/NgUserManagementModule.html":{}}}],["provided",{"_index":920,"title":{},"body":{"interfaces/SnackBarInterface.html":{},"miscellaneous/functions.html":{},"interfaces/ngUserManagementConfig.html":{},"miscellaneous/variables.html":{}}}],["providedin",{"_index":157,"title":{},"body":{"injectables/AdminAuthService.html":{},"injectables/AuthenticationService.html":{},"injectables/GroupService.html":{},"injectables/UserService.html":{}}}],["provider",{"_index":453,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginGoogleComponent.html":{},"index.html":{}}}],["providers",{"_index":277,"title":{},"body":{"modules/AdminPopupModule.html":{},"modules/GroupModule.html":{},"modules/LoginProvidersModule.html":{},"modules/NgUserManagementModule.html":{},"modules/RegisterModule.html":{},"modules/SpinnerModule.html":{},"modules/UserAdminSettingsModule.html":{},"modules/ValidationMessageModule.html":{},"index.html":{},"overview.html":{}}}],["providers.module",{"_index":848,"title":{},"body":{"modules/NgUserManagementModule.html":{}}}],["providers.module.ts",{"_index":822,"title":{},"body":{"modules/LoginProvidersModule.html":{}}}],["providers/login",{"_index":823,"title":{},"body":{"modules/LoginProvidersModule.html":{}}}],["public",{"_index":12,"title":{},"body":{"guards/AdminAuthGuardService.html":{},"injectables/AdminAuthService.html":{},"components/AdminPopupComponent.html":{},"injectables/AdminPopupService.html":{},"components/AdminSettingsComponent.html":{},"injectables/AuthenticationService.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"injectables/GroupService.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"components/RegisterComponent.html":{},"guards/UserAuthGuardService.html":{},"injectables/UserService.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{},"index.html":{}}}],["publish",{"_index":1260,"title":{},"body":{"index.html":{}}}],["publishing",{"_index":1254,"title":{},"body":{"index.html":{}}}],["pwa/local",{"_index":1121,"title":{},"body":{"dependencies.html":{}}}],["reactiveformsmodule",{"_index":596,"title":{},"body":{"modules/GroupModule.html":{},"modules/LoginProvidersModule.html":{},"modules/RegisterModule.html":{},"modules/UserAdminSettingsModule.html":{}}}],["readonly",{"_index":980,"title":{},"body":{"injectables/UserService.html":{}}}],["red",{"_index":1058,"title":{},"body":{"components/ValidationMessageComponent.html":{}}}],["redirect",{"_index":457,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/GroupCreateComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"components/RegisterComponent.html":{},"components/UserSettingsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["redirecting",{"_index":466,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["redirectonlogout",{"_index":1006,"title":{},"body":{"components/UserSettingsComponent.html":{}}}],["redirectonsucces",{"_index":521,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"components/RegisterComponent.html":{}}}],["redirectresult",{"_index":433,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["reference",{"_index":310,"title":{},"body":{"injectables/AdminPopupService.html":{},"components/LoginGoogleComponent.html":{}}}],["register",{"_index":867,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register'},{'name",{"_index":263,"title":{},"body":{"components/AdminPopupComponent.html":{},"components/AdminSettingsComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{}}}],["register.component",{"_index":904,"title":{},"body":{"modules/RegisterModule.html":{}}}],["register.component.css",{"_index":868,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.html",{"_index":869,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register/register.module",{"_index":849,"title":{},"body":{"modules/NgUserManagementModule.html":{}}}],["registercomponent",{"_index":262,"title":{"components/RegisterComponent.html":{}},"body":{"components/AdminPopupComponent.html":{},"components/AdminSettingsComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"components/RegisterComponent.html":{},"modules/RegisterModule.html":{},"components/SpinnerComponent.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registerform",{"_index":870,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registermodule",{"_index":831,"title":{"modules/RegisterModule.html":{}},"body":{"modules/NgUserManagementModule.html":{},"modules/RegisterModule.html":{},"modules.html":{},"overview.html":{}}}],["registeruser",{"_index":871,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registeruser(email",{"_index":880,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registration",{"_index":1168,"title":{},"body":{"index.html":{}}}],["rejected",{"_index":89,"title":{},"body":{"guards/AdminAuthGuardService.html":{}}}],["remove",{"_index":340,"title":{},"body":{"components/AdminSettingsComponent.html":{},"components/GroupCreateComponent.html":{},"injectables/GroupService.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/UserSettingsComponent.html":{}}}],["removed",{"_index":721,"title":{},"body":{"components/GroupUsersSettingsComponent.html":{}}}],["removedialogcomponentfrombody",{"_index":298,"title":{},"body":{"injectables/AdminPopupService.html":{}}}],["removeuser",{"_index":681,"title":{},"body":{"components/GroupUsersSettingsComponent.html":{}}}],["removeuser(userid",{"_index":696,"title":{},"body":{"components/GroupUsersSettingsComponent.html":{}}}],["removeusersfromgroup",{"_index":613,"title":{},"body":{"injectables/GroupService.html":{}}}],["removeusersfromgroup('userid",{"_index":651,"title":{},"body":{"injectables/GroupService.html":{}}}],["removeusersfromgroup(userid",{"_index":629,"title":{},"body":{"injectables/GroupService.html":{}}}],["required",{"_index":1041,"title":{},"body":{"components/ValidationMessageComponent.html":{},"index.html":{}}}],["reset",{"_index":283,"title":{},"body":{"modules/AdminPopupModule.html":{},"modules/GroupModule.html":{},"modules/LoginProvidersModule.html":{},"modules/NgUserManagementModule.html":{},"modules/RegisterModule.html":{},"modules/SpinnerModule.html":{},"modules/UserAdminSettingsModule.html":{},"modules/ValidationMessageModule.html":{},"overview.html":{}}}],["result",{"_index":99,"title":{},"body":{"guards/AdminAuthGuardService.html":{},"injectables/AdminAuthService.html":{},"components/AdminPopupComponent.html":{},"modules/AdminPopupModule.html":{},"injectables/AdminPopupService.html":{},"components/AdminSettingsComponent.html":{},"injectables/AuthenticationService.html":{},"classes/Group.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"modules/GroupModule.html":{},"injectables/GroupService.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"modules/LoginProvidersModule.html":{},"modules/NgUserManagementModule.html":{},"components/RegisterComponent.html":{},"modules/RegisterModule.html":{},"interfaces/SnackBarInterface.html":{},"components/SpinnerComponent.html":{},"modules/SpinnerModule.html":{},"modules/UserAdminSettingsModule.html":{},"guards/UserAuthGuardService.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{},"modules/ValidationMessageModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"interfaces/ngUserManagementConfig.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["result.user",{"_index":813,"title":{},"body":{"components/LoginGoogleComponent.html":{}}}],["resulthandler",{"_index":768,"title":{},"body":{"components/LoginGoogleComponent.html":{}}}],["resulthandler(result",{"_index":784,"title":{},"body":{"components/LoginGoogleComponent.html":{}}}],["results",{"_index":101,"title":{},"body":{"guards/AdminAuthGuardService.html":{},"injectables/AdminAuthService.html":{},"components/AdminPopupComponent.html":{},"modules/AdminPopupModule.html":{},"injectables/AdminPopupService.html":{},"components/AdminSettingsComponent.html":{},"injectables/AuthenticationService.html":{},"classes/Group.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"modules/GroupModule.html":{},"injectables/GroupService.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"modules/LoginProvidersModule.html":{},"modules/NgUserManagementModule.html":{},"components/RegisterComponent.html":{},"modules/RegisterModule.html":{},"interfaces/SnackBarInterface.html":{},"components/SpinnerComponent.html":{},"modules/SpinnerModule.html":{},"modules/UserAdminSettingsModule.html":{},"guards/UserAuthGuardService.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{},"modules/ValidationMessageModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"interfaces/ngUserManagementConfig.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":57,"title":{},"body":{"guards/AdminAuthGuardService.html":{},"injectables/AdminAuthService.html":{},"components/AdminPopupComponent.html":{},"components/AdminSettingsComponent.html":{},"injectables/AuthenticationService.html":{},"components/GroupListComponent.html":{},"injectables/GroupService.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"modules/NgUserManagementModule.html":{},"components/RegisterComponent.html":{},"interfaces/SnackBarInterface.html":{},"guards/UserAuthGuardService.html":{},"injectables/UserService.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{},"interfaces/ngUserManagementConfig.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":34,"title":{},"body":{"guards/AdminAuthGuardService.html":{},"injectables/AdminAuthService.html":{},"components/AdminPopupComponent.html":{},"injectables/AdminPopupService.html":{},"components/AdminSettingsComponent.html":{},"injectables/AuthenticationService.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"injectables/GroupService.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"modules/NgUserManagementModule.html":{},"components/RegisterComponent.html":{},"interfaces/SnackBarInterface.html":{},"components/SpinnerComponent.html":{},"guards/UserAuthGuardService.html":{},"injectables/UserService.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{},"miscellaneous/functions.html":{}}}],["returntoadminaccount",{"_index":207,"title":{},"body":{"components/AdminPopupComponent.html":{}}}],["rgba(160",{"_index":405,"title":{},"body":{"components/AdminSettingsComponent.html":{}}}],["right",{"_index":424,"title":{},"body":{"components/AdminSettingsComponent.html":{},"components/GroupListComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{}}}],["role",{"_index":618,"title":{},"body":{"injectables/GroupService.html":{},"components/GroupUsersSettingsComponent.html":{}}}],["rolekey",{"_index":652,"title":{},"body":{"injectables/GroupService.html":{}}}],["root",{"_index":158,"title":{},"body":{"injectables/AdminAuthService.html":{},"injectables/AuthenticationService.html":{},"injectables/GroupService.html":{},"injectables/UserService.html":{}}}],["router",{"_index":524,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"components/RegisterComponent.html":{},"components/UserSettingsComponent.html":{}}}],["routerstatesnapshot",{"_index":31,"title":{},"body":{"guards/AdminAuthGuardService.html":{},"guards/UserAuthGuardService.html":{}}}],["routes",{"_index":1183,"title":{},"body":{"index.html":{}}}],["rules",{"_index":1242,"title":{},"body":{"index.html":{}}}],["run",{"_index":1235,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":43,"title":{},"body":{"guards/AdminAuthGuardService.html":{},"injectables/AdminAuthService.html":{},"components/AdminPopupComponent.html":{},"components/AdminSettingsComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"injectables/GroupService.html":{},"components/GroupUsersSettingsComponent.html":{},"guards/UserAuthGuardService.html":{},"injectables/UserService.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{},"dependencies.html":{},"index.html":{}}}],["rxjs/operators",{"_index":49,"title":{},"body":{"guards/AdminAuthGuardService.html":{},"injectables/AdminAuthService.html":{},"components/AdminPopupComponent.html":{},"components/AdminSettingsComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"injectables/GroupService.html":{},"components/GroupUsersSettingsComponent.html":{},"guards/UserAuthGuardService.html":{},"injectables/UserService.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{}}}],["save",{"_index":395,"title":{},"body":{"components/AdminSettingsComponent.html":{}}}],["second",{"_index":73,"title":{},"body":{"guards/AdminAuthGuardService.html":{}}}],["secondary",{"_index":469,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["secondaryapp",{"_index":434,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["selected",{"_index":362,"title":{},"body":{"components/AdminSettingsComponent.html":{},"components/GroupListComponent.html":{},"components/GroupUsersSettingsComponent.html":{}}}],["selecteduser",{"_index":334,"title":{},"body":{"components/AdminSettingsComponent.html":{}}}],["selecteduserform",{"_index":335,"title":{},"body":{"components/AdminSettingsComponent.html":{}}}],["selector",{"_index":196,"title":{},"body":{"components/AdminPopupComponent.html":{},"components/AdminSettingsComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{}}}],["sends",{"_index":878,"title":{},"body":{"components/RegisterComponent.html":{}}}],["serve",{"_index":1248,"title":{},"body":{"index.html":{}}}],["service",{"_index":794,"title":{},"body":{"components/LoginGoogleComponent.html":{}}}],["services/admin.auth.service",{"_index":370,"title":{},"body":{"components/AdminSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{}}}],["services/auth.service",{"_index":220,"title":{},"body":{"components/AdminPopupComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"components/RegisterComponent.html":{},"components/UserSettingsComponent.html":{}}}],["services/group.service",{"_index":539,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{}}}],["services/user.service",{"_index":218,"title":{},"body":{"components/AdminPopupComponent.html":{},"components/AdminSettingsComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"guards/UserAuthGuardService.html":{},"components/UserSettingsComponent.html":{}}}],["settings",{"_index":327,"title":{},"body":{"components/AdminSettingsComponent.html":{},"components/GroupListComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/UserSettingsComponent.html":{},"index.html":{}}}],["settings'},{'name",{"_index":249,"title":{},"body":{"components/AdminPopupComponent.html":{},"components/AdminSettingsComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{}}}],["settings.component",{"_index":603,"title":{},"body":{"modules/GroupModule.html":{}}}],["settings.component.css",{"_index":659,"title":{},"body":{"components/GroupSettingsComponent.html":{}}}],["settings.component.html",{"_index":660,"title":{},"body":{"components/GroupSettingsComponent.html":{}}}],["settings.component.ts",{"_index":658,"title":{},"body":{"components/GroupSettingsComponent.html":{},"coverage.html":{}}}],["settings.component.ts:17",{"_index":664,"title":{},"body":{"components/GroupSettingsComponent.html":{}}}],["settings.component.ts:22",{"_index":663,"title":{},"body":{"components/GroupSettingsComponent.html":{}}}],["settings.component.ts:24",{"_index":662,"title":{},"body":{"components/GroupSettingsComponent.html":{}}}],["settings.component.ts:27",{"_index":669,"title":{},"body":{"components/GroupSettingsComponent.html":{}}}],["settings.component.ts:34",{"_index":668,"title":{},"body":{"components/GroupSettingsComponent.html":{}}}],["settings.component.ts:48",{"_index":665,"title":{},"body":{"components/GroupSettingsComponent.html":{}}}],["settings.component.ts:62",{"_index":666,"title":{},"body":{"components/GroupSettingsComponent.html":{}}}],["settings/admin/admin",{"_index":476,"title":{},"body":{"injectables/AuthenticationService.html":{},"modules/NgUserManagementModule.html":{}}}],["settings/group",{"_index":602,"title":{},"body":{"modules/GroupModule.html":{},"components/GroupSettingsComponent.html":{},"coverage.html":{}}}],["settings/user.admin.settings.module",{"_index":850,"title":{},"body":{"modules/NgUserManagementModule.html":{}}}],["setup",{"_index":695,"title":{},"body":{"components/GroupUsersSettingsComponent.html":{}}}],["sharereplay",{"_index":991,"title":{},"body":{"injectables/UserService.html":{}}}],["sharereplay(1",{"_index":998,"title":{},"body":{"injectables/UserService.html":{}}}],["show",{"_index":120,"title":{},"body":{"injectables/AdminAuthService.html":{},"components/AdminSettingsComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/UserSettingsComponent.html":{}}}],["shown",{"_index":92,"title":{},"body":{"guards/AdminAuthGuardService.html":{}}}],["sign",{"_index":788,"title":{},"body":{"components/LoginGoogleComponent.html":{},"index.html":{}}}],["signinwithpopup",{"_index":769,"title":{},"body":{"components/LoginGoogleComponent.html":{}}}],["signinwithredirect",{"_index":770,"title":{},"body":{"components/LoginGoogleComponent.html":{}}}],["sinon",{"_index":1142,"title":{},"body":{"dependencies.html":{}}}],["snackbar",{"_index":14,"title":{},"body":{"guards/AdminAuthGuardService.html":{},"injectables/AdminAuthService.html":{},"components/AdminSettingsComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"modules/NgUserManagementModule.html":{},"components/RegisterComponent.html":{},"interfaces/SnackBarInterface.html":{},"guards/UserAuthGuardService.html":{},"components/UserSettingsComponent.html":{},"miscellaneous/functions.html":{}}}],["snackbarinterface",{"_index":20,"title":{"interfaces/SnackBarInterface.html":{}},"body":{"guards/AdminAuthGuardService.html":{},"injectables/AdminAuthService.html":{},"components/AdminSettingsComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"modules/NgUserManagementModule.html":{},"components/RegisterComponent.html":{},"interfaces/SnackBarInterface.html":{},"guards/UserAuthGuardService.html":{},"components/UserSettingsComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["snackbarmessage",{"_index":1005,"title":{},"body":{"components/UserSettingsComponent.html":{}}}],["snackbarmessage(message",{"_index":1012,"title":{},"body":{"components/UserSettingsComponent.html":{}}}],["solid",{"_index":419,"title":{},"body":{"components/AdminSettingsComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"guards/AdminAuthGuardService.html":{},"injectables/AdminAuthService.html":{},"components/AdminPopupComponent.html":{},"modules/AdminPopupModule.html":{},"injectables/AdminPopupService.html":{},"components/AdminSettingsComponent.html":{},"injectables/AuthenticationService.html":{},"classes/Group.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"modules/GroupModule.html":{},"injectables/GroupService.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"modules/LoginProvidersModule.html":{},"modules/NgUserManagementModule.html":{},"components/RegisterComponent.html":{},"modules/RegisterModule.html":{},"interfaces/SnackBarInterface.html":{},"components/SpinnerComponent.html":{},"modules/SpinnerModule.html":{},"modules/UserAdminSettingsModule.html":{},"guards/UserAuthGuardService.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{},"modules/ValidationMessageModule.html":{},"interfaces/ngUserManagementConfig.html":{}}}],["spinner",{"_index":932,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["spinner'},{'name",{"_index":265,"title":{},"body":{"components/AdminPopupComponent.html":{},"components/AdminSettingsComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{}}}],["spinner.component",{"_index":952,"title":{},"body":{"modules/SpinnerModule.html":{}}}],["spinner.component.css",{"_index":933,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["spinner.component.html",{"_index":934,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["spinner/spinner.module",{"_index":601,"title":{},"body":{"modules/GroupModule.html":{},"modules/LoginProvidersModule.html":{},"modules/NgUserManagementModule.html":{},"modules/RegisterModule.html":{},"modules/UserAdminSettingsModule.html":{}}}],["spinnercomponent",{"_index":264,"title":{"components/SpinnerComponent.html":{}},"body":{"components/AdminPopupComponent.html":{},"components/AdminSettingsComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"modules/SpinnerModule.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["spinnermodule",{"_index":593,"title":{"modules/SpinnerModule.html":{}},"body":{"modules/GroupModule.html":{},"modules/LoginProvidersModule.html":{},"modules/NgUserManagementModule.html":{},"modules/RegisterModule.html":{},"modules/SpinnerModule.html":{},"modules/UserAdminSettingsModule.html":{},"modules.html":{},"overview.html":{}}}],["standalone",{"_index":1167,"title":{},"body":{"index.html":{}}}],["start",{"_index":791,"title":{},"body":{"components/LoginGoogleComponent.html":{},"index.html":{}}}],["started",{"_index":1157,"title":{"index.html":{}},"body":{}}],["state",{"_index":30,"title":{},"body":{"guards/AdminAuthGuardService.html":{},"guards/UserAuthGuardService.html":{}}}],["statements",{"_index":1068,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":835,"title":{},"body":{"modules/NgUserManagementModule.html":{}}}],["still",{"_index":87,"title":{},"body":{"guards/AdminAuthGuardService.html":{}}}],["storage",{"_index":1122,"title":{},"body":{"dependencies.html":{}}}],["storagebucket",{"_index":1220,"title":{},"body":{"index.html":{},"interfaces/ngUserManagementConfig.html":{}}}],["stream",{"_index":62,"title":{},"body":{"guards/AdminAuthGuardService.html":{}}}],["street",{"_index":978,"title":{},"body":{"classes/UserModel.html":{}}}],["string",{"_index":127,"title":{},"body":{"injectables/AdminAuthService.html":{},"components/AdminPopupComponent.html":{},"components/AdminSettingsComponent.html":{},"injectables/AuthenticationService.html":{},"classes/Group.html":{},"components/GroupCreateComponent.html":{},"injectables/GroupService.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"modules/NgUserManagementModule.html":{},"components/RegisterComponent.html":{},"interfaces/SnackBarInterface.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{},"components/UserSettingsComponent.html":{}}}],["stroke",{"_index":939,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["styles",{"_index":187,"title":{},"body":{"components/AdminPopupComponent.html":{},"components/AdminSettingsComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{}}}],["styleurls",{"_index":199,"title":{},"body":{"components/AdminPopupComponent.html":{},"components/AdminSettingsComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{}}}],["succesful",{"_index":383,"title":{},"body":{"components/AdminSettingsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/UserSettingsComponent.html":{}}}],["succesfull",{"_index":742,"title":{},"body":{"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"components/UserSettingsComponent.html":{}}}],["succesfully",{"_index":529,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/RegisterComponent.html":{}}}],["support",{"_index":1264,"title":{},"body":{"modules.html":{}}}],["supported",{"_index":1160,"title":{},"body":{"index.html":{}}}],["sure",{"_index":1191,"title":{},"body":{"index.html":{}}}],["svg",{"_index":1265,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":925,"title":{},"body":{"interfaces/SnackBarInterface.html":{},"miscellaneous/functions.html":{}}}],["switchmap",{"_index":48,"title":{},"body":{"guards/AdminAuthGuardService.html":{},"injectables/UserService.html":{}}}],["switchmap((fbuser",{"_index":994,"title":{},"body":{"injectables/UserService.html":{}}}],["switchmap(user",{"_index":59,"title":{},"body":{"guards/AdminAuthGuardService.html":{}}}],["sync",{"_index":1180,"title":{},"body":{"index.html":{}}}],["table",{"_index":1104,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1103,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":219,"title":{},"body":{"components/AdminPopupComponent.html":{},"components/AdminSettingsComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"guards/UserAuthGuardService.html":{},"components/UserSettingsComponent.html":{}}}],["tap(isuser",{"_index":963,"title":{},"body":{"guards/UserAuthGuardService.html":{}}}],["tap(user",{"_index":223,"title":{},"body":{"components/AdminPopupComponent.html":{},"components/AdminSettingsComponent.html":{},"components/GroupCreateComponent.html":{},"components/UserSettingsComponent.html":{}}}],["tap(users",{"_index":705,"title":{},"body":{"components/GroupUsersSettingsComponent.html":{}}}],["template",{"_index":186,"title":{},"body":{"components/AdminPopupComponent.html":{},"components/AdminSettingsComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{}}}],["templateurl",{"_index":201,"title":{},"body":{"components/AdminPopupComponent.html":{},"components/AdminSettingsComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{}}}],["test",{"_index":1253,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1166,"title":{},"body":{"index.html":{}}}],["then((credential",{"_index":755,"title":{},"body":{"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{}}}],["then((usercredentials",{"_index":481,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["then(result",{"_index":390,"title":{},"body":{"components/AdminSettingsComponent.html":{}}}],["this.addextradata",{"_index":893,"title":{},"body":{"components/RegisterComponent.html":{},"components/UserSettingsComponent.html":{}}}],["this.adminauthservice.allusers",{"_index":374,"title":{},"body":{"components/AdminSettingsComponent.html":{}}}],["this.adminauthservice.impersonateuser(uid",{"_index":379,"title":{},"body":{"components/AdminSettingsComponent.html":{}}}],["this.adminauthservice.updateusersettings(uid",{"_index":389,"title":{},"body":{"components/AdminSettingsComponent.html":{}}}],["this.adminpopup.close",{"_index":497,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.adminpopup.open",{"_index":381,"title":{},"body":{"components/AdminSettingsComponent.html":{}}}],["this.adminservice.allusers.pipe",{"_index":704,"title":{},"body":{"components/GroupUsersSettingsComponent.html":{}}}],["this.adminsettingsform.controls['uid'].value",{"_index":380,"title":{},"body":{"components/AdminSettingsComponent.html":{}}}],["this.adminsettingsform.patchvalue(user",{"_index":372,"title":{},"body":{"components/AdminSettingsComponent.html":{}}}],["this.admintoken",{"_index":494,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.afauth.user.pipe",{"_index":58,"title":{},"body":{"guards/AdminAuthGuardService.html":{}}}],["this.allusers",{"_index":373,"title":{},"body":{"components/AdminSettingsComponent.html":{}}}],["this.angularfireauth.auth.getredirectresult",{"_index":492,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.angularfireauth.auth.signinwithemailandpassword(email",{"_index":490,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.angularfireauth.auth.signinwithpopup(authprovider",{"_index":493,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.angularfireauth.auth.signinwithredirect(authprovider",{"_index":491,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.angularfireauth.auth.signout",{"_index":496,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.angularfireauth.authstate.pipe",{"_index":993,"title":{},"body":{"injectables/UserService.html":{}}}],["this.appenddialogcomponenttobody",{"_index":324,"title":{},"body":{"injectables/AdminPopupService.html":{}}}],["this.appref.attachview(componentref.hostview",{"_index":315,"title":{},"body":{"injectables/AdminPopupService.html":{}}}],["this.appref.detachview(this.dialogcomponentref.hostview",{"_index":322,"title":{},"body":{"injectables/AdminPopupService.html":{}}}],["this.authenticationflowgoogle",{"_index":805,"title":{},"body":{"components/LoginGoogleComponent.html":{}}}],["this.authservice.createaccount(email",{"_index":892,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.authservice.loginwithcustomtoken(usertoken.data.customusertoken",{"_index":167,"title":{},"body":{"injectables/AdminAuthService.html":{}}}],["this.authservice.loginwithemailandpassword(email",{"_index":754,"title":{},"body":{"components/LoginEmailPasswordComponent.html":{}}}],["this.authservice.loginwithpopup(this.googleprovider",{"_index":810,"title":{},"body":{"components/LoginGoogleComponent.html":{}}}],["this.authservice.loginwithredirect(this.googleprovider",{"_index":809,"title":{},"body":{"components/LoginGoogleComponent.html":{}}}],["this.authservice.logout",{"_index":227,"title":{},"body":{"components/AdminPopupComponent.html":{},"components/UserSettingsComponent.html":{}}}],["this.authservice.redirectresult.then((result",{"_index":802,"title":{},"body":{"components/LoginGoogleComponent.html":{}}}],["this.componentfactoryresolver.resolvecomponentfactory(adminpopupcomponent",{"_index":313,"title":{},"body":{"injectables/AdminPopupService.html":{}}}],["this.control.errors",{"_index":1054,"title":{},"body":{"components/ValidationMessageComponent.html":{}}}],["this.control.touched",{"_index":1055,"title":{},"body":{"components/ValidationMessageComponent.html":{}}}],["this.control.valuechanges.pipe",{"_index":1051,"title":{},"body":{"components/ValidationMessageComponent.html":{}}}],["this.currentgroup",{"_index":720,"title":{},"body":{"components/GroupUsersSettingsComponent.html":{}}}],["this.currentgroup.groupid",{"_index":716,"title":{},"body":{"components/GroupUsersSettingsComponent.html":{}}}],["this.currentuser",{"_index":221,"title":{},"body":{"components/AdminPopupComponent.html":{},"components/AdminSettingsComponent.html":{},"components/UserSettingsComponent.html":{}}}],["this.curuser",{"_index":541,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["this.curuserid",{"_index":542,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["this.db.collection('groups",{"_index":634,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.db.collection('users",{"_index":990,"title":{},"body":{"injectables/UserService.html":{}}}],["this.db.collection('users').valuechanges().pipe",{"_index":177,"title":{},"body":{"injectables/AdminAuthService.html":{}}}],["this.db.createid",{"_index":639,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.dialogcomponentref",{"_index":321,"title":{},"body":{"injectables/AdminPopupService.html":{}}}],["this.dialogcomponentref.destroy",{"_index":323,"title":{},"body":{"injectables/AdminPopupService.html":{}}}],["this.displayusersettigs",{"_index":388,"title":{},"body":{"components/AdminSettingsComponent.html":{}}}],["this.errorhandler",{"_index":385,"title":{},"body":{"components/AdminSettingsComponent.html":{}}}],["this.errorhandler(e",{"_index":1025,"title":{},"body":{"components/UserSettingsComponent.html":{}}}],["this.errorhandler(err",{"_index":170,"title":{},"body":{"injectables/AdminAuthService.html":{}}}],["this.errorhandler(err.message",{"_index":550,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{}}}],["this.errorhandler(error",{"_index":804,"title":{},"body":{"components/LoginGoogleComponent.html":{}}}],["this.errorhandler({message",{"_index":393,"title":{},"body":{"components/AdminSettingsComponent.html":{}}}],["this.errormessage",{"_index":1050,"title":{},"body":{"components/ValidationMessageComponent.html":{}}}],["this.extragroupdata",{"_index":545,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/GroupSettingsComponent.html":{}}}],["this.fb.array",{"_index":708,"title":{},"body":{"components/GroupUsersSettingsComponent.html":{}}}],["this.fb.group",{"_index":712,"title":{},"body":{"components/GroupUsersSettingsComponent.html":{}}}],["this.fb.group({users",{"_index":707,"title":{},"body":{"components/GroupUsersSettingsComponent.html":{}}}],["this.formbuilder.group",{"_index":351,"title":{},"body":{"components/AdminSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/UserSettingsComponent.html":{}}}],["this.googleprovider",{"_index":798,"title":{},"body":{"components/LoginGoogleComponent.html":{}}}],["this.googleprovider.addscope('email",{"_index":800,"title":{},"body":{"components/LoginGoogleComponent.html":{}}}],["this.googleprovider.addscope('profile",{"_index":799,"title":{},"body":{"components/LoginGoogleComponent.html":{}}}],["this.groupcol.doc(group.groupid).set(groupdata",{"_index":656,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.groupcol.doc(groupid).delete",{"_index":657,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.groupcol.doc(groupid).set(groupdata",{"_index":647,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.groupcol.doc(groupid).update(data",{"_index":644,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.groupcol.doc(groupid).valuechanges().pipe",{"_index":641,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.groupcol.doc(newid).set(groupdata",{"_index":640,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.grouplist",{"_index":578,"title":{},"body":{"components/GroupListComponent.html":{}}}],["this.groupservice.adduserstogroup([userid",{"_index":715,"title":{},"body":{"components/GroupUsersSettingsComponent.html":{}}}],["this.groupservice.creategroup(this.curuserid",{"_index":544,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["this.groupservice.deletegroup(this.currentgroup.groupid",{"_index":673,"title":{},"body":{"components/GroupSettingsComponent.html":{}}}],["this.groupservice.removeusersfromgroup([userid",{"_index":719,"title":{},"body":{"components/GroupUsersSettingsComponent.html":{}}}],["this.groupservice.updategroupdata(this.currentgroup.groupid",{"_index":670,"title":{},"body":{"components/GroupSettingsComponent.html":{}}}],["this.groupsettingsactive",{"_index":583,"title":{},"body":{"components/GroupListComponent.html":{}}}],["this.loading",{"_index":377,"title":{},"body":{"components/AdminSettingsComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserSettingsComponent.html":{}}}],["this.loginform",{"_index":751,"title":{},"body":{"components/LoginEmailPasswordComponent.html":{}}}],["this.loginwithcustomtoken(this.admintoken",{"_index":498,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.onfailed.next(err.message",{"_index":760,"title":{},"body":{"components/LoginEmailPasswordComponent.html":{}}}],["this.onfailed.next(error.message",{"_index":815,"title":{},"body":{"components/LoginGoogleComponent.html":{}}}],["this.onsuccescreateaccount.emit(usercredentials",{"_index":894,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.onsuccess.next(credential",{"_index":757,"title":{},"body":{"components/LoginEmailPasswordComponent.html":{}}}],["this.onsuccess.next(result",{"_index":814,"title":{},"body":{"components/LoginGoogleComponent.html":{}}}],["this.redirectonlogout",{"_index":1027,"title":{},"body":{"components/UserSettingsComponent.html":{}}}],["this.redirectonsucces",{"_index":548,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"components/RegisterComponent.html":{}}}],["this.registerform",{"_index":886,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.removedialogcomponentfrombody",{"_index":325,"title":{},"body":{"injectables/AdminPopupService.html":{}}}],["this.resulthandler(credential",{"_index":811,"title":{},"body":{"components/LoginGoogleComponent.html":{}}}],["this.resulthandler(result",{"_index":803,"title":{},"body":{"components/LoginGoogleComponent.html":{}}}],["this.router.navigate([this.redirectonlogout",{"_index":1028,"title":{},"body":{"components/UserSettingsComponent.html":{}}}],["this.router.navigate([this.redirectonsucces",{"_index":549,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"components/RegisterComponent.html":{}}}],["this.secondaryapp.auth().createuserwithemailandpassword(email",{"_index":484,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.secondaryapp.auth().signout",{"_index":488,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.secondaryapp.firestore().collection('users').doc(credentials.user.uid).set(userdata",{"_index":487,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.selecteduser",{"_index":387,"title":{},"body":{"components/AdminSettingsComponent.html":{}}}],["this.selecteduserform",{"_index":375,"title":{},"body":{"components/AdminSettingsComponent.html":{}}}],["this.signinwithpopup",{"_index":808,"title":{},"body":{"components/LoginGoogleComponent.html":{}}}],["this.signinwithredirect",{"_index":807,"title":{},"body":{"components/LoginGoogleComponent.html":{}}}],["this.snackbar.open('delete",{"_index":674,"title":{},"body":{"components/GroupSettingsComponent.html":{}}}],["this.snackbar.open('group",{"_index":546,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["this.snackbar.open('insufficient",{"_index":95,"title":{},"body":{"guards/AdminAuthGuardService.html":{}}}],["this.snackbar.open('login",{"_index":382,"title":{},"body":{"components/AdminSettingsComponent.html":{}}}],["this.snackbar.open('update",{"_index":671,"title":{},"body":{"components/GroupSettingsComponent.html":{}}}],["this.snackbar.open('user",{"_index":717,"title":{},"body":{"components/GroupUsersSettingsComponent.html":{}}}],["this.snackbar.open('welcome",{"_index":756,"title":{},"body":{"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{}}}],["this.snackbar.open('you",{"_index":965,"title":{},"body":{"guards/UserAuthGuardService.html":{}}}],["this.snackbar.open(err.message",{"_index":759,"title":{},"body":{"components/LoginEmailPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["this.snackbar.open(error.message",{"_index":182,"title":{},"body":{"injectables/AdminAuthService.html":{},"components/AdminSettingsComponent.html":{},"components/LoginGoogleComponent.html":{}}}],["this.snackbar.open(errormessage",{"_index":551,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{}}}],["this.snackbar.open(message",{"_index":1030,"title":{},"body":{"components/UserSettingsComponent.html":{}}}],["this.snackbar.open(result",{"_index":391,"title":{},"body":{"components/AdminSettingsComponent.html":{}}}],["this.snackbarmessage('logout",{"_index":1026,"title":{},"body":{"components/UserSettingsComponent.html":{}}}],["this.snackbarmessage('update",{"_index":1024,"title":{},"body":{"components/UserSettingsComponent.html":{}}}],["this.snackbarmessage(err.message",{"_index":1029,"title":{},"body":{"components/UserSettingsComponent.html":{}}}],["this.snackbarmessage(error.message",{"_index":1031,"title":{},"body":{"components/UserSettingsComponent.html":{}}}],["this.user",{"_index":992,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usercollection.doc(fbuser.uid).valuechanges",{"_index":996,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usercollection.doc(uid).update(userdata",{"_index":999,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usercollection.doc(uid).valuechanges().pipe",{"_index":1000,"title":{},"body":{"injectables/UserService.html":{}}}],["this.useremail",{"_index":224,"title":{},"body":{"components/AdminPopupComponent.html":{}}}],["this.usergroups",{"_index":706,"title":{},"body":{"components/GroupUsersSettingsComponent.html":{}}}],["this.usergroups.get('users",{"_index":710,"title":{},"body":{"components/GroupUsersSettingsComponent.html":{}}}],["this.users",{"_index":703,"title":{},"body":{"components/GroupUsersSettingsComponent.html":{}}}],["this.userservice.updateuser(this.usersettingsform.controls['uid'].value",{"_index":1023,"title":{},"body":{"components/UserSettingsComponent.html":{}}}],["this.userservice.user$.pipe",{"_index":222,"title":{},"body":{"components/AdminPopupComponent.html":{},"components/AdminSettingsComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"guards/UserAuthGuardService.html":{},"components/UserSettingsComponent.html":{}}}],["this.usersettingsform.patchvalue(user",{"_index":1022,"title":{},"body":{"components/UserSettingsComponent.html":{}}}],["this.validationmessage[propertyname",{"_index":1056,"title":{},"body":{"components/ValidationMessageComponent.html":{}}}],["timing",{"_index":70,"title":{},"body":{"guards/AdminAuthGuardService.html":{}}}],["toaster",{"_index":1130,"title":{},"body":{"dependencies.html":{}}}],["toggle",{"_index":346,"title":{},"body":{"components/AdminSettingsComponent.html":{},"components/GroupListComponent.html":{}}}],["togglegroupsettings",{"_index":565,"title":{},"body":{"components/GroupListComponent.html":{}}}],["togglegroupsettings(index",{"_index":569,"title":{},"body":{"components/GroupListComponent.html":{}}}],["toggleusersettingspopup",{"_index":336,"title":{},"body":{"components/AdminSettingsComponent.html":{}}}],["toggleusersettingspopup(user",{"_index":344,"title":{},"body":{"components/AdminSettingsComponent.html":{}}}],["token",{"_index":446,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/SnackBarInterface.html":{},"interfaces/ngUserManagementConfig.html":{},"miscellaneous/variables.html":{}}}],["top",{"_index":231,"title":{},"body":{"components/AdminPopupComponent.html":{},"components/AdminSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/SpinnerComponent.html":{}}}],["traditional",{"_index":1177,"title":{},"body":{"index.html":{}}}],["transform",{"_index":413,"title":{},"body":{"components/AdminSettingsComponent.html":{},"components/SpinnerComponent.html":{}}}],["translate",{"_index":414,"title":{},"body":{"components/AdminSettingsComponent.html":{},"components/SpinnerComponent.html":{}}}],["tree",{"_index":189,"title":{},"body":{"components/AdminPopupComponent.html":{},"components/AdminSettingsComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{}}}],["true",{"_index":378,"title":{},"body":{"components/AdminSettingsComponent.html":{},"components/GroupCreateComponent.html":{},"injectables/GroupService.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/UserSettingsComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":160,"title":{},"body":{"injectables/AdminAuthService.html":{},"injectables/AuthenticationService.html":{},"components/GroupCreateComponent.html":{},"components/RegisterComponent.html":{},"components/UserSettingsComponent.html":{}}}],["tslib",{"_index":1144,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":26,"title":{},"body":{"guards/AdminAuthGuardService.html":{},"injectables/AdminAuthService.html":{},"components/AdminPopupComponent.html":{},"injectables/AdminPopupService.html":{},"components/AdminSettingsComponent.html":{},"injectables/AuthenticationService.html":{},"classes/Group.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"injectables/GroupService.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"modules/NgUserManagementModule.html":{},"components/RegisterComponent.html":{},"interfaces/SnackBarInterface.html":{},"guards/UserAuthGuardService.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{},"coverage.html":{},"interfaces/ngUserManagementConfig.html":{},"miscellaneous/variables.html":{}}}],["uid",{"_index":131,"title":{},"body":{"injectables/AdminAuthService.html":{},"components/AdminSettingsComponent.html":{},"injectables/AuthenticationService.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{},"components/UserSettingsComponent.html":{}}}],["unauthenticated",{"_index":793,"title":{},"body":{"components/LoginGoogleComponent.html":{},"index.html":{}}}],["undefined",{"_index":929,"title":{},"body":{"interfaces/SnackBarInterface.html":{}}}],["unit",{"_index":1252,"title":{},"body":{"index.html":{}}}],["up",{"_index":1178,"title":{},"body":{"index.html":{}}}],["update",{"_index":75,"title":{},"body":{"guards/AdminAuthGuardService.html":{},"injectables/AdminAuthService.html":{},"components/AdminSettingsComponent.html":{},"injectables/GroupService.html":{},"components/GroupSettingsComponent.html":{},"injectables/UserService.html":{},"components/UserSettingsComponent.html":{}}}],["update.data.message",{"_index":174,"title":{},"body":{"injectables/AdminAuthService.html":{}}}],["updategroupdata",{"_index":614,"title":{},"body":{"injectables/GroupService.html":{},"components/GroupSettingsComponent.html":{}}}],["updategroupdata('groupid",{"_index":643,"title":{},"body":{"injectables/GroupService.html":{}}}],["updategroupdata(groupdata",{"_index":667,"title":{},"body":{"components/GroupSettingsComponent.html":{}}}],["updategroupdata(groupid",{"_index":631,"title":{},"body":{"injectables/GroupService.html":{}}}],["updateon",{"_index":888,"title":{},"body":{"components/RegisterComponent.html":{}}}],["updateuser",{"_index":983,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuser(uid",{"_index":987,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuserdata",{"_index":171,"title":{},"body":{"injectables/AdminAuthService.html":{},"components/UserSettingsComponent.html":{}}}],["updateuserdata(data",{"_index":1014,"title":{},"body":{"components/UserSettingsComponent.html":{}}}],["updateuserdata({uid",{"_index":173,"title":{},"body":{"injectables/AdminAuthService.html":{}}}],["updateusersettings",{"_index":109,"title":{},"body":{"injectables/AdminAuthService.html":{},"components/AdminSettingsComponent.html":{}}}],["updateusersettings(uid",{"_index":138,"title":{},"body":{"injectables/AdminAuthService.html":{},"components/AdminSettingsComponent.html":{}}}],["updating",{"_index":367,"title":{},"body":{"components/AdminSettingsComponent.html":{},"components/GroupListComponent.html":{},"components/GroupSettingsComponent.html":{}}}],["url",{"_index":1209,"title":{},"body":{"index.html":{}}}],["usagenotes",{"_index":477,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/GroupService.html":{},"interfaces/ngUserManagementConfig.html":{}}}],["used",{"_index":136,"title":{},"body":{"injectables/AdminAuthService.html":{},"components/AdminSettingsComponent.html":{},"index.html":{}}}],["usefactory",{"_index":864,"title":{},"body":{"modules/NgUserManagementModule.html":{}}}],["user",{"_index":77,"title":{},"body":{"guards/AdminAuthGuardService.html":{},"injectables/AdminAuthService.html":{},"components/AdminPopupComponent.html":{},"components/AdminSettingsComponent.html":{},"injectables/AuthenticationService.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"injectables/GroupService.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"modules/NgUserManagementModule.html":{},"components/RegisterComponent.html":{},"interfaces/SnackBarInterface.html":{},"components/SpinnerComponent.html":{},"guards/UserAuthGuardService.html":{},"injectables/UserService.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{},"miscellaneous/functions.html":{},"index.html":{},"interfaces/ngUserManagementConfig.html":{},"miscellaneous/variables.html":{}}}],["user's",{"_index":1179,"title":{},"body":{"index.html":{}}}],["user.email",{"_index":225,"title":{},"body":{"components/AdminPopupComponent.html":{},"components/AdminSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{}}}],["user.getidtokenresult().catch",{"_index":90,"title":{},"body":{"guards/AdminAuthGuardService.html":{}}}],["user.groups",{"_index":713,"title":{},"body":{"components/GroupUsersSettingsComponent.html":{}}}],["user.groups.foreach(groupid",{"_index":581,"title":{},"body":{"components/GroupListComponent.html":{}}}],["user.groups.includes(this.currentgroup.groupid",{"_index":714,"title":{},"body":{"components/GroupUsersSettingsComponent.html":{}}}],["user.settings.component.css",{"_index":1002,"title":{},"body":{"components/UserSettingsComponent.html":{}}}],["user.settings.component.html",{"_index":1003,"title":{},"body":{"components/UserSettingsComponent.html":{}}}],["user.uid",{"_index":543,"title":{},"body":{"components/GroupCreateComponent.html":{}}}],["user/user.settings.component",{"_index":959,"title":{},"body":{"modules/UserAdminSettingsModule.html":{}}}],["useradminsettingsmodule",{"_index":832,"title":{"modules/UserAdminSettingsModule.html":{}},"body":{"modules/NgUserManagementModule.html":{},"modules/UserAdminSettingsModule.html":{},"modules.html":{},"overview.html":{}}}],["userauthguardservice",{"_index":855,"title":{"guards/UserAuthGuardService.html":{}},"body":{"modules/NgUserManagementModule.html":{},"guards/UserAuthGuardService.html":{},"coverage.html":{}}}],["usercollection",{"_index":981,"title":{},"body":{"injectables/UserService.html":{}}}],["usercredentials",{"_index":891,"title":{},"body":{"components/RegisterComponent.html":{}}}],["userdata",{"_index":347,"title":{},"body":{"components/AdminSettingsComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/UserService.html":{}}}],["useremail",{"_index":204,"title":{},"body":{"components/AdminPopupComponent.html":{}}}],["usergroups",{"_index":678,"title":{},"body":{"components/GroupUsersSettingsComponent.html":{}}}],["userid",{"_index":620,"title":{},"body":{"injectables/GroupService.html":{},"components/GroupUsersSettingsComponent.html":{},"injectables/UserService.html":{}}}],["userlist",{"_index":179,"title":{},"body":{"injectables/AdminAuthService.html":{}}}],["userlist.push(user",{"_index":181,"title":{},"body":{"injectables/AdminAuthService.html":{}}}],["usermanagement",{"_index":1198,"title":{},"body":{"index.html":{}}}],["usermanagement/src/lib/group/group",{"_index":511,"title":{},"body":{"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"coverage.html":{}}}],["usermanagement/src/lib/group/group.module.ts",{"_index":594,"title":{},"body":{"modules/GroupModule.html":{}}}],["usermanagement/src/lib/guards/admin",{"_index":7,"title":{},"body":{"guards/AdminAuthGuardService.html":{},"coverage.html":{}}}],["usermanagement/src/lib/guards/user",{"_index":961,"title":{},"body":{"guards/UserAuthGuardService.html":{},"coverage.html":{}}}],["usermanagement/src/lib/interfaces/firebase",{"_index":1079,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"interfaces/ngUserManagementConfig.html":{},"miscellaneous/variables.html":{}}}],["usermanagement/src/lib/interfaces/snackbar",{"_index":907,"title":{},"body":{"interfaces/SnackBarInterface.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["usermanagement/src/lib/login/login",{"_index":821,"title":{},"body":{"modules/LoginProvidersModule.html":{}}}],["usermanagement/src/lib/login/providers/login",{"_index":724,"title":{},"body":{"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["usermanagement/src/lib/models/group.model.ts",{"_index":503,"title":{},"body":{"classes/Group.html":{},"coverage.html":{}}}],["usermanagement/src/lib/models/group.model.ts:2",{"_index":507,"title":{},"body":{"classes/Group.html":{}}}],["usermanagement/src/lib/models/group.model.ts:3",{"_index":508,"title":{},"body":{"classes/Group.html":{}}}],["usermanagement/src/lib/models/group.model.ts:4",{"_index":506,"title":{},"body":{"classes/Group.html":{}}}],["usermanagement/src/lib/models/group.model.ts:5",{"_index":510,"title":{},"body":{"classes/Group.html":{}}}],["usermanagement/src/lib/models/user.model.ts",{"_index":966,"title":{},"body":{"classes/UserModel.html":{},"coverage.html":{}}}],["usermanagement/src/lib/models/user.model.ts:2",{"_index":974,"title":{},"body":{"classes/UserModel.html":{}}}],["usermanagement/src/lib/models/user.model.ts:3",{"_index":970,"title":{},"body":{"classes/UserModel.html":{}}}],["usermanagement/src/lib/models/user.model.ts:4",{"_index":973,"title":{},"body":{"classes/UserModel.html":{}}}],["usermanagement/src/lib/models/user.model.ts:5",{"_index":971,"title":{},"body":{"classes/UserModel.html":{}}}],["usermanagement/src/lib/models/user.model.ts:6",{"_index":972,"title":{},"body":{"classes/UserModel.html":{}}}],["usermanagement/src/lib/models/user.model.ts:7",{"_index":969,"title":{},"body":{"classes/UserModel.html":{}}}],["usermanagement/src/lib/ng",{"_index":833,"title":{},"body":{"modules/NgUserManagementModule.html":{}}}],["usermanagement/src/lib/register/register.component.ts",{"_index":866,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["usermanagement/src/lib/register/register.component.ts:18",{"_index":876,"title":{},"body":{"components/RegisterComponent.html":{}}}],["usermanagement/src/lib/register/register.component.ts:23",{"_index":875,"title":{},"body":{"components/RegisterComponent.html":{}}}],["usermanagement/src/lib/register/register.component.ts:28",{"_index":877,"title":{},"body":{"components/RegisterComponent.html":{}}}],["usermanagement/src/lib/register/register.component.ts:30",{"_index":882,"title":{},"body":{"components/RegisterComponent.html":{}}}],["usermanagement/src/lib/register/register.component.ts:35",{"_index":874,"title":{},"body":{"components/RegisterComponent.html":{}}}],["usermanagement/src/lib/register/register.component.ts:39",{"_index":883,"title":{},"body":{"components/RegisterComponent.html":{}}}],["usermanagement/src/lib/register/register.component.ts:55",{"_index":881,"title":{},"body":{"components/RegisterComponent.html":{}}}],["usermanagement/src/lib/register/register.module.ts",{"_index":901,"title":{},"body":{"modules/RegisterModule.html":{}}}],["usermanagement/src/lib/services/admin.auth.service.ts",{"_index":104,"title":{},"body":{"injectables/AdminAuthService.html":{},"coverage.html":{}}}],["usermanagement/src/lib/services/admin.auth.service.ts:14",{"_index":116,"title":{},"body":{"injectables/AdminAuthService.html":{}}}],["usermanagement/src/lib/services/admin.auth.service.ts:19",{"_index":146,"title":{},"body":{"injectables/AdminAuthService.html":{}}}],["usermanagement/src/lib/services/admin.auth.service.ts:28",{"_index":129,"title":{},"body":{"injectables/AdminAuthService.html":{}}}],["usermanagement/src/lib/services/admin.auth.service.ts:45",{"_index":140,"title":{},"body":{"injectables/AdminAuthService.html":{}}}],["usermanagement/src/lib/services/admin.auth.service.ts:58",{"_index":148,"title":{},"body":{"injectables/AdminAuthService.html":{}}}],["usermanagement/src/lib/services/admin.auth.service.ts:74",{"_index":119,"title":{},"body":{"injectables/AdminAuthService.html":{}}}],["usermanagement/src/lib/services/auth.service.ts",{"_index":425,"title":{},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{}}}],["usermanagement/src/lib/services/auth.service.ts:103",{"_index":458,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["usermanagement/src/lib/services/auth.service.ts:116",{"_index":468,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["usermanagement/src/lib/services/auth.service.ts:16",{"_index":437,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["usermanagement/src/lib/services/auth.service.ts:21",{"_index":463,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["usermanagement/src/lib/services/auth.service.ts:38",{"_index":441,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["usermanagement/src/lib/services/auth.service.ts:61",{"_index":448,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["usermanagement/src/lib/services/auth.service.ts:69",{"_index":456,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["usermanagement/src/lib/services/auth.service.ts:76",{"_index":465,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["usermanagement/src/lib/services/auth.service.ts:84",{"_index":451,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["usermanagement/src/lib/services/auth.service.ts:93",{"_index":444,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["usermanagement/src/lib/services/group.service.ts",{"_index":608,"title":{},"body":{"injectables/GroupService.html":{},"coverage.html":{}}}],["usermanagement/src/lib/services/group.service.ts:108",{"_index":630,"title":{},"body":{"injectables/GroupService.html":{}}}],["usermanagement/src/lib/services/group.service.ts:122",{"_index":625,"title":{},"body":{"injectables/GroupService.html":{}}}],["usermanagement/src/lib/services/group.service.ts:16",{"_index":616,"title":{},"body":{"injectables/GroupService.html":{}}}],["usermanagement/src/lib/services/group.service.ts:34",{"_index":622,"title":{},"body":{"injectables/GroupService.html":{}}}],["usermanagement/src/lib/services/group.service.ts:51",{"_index":628,"title":{},"body":{"injectables/GroupService.html":{}}}],["usermanagement/src/lib/services/group.service.ts:71",{"_index":632,"title":{},"body":{"injectables/GroupService.html":{}}}],["usermanagement/src/lib/services/group.service.ts:81",{"_index":619,"title":{},"body":{"injectables/GroupService.html":{}}}],["usermanagement/src/lib/services/user.service.ts",{"_index":979,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["usermanagement/src/lib/services/user.service.ts:15",{"_index":989,"title":{},"body":{"injectables/UserService.html":{}}}],["usermanagement/src/lib/services/user.service.ts:20",{"_index":984,"title":{},"body":{"injectables/UserService.html":{}}}],["usermanagement/src/lib/services/user.service.ts:38",{"_index":988,"title":{},"body":{"injectables/UserService.html":{}}}],["usermanagement/src/lib/services/user.service.ts:46",{"_index":986,"title":{},"body":{"injectables/UserService.html":{}}}],["usermanagement/src/lib/settings/admin/admin",{"_index":190,"title":{},"body":{"components/AdminPopupComponent.html":{},"modules/AdminPopupModule.html":{},"injectables/AdminPopupService.html":{},"coverage.html":{}}}],["usermanagement/src/lib/settings/admin/admin.settings.component.ts",{"_index":326,"title":{},"body":{"components/AdminSettingsComponent.html":{},"coverage.html":{}}}],["usermanagement/src/lib/settings/admin/admin.settings.component.ts:112",{"_index":339,"title":{},"body":{"components/AdminSettingsComponent.html":{}}}],["usermanagement/src/lib/settings/admin/admin.settings.component.ts:22",{"_index":358,"title":{},"body":{"components/AdminSettingsComponent.html":{}}}],["usermanagement/src/lib/settings/admin/admin.settings.component.ts:26",{"_index":356,"title":{},"body":{"components/AdminSettingsComponent.html":{}}}],["usermanagement/src/lib/settings/admin/admin.settings.component.ts:28",{"_index":364,"title":{},"body":{"components/AdminSettingsComponent.html":{}}}],["usermanagement/src/lib/settings/admin/admin.settings.component.ts:33",{"_index":365,"title":{},"body":{"components/AdminSettingsComponent.html":{}}}],["usermanagement/src/lib/settings/admin/admin.settings.component.ts:37",{"_index":360,"title":{},"body":{"components/AdminSettingsComponent.html":{}}}],["usermanagement/src/lib/settings/admin/admin.settings.component.ts:43",{"_index":366,"title":{},"body":{"components/AdminSettingsComponent.html":{}}}],["usermanagement/src/lib/settings/admin/admin.settings.component.ts:48",{"_index":354,"title":{},"body":{"components/AdminSettingsComponent.html":{}}}],["usermanagement/src/lib/settings/admin/admin.settings.component.ts:50",{"_index":338,"title":{},"body":{"components/AdminSettingsComponent.html":{}}}],["usermanagement/src/lib/settings/admin/admin.settings.component.ts:55",{"_index":363,"title":{},"body":{"components/AdminSettingsComponent.html":{}}}],["usermanagement/src/lib/settings/admin/admin.settings.component.ts:56",{"_index":368,"title":{},"body":{"components/AdminSettingsComponent.html":{}}}],["usermanagement/src/lib/settings/admin/admin.settings.component.ts:73",{"_index":342,"title":{},"body":{"components/AdminSettingsComponent.html":{}}}],["usermanagement/src/lib/settings/admin/admin.settings.component.ts:88",{"_index":345,"title":{},"body":{"components/AdminSettingsComponent.html":{}}}],["usermanagement/src/lib/settings/admin/admin.settings.component.ts:98",{"_index":348,"title":{},"body":{"components/AdminSettingsComponent.html":{}}}],["usermanagement/src/lib/settings/user.admin.settings.module.ts",{"_index":957,"title":{},"body":{"modules/UserAdminSettingsModule.html":{}}}],["usermanagement/src/lib/settings/user/user.settings.component.ts",{"_index":1001,"title":{},"body":{"components/UserSettingsComponent.html":{},"coverage.html":{}}}],["usermanagement/src/lib/settings/user/user.settings.component.ts:21",{"_index":1009,"title":{},"body":{"components/UserSettingsComponent.html":{}}}],["usermanagement/src/lib/settings/user/user.settings.component.ts:26",{"_index":1008,"title":{},"body":{"components/UserSettingsComponent.html":{}}}],["usermanagement/src/lib/settings/user/user.settings.component.ts:31",{"_index":1016,"title":{},"body":{"components/UserSettingsComponent.html":{}}}],["usermanagement/src/lib/settings/user/user.settings.component.ts:32",{"_index":1018,"title":{},"body":{"components/UserSettingsComponent.html":{}}}],["usermanagement/src/lib/settings/user/user.settings.component.ts:37",{"_index":1021,"title":{},"body":{"components/UserSettingsComponent.html":{}}}],["usermanagement/src/lib/settings/user/user.settings.component.ts:41",{"_index":1007,"title":{},"body":{"components/UserSettingsComponent.html":{}}}],["usermanagement/src/lib/settings/user/user.settings.component.ts:45",{"_index":1020,"title":{},"body":{"components/UserSettingsComponent.html":{}}}],["usermanagement/src/lib/settings/user/user.settings.component.ts:46",{"_index":1017,"title":{},"body":{"components/UserSettingsComponent.html":{}}}],["usermanagement/src/lib/settings/user/user.settings.component.ts:48",{"_index":1019,"title":{},"body":{"components/UserSettingsComponent.html":{}}}],["usermanagement/src/lib/settings/user/user.settings.component.ts:59",{"_index":1015,"title":{},"body":{"components/UserSettingsComponent.html":{}}}],["usermanagement/src/lib/settings/user/user.settings.component.ts:69",{"_index":1011,"title":{},"body":{"components/UserSettingsComponent.html":{}}}],["usermanagement/src/lib/settings/user/user.settings.component.ts:88",{"_index":1013,"title":{},"body":{"components/UserSettingsComponent.html":{}}}],["usermanagement/src/lib/settings/user/user.settings.component.ts:96",{"_index":1010,"title":{},"body":{"components/UserSettingsComponent.html":{}}}],["usermanagement/src/lib/spinner/spinner.component.ts",{"_index":931,"title":{},"body":{"components/SpinnerComponent.html":{},"coverage.html":{}}}],["usermanagement/src/lib/spinner/spinner.component.ts:12",{"_index":936,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["usermanagement/src/lib/spinner/spinner.component.ts:8",{"_index":935,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["usermanagement/src/lib/spinner/spinner.module.ts",{"_index":950,"title":{},"body":{"modules/SpinnerModule.html":{}}}],["usermanagement/src/lib/validation",{"_index":1032,"title":{},"body":{"components/ValidationMessageComponent.html":{},"modules/ValidationMessageModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usermanagementnavigate",{"_index":1256,"title":{},"body":{"index.html":{}}}],["usermodel",{"_index":154,"title":{"classes/UserModel.html":{}},"body":{"injectables/AdminAuthService.html":{},"components/AdminPopupComponent.html":{},"components/AdminSettingsComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"classes/UserModel.html":{},"injectables/UserService.html":{},"components/UserSettingsComponent.html":{},"coverage.html":{}}}],["username",{"_index":479,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["userprovided",{"_index":926,"title":{},"body":{"interfaces/SnackBarInterface.html":{},"miscellaneous/functions.html":{}}}],["userprovidedconfig",{"_index":1155,"title":{},"body":{"miscellaneous/functions.html":{},"interfaces/ngUserManagementConfig.html":{}}}],["userprovidedconfigtoken",{"_index":846,"title":{},"body":{"modules/NgUserManagementModule.html":{},"coverage.html":{},"interfaces/ngUserManagementConfig.html":{},"miscellaneous/variables.html":{}}}],["userprovidedsnackbar",{"_index":927,"title":{},"body":{"interfaces/SnackBarInterface.html":{},"miscellaneous/functions.html":{}}}],["userprovidedsnackbartoken",{"_index":857,"title":{},"body":{"modules/NgUserManagementModule.html":{},"interfaces/SnackBarInterface.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["users",{"_index":149,"title":{},"body":{"injectables/AdminAuthService.html":{},"components/AdminPopupComponent.html":{},"components/AdminSettingsComponent.html":{},"classes/Group.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"injectables/GroupService.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{},"index.html":{}}}],["users.component",{"_index":606,"title":{},"body":{"modules/GroupModule.html":{}}}],["users.component.css",{"_index":676,"title":{},"body":{"components/GroupUsersSettingsComponent.html":{}}}],["users.component.html",{"_index":677,"title":{},"body":{"components/GroupUsersSettingsComponent.html":{}}}],["users.component.ts",{"_index":675,"title":{},"body":{"components/GroupUsersSettingsComponent.html":{},"coverage.html":{}}}],["users.component.ts:106",{"_index":689,"title":{},"body":{"components/GroupUsersSettingsComponent.html":{}}}],["users.component.ts:22",{"_index":686,"title":{},"body":{"components/GroupUsersSettingsComponent.html":{}}}],["users.component.ts:27",{"_index":701,"title":{},"body":{"components/GroupUsersSettingsComponent.html":{}}}],["users.component.ts:32",{"_index":699,"title":{},"body":{"components/GroupUsersSettingsComponent.html":{}}}],["users.component.ts:34",{"_index":684,"title":{},"body":{"components/GroupUsersSettingsComponent.html":{}}}],["users.component.ts:39",{"_index":698,"title":{},"body":{"components/GroupUsersSettingsComponent.html":{}}}],["users.component.ts:47",{"_index":694,"title":{},"body":{"components/GroupUsersSettingsComponent.html":{}}}],["users.component.ts:68",{"_index":691,"title":{},"body":{"components/GroupUsersSettingsComponent.html":{}}}],["users.component.ts:78",{"_index":688,"title":{},"body":{"components/GroupUsersSettingsComponent.html":{}}}],["users.component.ts:92",{"_index":697,"title":{},"body":{"components/GroupUsersSettingsComponent.html":{}}}],["users.foreach((user",{"_index":709,"title":{},"body":{"components/GroupUsersSettingsComponent.html":{}}}],["users.foreach(user",{"_index":180,"title":{},"body":{"injectables/AdminAuthService.html":{}}}],["users/group",{"_index":605,"title":{},"body":{"modules/GroupModule.html":{},"components/GroupUsersSettingsComponent.html":{},"coverage.html":{}}}],["userservice",{"_index":209,"title":{"injectables/UserService.html":{}},"body":{"components/AdminPopupComponent.html":{},"components/AdminSettingsComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"guards/UserAuthGuardService.html":{},"injectables/UserService.html":{},"components/UserSettingsComponent.html":{},"coverage.html":{}}}],["usersettingscomponent",{"_index":266,"title":{"components/UserSettingsComponent.html":{}},"body":{"components/AdminPopupComponent.html":{},"components/AdminSettingsComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"modules/UserAdminSettingsModule.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["usersettingsform",{"_index":1004,"title":{},"body":{"components/UserSettingsComponent.html":{}}}],["usertoken",{"_index":163,"title":{},"body":{"injectables/AdminAuthService.html":{}}}],["usevalue",{"_index":862,"title":{},"body":{"modules/NgUserManagementModule.html":{}}}],["using",{"_index":801,"title":{},"body":{"components/LoginGoogleComponent.html":{}}}],["validating",{"_index":1040,"title":{},"body":{"components/ValidationMessageComponent.html":{}}}],["validation",{"_index":268,"title":{},"body":{"components/AdminPopupComponent.html":{},"components/AdminSettingsComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"components/RegisterComponent.html":{},"modules/RegisterModule.html":{},"components/SpinnerComponent.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{},"modules/ValidationMessageModule.html":{}}}],["validationerrors",{"_index":1281,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validationmessage",{"_index":1037,"title":{},"body":{"components/ValidationMessageComponent.html":{}}}],["validationmessagecomponent",{"_index":267,"title":{"components/ValidationMessageComponent.html":{}},"body":{"components/AdminPopupComponent.html":{},"components/AdminSettingsComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{},"modules/ValidationMessageModule.html":{},"coverage.html":{},"overview.html":{}}}],["validationmessagemodule",{"_index":900,"title":{"modules/ValidationMessageModule.html":{}},"body":{"modules/RegisterModule.html":{},"modules/ValidationMessageModule.html":{},"modules.html":{},"overview.html":{}}}],["validatorfn",{"_index":1280,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validators",{"_index":750,"title":{},"body":{"components/LoginEmailPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.email",{"_index":752,"title":{},"body":{"components/LoginEmailPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.required",{"_index":753,"title":{},"body":{"components/LoginEmailPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["value",{"_index":74,"title":{},"body":{"guards/AdminAuthGuardService.html":{},"components/AdminSettingsComponent.html":{},"injectables/AuthenticationService.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"injectables/GroupService.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"modules/NgUserManagementModule.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":245,"title":{},"body":{"components/AdminPopupComponent.html":{},"components/AdminSettingsComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"injectables/GroupService.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginEmailPasswordComponent.html":{},"components/LoginGoogleComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{}}}],["variable",{"_index":341,"title":{},"body":{"components/AdminSettingsComponent.html":{},"components/UserSettingsComponent.html":{},"coverage.html":{}}}],["variables",{"_index":1278,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verify",{"_index":1044,"title":{},"body":{"components/ValidationMessageComponent.html":{},"index.html":{}}}],["verifypassword",{"_index":884,"title":{},"body":{"components/RegisterComponent.html":{},"components/ValidationMessageComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["via",{"_index":1185,"title":{},"body":{"index.html":{}}}],["void",{"_index":125,"title":{},"body":{"injectables/AdminAuthService.html":{},"components/AdminPopupComponent.html":{},"injectables/AdminPopupService.html":{},"components/AdminSettingsComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupUsersSettingsComponent.html":{},"components/LoginGoogleComponent.html":{},"modules/NgUserManagementModule.html":{},"components/SpinnerComponent.html":{},"components/UserSettingsComponent.html":{},"components/ValidationMessageComponent.html":{}}}],["wait",{"_index":72,"title":{},"body":{"guards/AdminAuthGuardService.html":{}}}],["white",{"_index":416,"title":{},"body":{"components/AdminSettingsComponent.html":{}}}],["width",{"_index":237,"title":{},"body":{"components/AdminPopupComponent.html":{},"components/AdminSettingsComponent.html":{},"components/GroupCreateComponent.html":{},"components/GroupListComponent.html":{},"components/GroupSettingsComponent.html":{},"components/SpinnerComponent.html":{},"components/UserSettingsComponent.html":{}}}],["within",{"_index":150,"title":{},"body":{"injectables/AdminAuthService.html":{},"components/LoginGoogleComponent.html":{}}}],["yes",{"_index":442,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/GroupService.html":{},"modules/NgUserManagementModule.html":{},"interfaces/SnackBarInterface.html":{}}}],["z",{"_index":421,"title":{},"body":{"components/AdminSettingsComponent.html":{}}}],["zone.js",{"_index":1146,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":282,"title":{},"body":{"modules/AdminPopupModule.html":{},"modules/GroupModule.html":{},"modules/LoginProvidersModule.html":{},"modules/NgUserManagementModule.html":{},"modules/RegisterModule.html":{},"modules/SpinnerModule.html":{},"modules/UserAdminSettingsModule.html":{},"modules/ValidationMessageModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"guards/AdminAuthGuardService.html":{"url":"guards/AdminAuthGuardService.html","title":"guard - AdminAuthGuardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AdminAuthGuardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                libs/ng-usermanagement/src/lib/guards/admin-auth-guard.service.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                afAuth\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(afAuth: AngularFireAuth, snackBar: SnackBarInterface)\n                    \n                \n                        \n                            \n                                Defined in libs/ng-usermanagement/src/lib/guards/admin-auth-guard.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        afAuth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                        SnackBarInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in libs/ng-usermanagement/src/lib/guards/admin-auth-guard.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    next\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Inject, Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot } from '@angular/router';\nimport { interval, Observable, of } from 'rxjs';\nimport { debounce, distinctUntilChanged, flatMap, map, switchMap } from 'rxjs/operators';\nimport { NgSnackBarToken, SnackBarInterface } from '../interfaces/snackbar-config.interface';\n\n@Injectable()\nexport class AdminAuthGuardService implements CanActivate {\n\n  constructor(\n    public afAuth: AngularFireAuth,\n    @Inject(NgSnackBarToken) public snackBar: SnackBarInterface\n    ) {\n  }\n\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {''\n    return this.afAuth.user.pipe(\n      distinctUntilChanged(),\n      switchMap(user => {\n        // Keeping the main observable stream alive by creating a disposable stream\n        const disposableStream$ = of(user);\n        return disposableStream$.pipe(\n          // Timing of the observable can be an issue so we wait a second for the value stream to update\n          debounce(user => { \n            if (user === null) {\n              return interval(1000);\n            } else {\n              return interval(0);\n            }\n          }),\n          flatMap((user) => {\n\n            const notAnAdminPromise = Promise.resolve({ \n              claims: {\n                admin: false\n              }\n            });\n\n            // If the user is still null or the promise is rejected we return a admin user with the value of false \n            if (user === null) {\n              return notAnAdminPromise;\n            } else {\n              return user.getIdTokenResult().catch(() => {\n                return notAnAdminPromise;\n              });\n            }\n          }),\n          map((IdTokenResult) => { \n            // If the user is not an admin a snackbar is shown\n            const isAdmin = IdTokenResult.claims.admin;\n            if (!isAdmin) {\n              this.snackBar.open('insufficient permission', '', { duration: 2000 }); \n            }\n            return isAdmin;\n          })\n        )\n      })\n    )\n  }\n}\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminAuthService.html":{"url":"injectables/AdminAuthService.html","title":"injectable - AdminAuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AdminAuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ng-usermanagement/src/lib/services/admin.auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                snackBar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                errorHandler\n                            \n                            \n                                    Async\n                                impersonateUser\n                            \n                            \n                                    Async\n                                updateUserSettings\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    allUsers\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, db: AngularFirestore, snackBar: SnackBarInterface)\n                    \n                \n                        \n                            \n                                Defined in libs/ng-usermanagement/src/lib/services/admin.auth.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        db\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                        SnackBarInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            errorHandler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    errorHandler(error: any)\n                \n            \n\n\n            \n                \n                    Defined in libs/ng-usermanagement/src/lib/services/admin.auth.service.ts:74\n                \n            \n\n\n            \n                \n                    Show a snackbar of the error\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nAn error Object with an message\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            impersonateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    impersonateUser(uid: string, adminUid: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ng-usermanagement/src/lib/services/admin.auth.service.ts:28\n                \n            \n\n\n            \n                \n                    Login as an other user\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the user being impersonated\n\n                                    \n                                \n                                \n                                    adminUid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the admin/user impersonating used to login again\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateUserSettings\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUserSettings(uid: string, data: Object)\n                \n            \n\n\n            \n                \n                    Defined in libs/ng-usermanagement/src/lib/services/admin.auth.service.ts:45\n                \n            \n\n\n            \n                \n                    Update the firestore database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        user id\n\n                                    \n                                \n                                \n                                    data\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        given data to update\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SnackBarInterface\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(NgSnackBarToken)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/ng-usermanagement/src/lib/services/admin.auth.service.ts:19\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        allUsers\n                    \n                \n\n                \n                    \n                        getallUsers()\n                    \n                \n                            \n                                \n                                    Defined in libs/ng-usermanagement/src/lib/services/admin.auth.service.ts:58\n                                \n                            \n                    \n                        \n                                Get all of the users within the users collection\n\n\n                                \n                                    Returns :         Observable\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport * as firebase from 'firebase';\nimport { auth } from 'firebase';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { NgSnackBarToken, SnackBarInterface } from '../interfaces/snackbar-config.interface';\nimport { UserModel } from '../models/user.model';\nimport { AuthenticationService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminAuthService {\n\n  constructor(\n    private authService: AuthenticationService,\n    private db: AngularFirestore,\n    @Inject(NgSnackBarToken) public snackBar: SnackBarInterface\n    )\n  {}\n\n  /**\n   * Login as an other user\n   * @param uid the user being impersonated\n   * @param adminUid the admin/user impersonating used to login again\n   */\n  async impersonateUser(uid: string, adminUid: string): Promise {\n    try {\n      const createUserToken = firebase.functions().httpsCallable('createUserToken');\n      const userToken = await createUserToken({uid: uid})\n      const adminToken = await createUserToken({uid: adminUid})\n\n      return this.authService.loginWithCustomToken(userToken.data.customUserToken, adminToken.data.customUserToken)\n    } catch(err) {\n      this.errorHandler(err)\n    }\n  }\n\n  /**\n   * Update the firestore database\n   * @param uid user id\n   * @param data given data to update\n   */\n  async updateUserSettings(uid: string, data: Object): Promise {\n    try {\n      const updateUserData = firebase.functions().httpsCallable('updateUserData');\n      const update = await updateUserData({uid: uid, ...data});\n      return update.data.message\n    } catch (err) {\n      this.errorHandler(err);\n    }\n  }\n\n  /**\n   * Get all of the users within the users collection\n   */\n  get allUsers(): Observable  {\n    return this.db.collection('users').valueChanges().pipe(\n      map(users => {\n        let userList: UserModel[] = [];\n        users.forEach(user => {\n          userList.push(user as UserModel);\n        });\n        return userList;\n      })\n    );\n  }\n  \n  /**\n   * Show a snackbar of the error\n   * @param {any} error - An error Object with an message\n   */\n  private errorHandler(error: any): void {\n    this.snackBar.open(error.message, '', { duration: 2000 });\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminPopupComponent.html":{"url":"components/AdminPopupComponent.html","title":"component - AdminPopupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AdminPopupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ng-usermanagement/src/lib/settings/admin/admin-popup/admin-popup.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ng-admin-popup\n            \n\n            \n                styleUrls\n                ./admin-popup.component.css\n            \n\n\n\n            \n                templateUrl\n                ./admin-popup.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentUser$\n                            \n                            \n                                    Public\n                                userEmail\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                returnToAdminAccount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in libs/ng-usermanagement/src/lib/settings/admin/admin-popup/admin-popup.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in libs/ng-usermanagement/src/lib/settings/admin/admin-popup/admin-popup.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in libs/ng-usermanagement/src/lib/settings/admin/admin-popup/admin-popup.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            returnToAdminAccount\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    returnToAdminAccount()\n                \n            \n\n\n            \n                \n                    Defined in libs/ng-usermanagement/src/lib/settings/admin/admin-popup/admin-popup.component.ts:41\n                \n            \n\n\n            \n                \n                    return the admin to his account\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentUser$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ng-usermanagement/src/lib/settings/admin/admin-popup/admin-popup.component.ts:19\n                            \n                        \n\n                \n                    \n                        Current user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userEmail\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ng-usermanagement/src/lib/settings/admin/admin-popup/admin-popup.component.ts:23\n                            \n                        \n\n                \n                    \n                        The email of the current user\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, AfterViewInit, OnDestroy } from '@angular/core';\nimport { UserModel } from '../../../models/user.model';\nimport { UserService } from '../../../services/user.service';\nimport { Observable } from 'rxjs';\nimport { tap, map } from 'rxjs/operators';\nimport { AuthenticationService } from '../../../services/auth.service';\n\n@Component({\n  selector: 'ng-admin-popup',\n  templateUrl: './admin-popup.component.html',\n  styleUrls: ['./admin-popup.component.css'],\n})\n\nexport class AdminPopupComponent implements AfterViewInit, OnDestroy {\n  \n  /**\n   * Current user\n   */\n  public currentUser$: Observable;\n  /**\n   * The email of the current user\n   */\n  public userEmail: string;\n  \n  constructor(\n    private userService: UserService,\n    private authService: AuthenticationService){\n    this.currentUser$ = this.userService.user$.pipe(\n      tap(user => this.userEmail = user.email),\n      map(user => user)\n      );\n    }\n    \n  ngAfterViewInit(): void {}\n\n  ngOnDestroy(): void {}\n\n  /**\n   * return the admin to his account\n   */\n  public returnToAdminAccount(): void {\n    this.authService.logout();\n  }\n\n}\n    \n\n    \n        \n\n  Current logged in user: {{ userEmail }}\n  \n  Return\n\n    \n\n    \n                \n                    ./admin-popup.component.css\n                \n                .admin-popup {\n  position: fixed;\n  top: 5px;\n  left: 5px;\n  background-color: aliceblue;\n  width: 150px;\n  height: 100px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Current logged in user: {{ userEmail }}    Return'\n    var COMPONENTS = [{'name': 'AdminPopupComponent', 'selector': 'ng-admin-popup'},{'name': 'AdminSettingsComponent', 'selector': 'ng-admin-settings'},{'name': 'GroupCreateComponent', 'selector': 'ng-create-group'},{'name': 'GroupListComponent', 'selector': 'ng-group-list'},{'name': 'GroupSettingsComponent', 'selector': 'ng-group-settings'},{'name': 'GroupUsersSettingsComponent', 'selector': 'ng-group-users-settings'},{'name': 'LoginEmailPasswordComponent', 'selector': 'ng-login-email-password'},{'name': 'LoginGoogleComponent', 'selector': 'ng-login-google'},{'name': 'RegisterComponent', 'selector': 'ng-register'},{'name': 'SpinnerComponent', 'selector': 'ng-spinner'},{'name': 'UserSettingsComponent', 'selector': 'ng-user-settings'},{'name': 'ValidationMessageComponent', 'selector': 'ng-validation-message'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminPopupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AdminPopupModule.html":{"url":"modules/AdminPopupModule.html","title":"module - AdminPopupModule","body":"\n                   \n\n\n\n\n    Modules\n    AdminPopupModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminPopupModule\n\n\n\ncluster_AdminPopupModule_declarations\n\n\n\ncluster_AdminPopupModule_exports\n\n\n\n\nAdminPopupComponent\n\nAdminPopupComponent\n\n\n\nAdminPopupModule\n\nAdminPopupModule\n\nAdminPopupModule -->\n\nAdminPopupComponent->AdminPopupModule\n\n\n\n\n\nAdminPopupComponent \n\nAdminPopupComponent \n\nAdminPopupComponent  -->\n\nAdminPopupModule->AdminPopupComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ng-usermanagement/src/lib/settings/admin/admin-popup/admin-popup.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AdminPopupComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            AdminPopupComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AdminPopupComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core'\nimport { AdminPopupComponent } from './admin-popup.component'\nimport { CommonModule } from '@angular/common'\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  declarations: [\n    AdminPopupComponent, \n  ],\n  exports:[\n    AdminPopupComponent, \n  ],\n  entryComponents: [\n    AdminPopupComponent\n  ],\n})\nexport class AdminPopupModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminPopupService.html":{"url":"injectables/AdminPopupService.html","title":"injectable - AdminPopupService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AdminPopupService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ng-usermanagement/src/lib/settings/admin/admin-popup/admin-popup.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dialogComponentRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                appendDialogComponentToBody\n                            \n                            \n                                    Public\n                                close\n                            \n                            \n                                    Public\n                                open\n                            \n                            \n                                    Private\n                                removeDialogComponentFromBody\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(componentFactoryResolver: ComponentFactoryResolver, appRef: ApplicationRef, injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in libs/ng-usermanagement/src/lib/settings/admin/admin-popup/admin-popup.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentFactoryResolver\n                                                  \n                                                        \n                                                                        ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        appRef\n                                                  \n                                                        \n                                                                        ApplicationRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            appendDialogComponentToBody\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    appendDialogComponentToBody()\n                \n            \n\n\n            \n                \n                    Defined in libs/ng-usermanagement/src/lib/settings/admin/admin-popup/admin-popup.service.ts:28\n                \n            \n\n\n            \n                \n                    open the admin popup\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            close\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    close()\n                \n            \n\n\n            \n                \n                    Defined in libs/ng-usermanagement/src/lib/settings/admin/admin-popup/admin-popup.service.ts:57\n                \n            \n\n\n            \n                \n                    close the admin popup\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            open\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    open()\n                \n            \n\n\n            \n                \n                    Defined in libs/ng-usermanagement/src/lib/settings/admin/admin-popup/admin-popup.service.ts:50\n                \n            \n\n\n            \n                \n                    open the admin popup\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            removeDialogComponentFromBody\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeDialogComponentFromBody()\n                \n            \n\n\n            \n                \n                    Defined in libs/ng-usermanagement/src/lib/settings/admin/admin-popup/admin-popup.service.ts:42\n                \n            \n\n\n            \n                \n                    close the admin popup\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dialogComponentRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ComponentRef\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ng-usermanagement/src/lib/settings/admin/admin-popup/admin-popup.service.ts:17\n                            \n                        \n\n                \n                    \n                        A reference to the admin popup component\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  ComponentFactoryResolver,\n  ApplicationRef,\n  Injector,\n  EmbeddedViewRef,\n  ComponentRef,\n} from '@angular/core'\nimport { AdminPopupComponent } from './admin-popup.component'\n\n@Injectable()\nexport class AdminPopupService {\n  /**\n   * A reference to the admin popup component\n   */\n  dialogComponentRef: ComponentRef\n\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private appRef: ApplicationRef,\n    private injector: Injector\n  ) {}\n\n  /**\n   * open the admin popup\n   */\n  private appendDialogComponentToBody(){\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(AdminPopupComponent);\n    const componentRef = componentFactory.create(this.injector);\n    this.appRef.attachView(componentRef.hostView);\n  \n    const domElem = (componentRef.hostView as EmbeddedViewRef).rootNodes[0] as HTMLElement;\n    document.body.appendChild(domElem);\n  \n    this.dialogComponentRef = componentRef;\n  }\n\n  /**\n   * close the admin popup\n   */\n  private removeDialogComponentFromBody() {\n    this.appRef.detachView(this.dialogComponentRef.hostView);\n    this.dialogComponentRef.destroy();\n  }\n\n  /**\n   * open the admin popup\n   */\n  public open() {\n    this.appendDialogComponentToBody();\n  }\n\n  /**\n   * close the admin popup\n   */\n  public close() {\n    this.removeDialogComponentFromBody();\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminSettingsComponent.html":{"url":"components/AdminSettingsComponent.html","title":"component - AdminSettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AdminSettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ng-usermanagement/src/lib/settings/admin/admin.settings.Component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ng-admin-settings\n            \n\n            \n                styleUrls\n                ./admin.settings.component.css\n            \n\n\n\n            \n                templateUrl\n                ./admin.settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                adminSettingsForm\n                            \n                            \n                                    Public\n                                allUsers$\n                            \n                            \n                                    Public\n                                currentUser$\n                            \n                            \n                                displayUserSettigs\n                            \n                            \n                                    Public\n                                formBuilder\n                            \n                            \n                                    Public\n                                loading\n                            \n                            \n                                selectedUser\n                            \n                            \n                                    Public\n                                selectedUserForm\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                errorHandler\n                            \n                            \n                                    Public\n                                    Async\n                                impersonateUser\n                            \n                            \n                                    Public\n                                toggleUserSettingsPopup\n                            \n                            \n                                    Public\n                                updateUserSettings\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, adminAuthService: AdminAuthService, formBuilder: FormBuilder, snackBar: SnackBarInterface, adminPopup: AdminPopupService)\n                    \n                \n                        \n                            \n                                Defined in libs/ng-usermanagement/src/lib/settings/admin/admin.settings.Component.ts:50\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        adminAuthService\n                                                  \n                                                        \n                                                                        AdminAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                        SnackBarInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        adminPopup\n                                                  \n                                                        \n                                                                        AdminPopupService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            errorHandler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    errorHandler(error: any)\n                \n            \n\n\n            \n                \n                    Defined in libs/ng-usermanagement/src/lib/settings/admin/admin.settings.Component.ts:112\n                \n            \n\n\n            \n                \n                    remove the loading and show a snackbar of the error\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nAn object with a message variable\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            impersonateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    impersonateUser(uid: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ng-usermanagement/src/lib/settings/admin/admin.settings.Component.ts:73\n                \n            \n\n\n            \n                \n                    Impersonate a user with the user id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleUserSettingsPopup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleUserSettingsPopup(user: UserModel)\n                \n            \n\n\n            \n                \n                    Defined in libs/ng-usermanagement/src/lib/settings/admin/admin.settings.Component.ts:88\n                \n            \n\n\n            \n                \n                    Toggle the user settings popup\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateUserSettings\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUserSettings(uid: string, userData: Object)\n                \n            \n\n\n            \n                \n                    Defined in libs/ng-usermanagement/src/lib/settings/admin/admin.settings.Component.ts:98\n                \n            \n\n\n            \n                \n                    Update the user settings\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userData\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            adminSettingsForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                    \n                        \n                            Default value : this.formBuilder.group({\n    uid: new FormControl(),\n  })\n                        \n                    \n                        \n                            \n                                    Defined in libs/ng-usermanagement/src/lib/settings/admin/admin.settings.Component.ts:48\n                            \n                        \n\n                \n                    \n                        A formgroup of the current admin with a uid controller\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            allUsers$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ng-usermanagement/src/lib/settings/admin/admin.settings.Component.ts:26\n                            \n                        \n\n                \n                    \n                        A list of all the users\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentUser$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ng-usermanagement/src/lib/settings/admin/admin.settings.Component.ts:22\n                            \n                        \n\n                \n                    \n                        The current user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayUserSettigs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in libs/ng-usermanagement/src/lib/settings/admin/admin.settings.Component.ts:37\n                            \n                        \n\n                \n                    \n                        Display the settings of the current selected user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            formBuilder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormBuilder\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ng-usermanagement/src/lib/settings/admin/admin.settings.Component.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in libs/ng-usermanagement/src/lib/settings/admin/admin.settings.Component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserModel\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ng-usermanagement/src/lib/settings/admin/admin.settings.Component.ts:33\n                            \n                        \n\n                \n                    \n                        The current selected user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selectedUserForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ng-usermanagement/src/lib/settings/admin/admin.settings.Component.ts:43\n                            \n                        \n\n                \n                    \n                        A formgroup of the current selected user\nused for updating the user data\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SnackBarInterface\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(NgSnackBarToken)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/ng-usermanagement/src/lib/settings/admin/admin.settings.Component.ts:56\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { NgSnackBarToken, SnackBarInterface } from '../../interfaces/snackbar-config.interface';\nimport { UserModel } from '../../models/user.model';\nimport { AdminAuthService } from '../../services/admin.auth.service';\nimport { UserService } from '../../services/user.service';\nimport { AdminPopupService } from './admin-popup/admin-popup.service';\n\n@Component({\n  selector: 'ng-admin-settings',\n  templateUrl: './admin.settings.component.html',\n  styleUrls: ['./admin.settings.component.css'],\n})\n\nexport class AdminSettingsComponent {\n  \n  /**\n   * The current user\n   */\n  public currentUser$: Observable\n  /**\n   * A list of all the users\n   */\n  public allUsers$: Observable\n\n  public loading: boolean = false;\n\n  /**\n   * The current selected user\n   */\n  selectedUser: UserModel;\n  /**\n   * Display the settings of the current selected user\n   */\n  displayUserSettigs: boolean = false;;\n\n  /**\n   * A formgroup of the current selected user\n   * used for updating the user data\n   */\n  public selectedUserForm: FormGroup;\n  \n  /**\n   * A formgroup of the current admin with a uid controller\n   */\n  public adminSettingsForm: FormGroup = this.formBuilder.group({\n    uid: new FormControl(),\n  });\n  \n  constructor(\n    private userService: UserService,\n    private adminAuthService: AdminAuthService,\n    public formBuilder: FormBuilder,\n    @Inject(NgSnackBarToken) public snackBar: SnackBarInterface,\n    private adminPopup: AdminPopupService)\n    {\n      this.currentUser$ = this.userService.user$.pipe(\n        tap(user => { this.adminSettingsForm.patchValue(user)})\n        )\n      this.allUsers$ = this.adminAuthService.allUsers;\n\n      this.selectedUserForm = this.formBuilder.group({\n        displayName: []\n      })\n    }\n\n  /**\n   * Impersonate a user with the user id\n   * @param uid \n   */\n  public async impersonateUser(uid: string) {\n    this.loading = true;\n    this.adminAuthService.impersonateUser(uid, this.adminSettingsForm.controls['uid'].value)\n    .then(() => {\n      this.adminPopup.open()\n      this.loading = false \n      this.snackBar.open('login succesful', '', { duration: 2000 });\n    })\n    .catch((e) => this.errorHandler({ message: 'login failed' })) \n  }\n\n  /**\n   * Toggle the user settings popup\n   * @param user \n   */\n  public toggleUserSettingsPopup(user: UserModel): void {\n    this.selectedUser = user;\n    this.displayUserSettigs = !this.displayUserSettigs;\n  }\n\n  /**\n   * Update the user settings\n   * @param uid \n   * @param userData \n   */\n  public updateUserSettings(uid: string, userData: Object): Promise {\n    this.loading = true;\n    return this.adminAuthService.updateUserSettings(uid, userData)\n      .then(result => {\n        this.loading = false;\n        this.snackBar.open(result, '', { duration: 2000 })\n      })\n      .catch((error) => this.errorHandler({message: error}))\n  }\n  \n  /**\n   * remove the loading and show a snackbar of the error\n   * @param error - An object with a message variable\n   */\n  private errorHandler(error: any): void {\n    this.loading = false;\n    this.snackBar.open(error.message, '', { duration: 2000 });\n  }\n}\n    \n\n    \n        \n\n  \n     {{ user.email }} \n    \n    Edit settings\n    ImpersonateUser\n  \n\n\n\n  \n    name\n    \n\n    Save\n    Close\n  \n\n\n    \n\n    \n                \n                    ./admin.settings.component.css\n                \n                .admin-settings-collection {\n  padding: 80px 0;\n  align-content: center;\n}\n\n/* The popup form - hidden by default */\n.user-settings-popup {\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  background-color: rgba(160, 160, 160, 0.2);\n}\n\n/* Add styles to the form container */\n.form-container {\n  margin: 0;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  padding: 10px;\n  background-color: white;\n  border: 3px solid #f1f1f1;\n  z-index: 1;\n}\n\n.close-button {\n  right: 10px; \n  position: absolute;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       {{ user.email }}         Edit settings    ImpersonateUser        name        Save    Close  '\n    var COMPONENTS = [{'name': 'AdminPopupComponent', 'selector': 'ng-admin-popup'},{'name': 'AdminSettingsComponent', 'selector': 'ng-admin-settings'},{'name': 'GroupCreateComponent', 'selector': 'ng-create-group'},{'name': 'GroupListComponent', 'selector': 'ng-group-list'},{'name': 'GroupSettingsComponent', 'selector': 'ng-group-settings'},{'name': 'GroupUsersSettingsComponent', 'selector': 'ng-group-users-settings'},{'name': 'LoginEmailPasswordComponent', 'selector': 'ng-login-email-password'},{'name': 'LoginGoogleComponent', 'selector': 'ng-login-google'},{'name': 'RegisterComponent', 'selector': 'ng-register'},{'name': 'SpinnerComponent', 'selector': 'ng-spinner'},{'name': 'UserSettingsComponent', 'selector': 'ng-user-settings'},{'name': 'ValidationMessageComponent', 'selector': 'ng-validation-message'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminSettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ng-usermanagement/src/lib/services/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                adminToken\n                            \n                            \n                                    Public\n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createAccount\n                            \n                            \n                                    Public\n                                loginWithCustomToken\n                            \n                            \n                                    Public\n                                loginWithEmailAndPassword\n                            \n                            \n                                    Public\n                                loginWithPopup\n                            \n                            \n                                    Public\n                                loginWithRedirect\n                            \n                            \n                                    Async\n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    RedirectResult\n                                \n                                \n                                    secondaryApp\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(angularFireAuth: AngularFireAuth, adminPopup: AdminPopupService, config: ngUserManagementConfig)\n                    \n                \n                        \n                            \n                                Defined in libs/ng-usermanagement/src/lib/services/auth.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        angularFireAuth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        adminPopup\n                                                  \n                                                        \n                                                                        AdminPopupService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        ngUserManagementConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createAccount\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createAccount(email: string, password: string, extraUserData?: any)\n                \n            \n\n\n            \n                \n                    Defined in libs/ng-usermanagement/src/lib/services/auth.service.ts:38\n                \n            \n\n\n            \n                \n                    Create a new account.\nThe user will not be logged in after creating an account\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    extraUserData\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            loginWithCustomToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loginWithCustomToken(uid: string, adminToken?: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ng-usermanagement/src/lib/services/auth.service.ts:93\n                \n            \n\n\n            \n                \n                    Login with a Custom user token\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    adminToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            loginWithEmailAndPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loginWithEmailAndPassword(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ng-usermanagement/src/lib/services/auth.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            loginWithPopup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loginWithPopup(authProvider: auth.AuthProvider)\n                \n            \n\n\n            \n                \n                    Defined in libs/ng-usermanagement/src/lib/services/auth.service.ts:84\n                \n            \n\n\n            \n                \n                    Creates a popup for the given provider\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    authProvider\n                                    \n                                            auth.AuthProvider\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            loginWithRedirect\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loginWithRedirect(authProvider: auth.AuthProvider)\n                \n            \n\n\n            \n                \n                    Defined in libs/ng-usermanagement/src/lib/services/auth.service.ts:69\n                \n            \n\n\n            \n                \n                    Redirect user to the given provider\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    authProvider\n                                    \n                                            auth.AuthProvider\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logout()\n                \n            \n\n\n            \n                \n                    Defined in libs/ng-usermanagement/src/lib/services/auth.service.ts:103\n                \n            \n\n\n            \n                \n                    Log the current user out\nIf it was an impersonation of an admin he will be logged in againt\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            adminToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in libs/ng-usermanagement/src/lib/services/auth.service.ts:16\n                            \n                        \n\n                \n                    \n                        Custom user token of the admin\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ngUserManagementConfig\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(NgUserManagementConfigToken)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/ng-usermanagement/src/lib/services/auth.service.ts:21\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        RedirectResult\n                    \n                \n\n                \n                    \n                        getRedirectResult()\n                    \n                \n                            \n                                \n                                    Defined in libs/ng-usermanagement/src/lib/services/auth.service.ts:76\n                                \n                            \n                    \n                        \n                                Returns the redirect result after redirecting the user\n\n\n                                \n                                    Returns :     Promise\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        secondaryApp\n                    \n                \n\n                \n                    \n                        getsecondaryApp()\n                    \n                \n                            \n                                \n                                    Defined in libs/ng-usermanagement/src/lib/services/auth.service.ts:116\n                                \n                            \n                    \n                        \n                                Get an \"secondary\" App initialzized with the firebase configs\n\n\n                                \n                                    Returns :     firebase.app.App\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport * as firebase from 'firebase';\nimport { auth } from 'firebase';\nimport { ngUserManagementConfig, NgUserManagementConfigToken } from '../interfaces/firebase-config.interface';\nimport { AdminPopupService } from '../settings/admin/admin-popup/admin-popup.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  /**\n   * Custom user token of the admin\n   */\n  private adminToken: string = '';\n  \n  constructor(\n    private angularFireAuth: AngularFireAuth,\n    private adminPopup: AdminPopupService,\n    @Inject(NgUserManagementConfigToken) public config: ngUserManagementConfig) {\n  }\n  \n  /**\n   * Create a new account.\n   * The user will not be logged in after creating an account\n   * @param email \n   * @param password \n   * @param extraUserData\n   * \n   * @usageNotes\n   * Create a new account and add name to the database\n   * ```\n   * createAccount('email', 'password', { userName: 'Jan' })\n   *  .then((userCredentials) => console.log('succesfull login'))\n   * ```\n   */\n  async createAccount(email: string, password: string, extraUserData?: any): Promise{\n    try {\n      const credentials = await this.secondaryApp.auth().createUserWithEmailAndPassword(email, password)\n      if (credentials != null) {\n        let userData = {\n          uid: credentials.user.uid,\n          email: credentials.user.email\n        }\n        if (extraUserData != null) userData = { ...userData, ...extraUserData}\n\n        await this.secondaryApp.firestore().collection('users').doc(credentials.user.uid).set(userData)\n        await this.secondaryApp.auth().signOut();\n      }\n      return credentials;\n    } catch(err){\n      console.error(err)\n    }\n  }\n    \n  /**\n   * @param email\n   * @param password\n   */\n  public loginWithEmailAndPassword(email: string, password: string): Promise{\n    return this.angularFireAuth.auth.signInWithEmailAndPassword(email, password);\n  }\n  \n  /**\n   * Redirect user to the given provider\n   * @param authProvider\n   */\n  public loginWithRedirect(authProvider: auth.AuthProvider): Promise {\n    return this.angularFireAuth.auth.signInWithRedirect(authProvider);\n  }\n  \n  /**\n   * Returns the redirect result after redirecting the user\n   */\n  get RedirectResult(): Promise {\n    return this.angularFireAuth.auth.getRedirectResult();\n  }\n  \n  /**\n   * Creates a popup for the given provider\n   * @param authProvider \n   */\n  public loginWithPopup(authProvider: auth.AuthProvider): Promise {\n    return this.angularFireAuth.auth.signInWithPopup(authProvider);\n  }\n\n  /**\n   * Login with a Custom user token\n   * @param uid \n   * @param adminToken \n   */\n  public loginWithCustomToken(uid: string, adminToken?: string): Promise {\n    this.adminToken = adminToken ? adminToken : '';\n    return firebase.auth().signInWithCustomToken(uid)\n  }\n\n\n  /**\n   * Log the current user out\n   * If it was an impersonation of an admin he will be logged in againt\n   */\n  async logout(): Promise {\n    return await this.angularFireAuth.auth.signOut()\n      .then(() => {\n        if (this.adminToken !== '') {\n          this.adminPopup.close();\n          this.loginWithCustomToken(this.adminToken)\n        }\n      })\n  }\n\n  /**\n   * Get an \"secondary\" App initialzized with the firebase configs\n   */\n  get secondaryApp(): firebase.app.App {\n    try {\n      return firebase.app('secondary')\n    }\n    catch(error){\n      return firebase.initializeApp(this.config.firebaseConfig, \"secondary\");\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Group.html":{"url":"classes/Group.html","title":"class - Group","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Group\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ng-usermanagement/src/lib/models/group.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                description\n                            \n                            \n                                groupId\n                            \n                            \n                                    Optional\n                                groupName\n                            \n                            \n                                    Optional\n                                users\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ng-usermanagement/src/lib/models/group.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            groupId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ng-usermanagement/src/lib/models/group.model.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            groupName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ng-usermanagement/src/lib/models/group.model.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            users\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ng-usermanagement/src/lib/models/group.model.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Group {\n  groupId: string;\n  groupName?: string;\n  description?: string;\n  users?: {};\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GroupCreateComponent.html":{"url":"components/GroupCreateComponent.html","title":"component - GroupCreateComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GroupCreateComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ng-usermanagement/src/lib/group/group-create/group-create.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ng-create-group\n            \n\n            \n                styleUrls\n                ./group-create.component.css\n            \n\n\n\n            \n                templateUrl\n                ./group-create.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                curUser\n                            \n                            \n                                    Private\n                                curUserId\n                            \n                            \n                                    Public\n                                loading\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createGroup\n                            \n                            \n                                    Private\n                                errorHandler\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                extraGroupData\n                            \n                            \n                                redirectOnSucces\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(groupService: GroupService, userService: UserService, snackBar: SnackBarInterface, router: Router)\n                    \n                \n                        \n                            \n                                Defined in libs/ng-usermanagement/src/lib/group/group-create/group-create.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        groupService\n                                                  \n                                                        \n                                                                        GroupService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                        SnackBarInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        extraGroupData\n                    \n                \n                \n                    \n                        Type :         Object\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ng-usermanagement/src/lib/group/group-create/group-create.component.ts:21\n                            \n                        \n                \n                    \n                        Add extra group data in the database on creating the group\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        redirectOnSucces\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ng-usermanagement/src/lib/group/group-create/group-create.component.ts:26\n                            \n                        \n                \n                    \n                        Redirect the user on succesfully creating a group\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createGroup(groupName: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ng-usermanagement/src/lib/group/group-create/group-create.component.ts:54\n                \n            \n\n\n            \n                \n                    Creating a group with an group name and \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    groupName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            errorHandler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    errorHandler(errorMessage: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ng-usermanagement/src/lib/group/group-create/group-create.component.ts:70\n                \n            \n\n\n            \n                \n                    remove the loading and show a snackbar of the error\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    errorMessage\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nAn error message\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            curUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ng-usermanagement/src/lib/group/group-create/group-create.component.ts:31\n                            \n                        \n\n                \n                    \n                        The current user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            curUserId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ng-usermanagement/src/lib/group/group-create/group-create.component.ts:37\n                            \n                        \n\n                \n                    \n                        The current user Id\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in libs/ng-usermanagement/src/lib/group/group-create/group-create.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SnackBarInterface\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(NgSnackBarToken)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/ng-usermanagement/src/lib/group/group-create/group-create.component.ts:41\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { NgSnackBarToken, SnackBarInterface } from '../../interfaces/snackbar-config.interface';\nimport { UserModel } from '../../models/user.model';\nimport { GroupService } from '../../services/group.service';\nimport { UserService } from '../../services/user.service';\n\n@Component({\n  selector: 'ng-create-group',\n  templateUrl: './group-create.component.html',\n  styleUrls: ['./group-create.component.css']\n})\n\nexport class GroupCreateComponent {\n\n  /**\n   * Add extra group data in the database on creating the group\n   */\n  @Input() extraGroupData: Object;\n\n  /**\n   * Redirect the user on succesfully creating a group\n   */\n  @Input() redirectOnSucces: string;\n\n  /**\n   * The current user\n   */\n  public curUser: Observable;\n  public loading: boolean = false;\n\n  /**\n   * The current user Id\n   */\n  private curUserId: string;\n\n  constructor(private groupService: GroupService,\n    private userService: UserService,\n    @Inject(NgSnackBarToken) public snackBar: SnackBarInterface,\n    private router: Router) {\n      this.curUser = this.userService.user$.pipe(\n        map(user => user as UserModel),\n        tap(user => user ? this.curUserId = user.uid : null)\n      )\n  }\n\n  /**\n   * Creating a group with an group name and \n   * @param groupName \n   * @param extraGroupData \n   */\n  async createGroup(groupName: string): Promise{\n    try {\n      this.loading = true;\n      await this.groupService.createGroup(this.curUserId, groupName, this.extraGroupData);\n      this.snackBar.open('group succesfully created', '', { duration: 2000 });\n      this.loading = false;\n      if (this.redirectOnSucces != null) this.router.navigate([this.redirectOnSucces])\n    } catch(err) {\n      this.errorHandler(err.message);\n    }\n  }\n\n  /**\n   * remove the loading and show a snackbar of the error\n   * @param errorMessage - An error message\n   */\n  private errorHandler(errorMessage: string){\n    this.loading = false;\n    this.snackBar.open(errorMessage, '', { duration: 2000 });\n  }\n}\n\n    \n\n    \n        \n  \n    \n    create group\n  \n\n\n\n    \n\n    \n                \n                    ./group-create.component.css\n                \n                .group-create-collection {\n  padding: 80px 0;\n}\n\n.group-create-collection form {\n  max-width: 400px;\n  width: 70%;\n  padding: 40px;\n  margin: 0 auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          create group  '\n    var COMPONENTS = [{'name': 'AdminPopupComponent', 'selector': 'ng-admin-popup'},{'name': 'AdminSettingsComponent', 'selector': 'ng-admin-settings'},{'name': 'GroupCreateComponent', 'selector': 'ng-create-group'},{'name': 'GroupListComponent', 'selector': 'ng-group-list'},{'name': 'GroupSettingsComponent', 'selector': 'ng-group-settings'},{'name': 'GroupUsersSettingsComponent', 'selector': 'ng-group-users-settings'},{'name': 'LoginEmailPasswordComponent', 'selector': 'ng-login-email-password'},{'name': 'LoginGoogleComponent', 'selector': 'ng-login-google'},{'name': 'RegisterComponent', 'selector': 'ng-register'},{'name': 'SpinnerComponent', 'selector': 'ng-spinner'},{'name': 'UserSettingsComponent', 'selector': 'ng-user-settings'},{'name': 'ValidationMessageComponent', 'selector': 'ng-validation-message'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GroupCreateComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GroupListComponent.html":{"url":"components/GroupListComponent.html","title":"component - GroupListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GroupListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ng-usermanagement/src/lib/group/group-list/group-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ng-group-list\n            \n\n            \n                styleUrls\n                ./group-list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./group-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                groupList$\n                            \n                            \n                                    Public\n                                groupService\n                            \n                            \n                                groupSettingsActive\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                toggleGroupSettings\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                extraGroupData\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(groupService: GroupService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in libs/ng-usermanagement/src/lib/group/group-list/group-list.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        groupService\n                                                  \n                                                        \n                                                                        GroupService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        extraGroupData\n                    \n                \n                \n                    \n                        Type :         Object\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ng-usermanagement/src/lib/group/group-list/group-list.component.ts:18\n                            \n                        \n                \n                    \n                        Add extra group data on updating the group settings\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in libs/ng-usermanagement/src/lib/group/group-list/group-list.component.ts:36\n                \n            \n\n\n            \n                \n                    Creating the group list\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleGroupSettings\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleGroupSettings(index: number)\n                \n            \n\n\n            \n                \n                    Defined in libs/ng-usermanagement/src/lib/group/group-list/group-list.component.ts:54\n                \n            \n\n\n            \n                \n                    Toggle the selected group settings\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            groupList$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ng-usermanagement/src/lib/group/group-list/group-list.component.ts:23\n                            \n                        \n\n                \n                    \n                        A list of groups\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            groupService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GroupService\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ng-usermanagement/src/lib/group/group-list/group-list.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            groupSettingsActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : -1\n                        \n                    \n                        \n                            \n                                    Defined in libs/ng-usermanagement/src/lib/group/group-list/group-list.component.ts:28\n                            \n                        \n\n                \n                    \n                        An iterator of the current settings that are open\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Group } from '../../models/group.model';\nimport { UserModel } from '../../models/user.model';\nimport { GroupService } from '../../services/group.service';\nimport { UserService } from '../../services/user.service';\n\n@Component({\n  selector: 'ng-group-list',\n  templateUrl: './group-list.component.html',\n  styleUrls: ['./group-list.component.css']\n})\nexport class GroupListComponent implements OnInit {\n  /**\n   * Add extra group data on updating the group settings\n   */\n  @Input() extraGroupData: Object;\n  \n  /**\n   * A list of groups\n   */\n  groupList$: Observable[]>;\n\n  /**\n   * An iterator of the current settings that are open\n   */\n  groupSettingsActive: number = -1;\n  \n  constructor(public groupService: GroupService,\n    private userService: UserService) {}\n      \n  /**\n   * Creating the group list\n   */\n  ngOnInit(): void {\n    this.groupList$ = this.userService.user$.pipe(\n      map((user: UserModel) => {\n        let groups: Observable[] = [];\n        if(user.groups){\n          user.groups.forEach(groupId => {\n            groups.push(this.groupService.getGroup(groupId).pipe(map(group => group)))\n          })\n        }\n        return groups;\n      })\n    )\n  }\n\n  /**\n   * Toggle the selected group settings\n   * @param index \n   */\n  toggleGroupSettings(index: number): void {\n    if (this.groupSettingsActive === index) this.groupSettingsActive = -1;\n    else this.groupSettingsActive = index;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{group.groupName}}\n        Settings\n        \n        \n      \n      \n  \n\n    \n\n    \n                \n                    ./group-list.component.css\n                \n                .group-list{\n  max-width: 600px;\n  width: 100%;\n  padding: 40px;\n  margin: 0 auto;\n  align-content: center;\n}\n\n.group-settings-button {\n  float: right;\n  bottom: 5px\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{group.groupName}}        Settings                              '\n    var COMPONENTS = [{'name': 'AdminPopupComponent', 'selector': 'ng-admin-popup'},{'name': 'AdminSettingsComponent', 'selector': 'ng-admin-settings'},{'name': 'GroupCreateComponent', 'selector': 'ng-create-group'},{'name': 'GroupListComponent', 'selector': 'ng-group-list'},{'name': 'GroupSettingsComponent', 'selector': 'ng-group-settings'},{'name': 'GroupUsersSettingsComponent', 'selector': 'ng-group-users-settings'},{'name': 'LoginEmailPasswordComponent', 'selector': 'ng-login-email-password'},{'name': 'LoginGoogleComponent', 'selector': 'ng-login-google'},{'name': 'RegisterComponent', 'selector': 'ng-register'},{'name': 'SpinnerComponent', 'selector': 'ng-spinner'},{'name': 'UserSettingsComponent', 'selector': 'ng-user-settings'},{'name': 'ValidationMessageComponent', 'selector': 'ng-validation-message'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GroupListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GroupModule.html":{"url":"modules/GroupModule.html","title":"module - GroupModule","body":"\n                   \n\n\n\n\n    Modules\n    GroupModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GroupModule\n\n\n\ncluster_GroupModule_declarations\n\n\n\ncluster_GroupModule_imports\n\n\n\ncluster_GroupModule_exports\n\n\n\n\nGroupCreateComponent\n\nGroupCreateComponent\n\n\n\nGroupModule\n\nGroupModule\n\nGroupModule -->\n\nGroupCreateComponent->GroupModule\n\n\n\n\n\nGroupListComponent\n\nGroupListComponent\n\nGroupModule -->\n\nGroupListComponent->GroupModule\n\n\n\n\n\nGroupSettingsComponent\n\nGroupSettingsComponent\n\nGroupModule -->\n\nGroupSettingsComponent->GroupModule\n\n\n\n\n\nGroupUsersSettingsComponent\n\nGroupUsersSettingsComponent\n\nGroupModule -->\n\nGroupUsersSettingsComponent->GroupModule\n\n\n\n\n\nGroupCreateComponent \n\nGroupCreateComponent \n\nGroupCreateComponent  -->\n\nGroupModule->GroupCreateComponent \n\n\n\n\n\nGroupListComponent \n\nGroupListComponent \n\nGroupListComponent  -->\n\nGroupModule->GroupListComponent \n\n\n\n\n\nGroupSettingsComponent \n\nGroupSettingsComponent \n\nGroupSettingsComponent  -->\n\nGroupModule->GroupSettingsComponent \n\n\n\n\n\nGroupUsersSettingsComponent \n\nGroupUsersSettingsComponent \n\nGroupUsersSettingsComponent  -->\n\nGroupModule->GroupUsersSettingsComponent \n\n\n\n\n\nSpinnerModule\n\nSpinnerModule\n\nGroupModule -->\n\nSpinnerModule->GroupModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ng-usermanagement/src/lib/group/group.Module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            GroupCreateComponent\n                        \n                        \n                            GroupListComponent\n                        \n                        \n                            GroupSettingsComponent\n                        \n                        \n                            GroupUsersSettingsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SpinnerModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            GroupCreateComponent\n                        \n                        \n                            GroupListComponent\n                        \n                        \n                            GroupSettingsComponent\n                        \n                        \n                            GroupUsersSettingsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule, MatInputModule, MatSnackBarModule } from '@angular/material';\nimport { SpinnerModule } from '../spinner/spinner.module';\nimport { GroupSettingsComponent } from './group-settings/group-settings.component';\nimport { GroupCreateComponent } from './group-create/group-create.component';\nimport { GroupUsersSettingsComponent } from './group-users/group-users.component';\nimport { GroupListComponent } from './group-list/group-list.component';\n\n@NgModule({\n  declarations: [\n    GroupSettingsComponent,\n    GroupCreateComponent,\n    GroupUsersSettingsComponent,\n    GroupListComponent,\n  ],\n  imports: [\n    CommonModule,\n    SpinnerModule,\n    FormsModule,\n    MatButtonModule,\n    MatInputModule,\n    MatSnackBarModule,\n    ReactiveFormsModule,\n  ],\n  exports: [\n    GroupSettingsComponent,\n    GroupCreateComponent,\n    GroupListComponent,\n    GroupUsersSettingsComponent\n  ]\n})\nexport class GroupModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GroupService.html":{"url":"injectables/GroupService.html","title":"injectable - GroupService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GroupService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ng-usermanagement/src/lib/services/group.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                groupCol\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addUsersToGroup\n                            \n                            \n                                createGroup\n                            \n                            \n                                    Async\n                                deleteGroup\n                            \n                            \n                                    Public\n                                getGroup\n                            \n                            \n                                removeUsersFromGroup\n                            \n                            \n                                updateGroupData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(db: AngularFirestore)\n                    \n                \n                        \n                            \n                                Defined in libs/ng-usermanagement/src/lib/services/group.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        db\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addUsersToGroup\n                        \n                        \n                    \n                \n            \n            \n                \naddUsersToGroup(userId: string[], role: string, groupId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ng-usermanagement/src/lib/services/group.service.ts:81\n                \n            \n\n\n            \n                \n                    Add an user to a group\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    role\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    groupId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createGroup\n                        \n                        \n                    \n                \n            \n            \n                \ncreateGroup(userId: string, groupName: string, extraGroupData?: Object)\n                \n            \n\n\n            \n                \n                    Defined in libs/ng-usermanagement/src/lib/services/group.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        owner of the group\n\n                                    \n                                \n                                \n                                    groupName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    extraGroupData\n                                    \n                                                Object\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteGroup(groupId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ng-usermanagement/src/lib/services/group.service.ts:122\n                \n            \n\n\n            \n                \n                    Delete a group with an Id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    groupId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroup(groupId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ng-usermanagement/src/lib/services/group.service.ts:51\n                \n            \n\n\n            \n                \n                    Get a group with an group Id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    groupId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeUsersFromGroup\n                        \n                        \n                    \n                \n            \n            \n                \nremoveUsersFromGroup(userId: string[], group: Group)\n                \n            \n\n\n            \n                \n                    Defined in libs/ng-usermanagement/src/lib/services/group.service.ts:108\n                \n            \n\n\n            \n                \n                    Create a new account.\nThe user will not be logged in after creating an account\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    group\n                                    \n                                                Group\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateGroupData\n                        \n                        \n                    \n                \n            \n            \n                \nupdateGroupData(groupId: string, data: Object)\n                \n            \n\n\n            \n                \n                    Defined in libs/ng-usermanagement/src/lib/services/group.service.ts:71\n                \n            \n\n\n            \n                \n                    Update group data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    groupId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            groupCol\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AngularFirestoreCollection\n\n                        \n                    \n                    \n                        \n                            Default value : this.db.collection('groups')\n                        \n                    \n                        \n                            \n                                    Defined in libs/ng-usermanagement/src/lib/services/group.service.ts:16\n                            \n                        \n\n                \n                    \n                        Group collection of firestore\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/firestore';\nimport * as firebase from 'firebase';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Group } from '../models/group.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GroupService {\n\n  /**\n   * Group collection of firestore\n   */\n  private groupCol: AngularFirestoreCollection = this.db.collection('groups');\n\n  constructor(private db: AngularFirestore) {}\n\n  /**\n   * @param userId owner of the group\n   * @param groupName\n   * @param extraGroupData \n   * \n   * @usageNotes\n   * Remove a user from a group\n   * ```\n   * let groupData = {\n   *  description: 'hello'\n   * }\n   * createGroup('userId', 'Name', groupData);\n   * ```\n   */\n  createGroup(userId: string, groupName: string, extraGroupData?: Object): Promise {\n    const newId = this.db.createId();\n    let groupData = {\n      groupId: newId,\n      groupName: groupName,\n      users: {\n        owner: [userId]\n      }\n    }\n    groupData = {...groupData, ...extraGroupData}\n    return this.groupCol.doc(newId).set(groupData);\n  }\n  \n  /**\n   * Get a group with an group Id\n   * @param groupId\n   */\n  public getGroup(groupId: string): Observable {\n    return this.groupCol.doc(groupId).valueChanges().pipe(\n      map((group) => group as Group)\n    );\n  }\n\n  /**\n   * Update group data\n   * @param groupId\n   * @param data\n   * \n   * @usageNotes\n   * Remove a user from a group\n   * ```\n   * let groupData = {\n   *  groupName: 'hello'\n   * }\n   * updateGroupData('groupId', groupData);\n   * ```\n   */\n  updateGroupData(groupId: string, data: Object): Promise {\n    return this.groupCol.doc(groupId).update(data);\n  }\n\n  /**\n   * Add an user to a group\n   * @param userId\n   * @param role\n   * @param groupId\n   */\n  addUsersToGroup(userId: string[], role: string, groupId: string): Promise {\n    const groupData = {\n      groupId: groupId,\n      users: {}\n    }\n    groupData.users[role] = firebase.firestore.FieldValue.arrayUnion.apply(null, userId);\n    return this.groupCol.doc(groupId).set(groupData, { merge: true});\n  }\n  \n  /**\n   * Create a new account.\n   * The user will not be logged in after creating an account\n   * @param userId \n   * @param group \n   * \n   * @usageNotes\n   * Remove a user from a group\n   * ```\n   * let group = {\n   *  groupId: '123'\n   *  users: {\n   *    admins: ['userId']\n   *  }\n   * }\n   * removeUsersFromGroup('userId', group);\n   * ```\n   */\n  removeUsersFromGroup(userId: string[], group: Group): Promise {\n    const groupData = {\n      users: {}\n    }\n    for (var roleKey in group.users) {\n      groupData.users[roleKey] = firebase.firestore.FieldValue.arrayRemove.apply(null, userId)\n    }\n    return this.groupCol.doc(group.groupId).set(groupData, { merge: true});\n  }\n\n  /**\n   * Delete a group with an Id\n   * @param groupId\n   */\n  async deleteGroup(groupId: string): Promise {\n    return this.groupCol.doc(groupId).delete();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GroupSettingsComponent.html":{"url":"components/GroupSettingsComponent.html","title":"component - GroupSettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GroupSettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ng-usermanagement/src/lib/group/group-settings/group-settings.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ng-group-settings\n            \n\n            \n                styleUrls\n                ./group-settings.component.css\n            \n\n\n\n            \n                templateUrl\n                ./group-settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loading\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                deleteGroup\n                            \n                            \n                                    Private\n                                errorHandler\n                            \n                            \n                                    Public\n                                updateGroupData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentGroup\n                            \n                            \n                                extraGroupData\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(groupService: GroupService, snackBar: SnackBarInterface)\n                    \n                \n                        \n                            \n                                Defined in libs/ng-usermanagement/src/lib/group/group-settings/group-settings.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        groupService\n                                                  \n                                                        \n                                                                        GroupService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                        SnackBarInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currentGroup\n                    \n                \n                \n                    \n                        Type :         Group\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ng-usermanagement/src/lib/group/group-settings/group-settings.component.ts:22\n                            \n                        \n                \n                    \n                        The current group\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        extraGroupData\n                    \n                \n                \n                    \n                        Type :         Object\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ng-usermanagement/src/lib/group/group-settings/group-settings.component.ts:17\n                            \n                        \n                \n                    \n                        Add extra group data on updating the user settings\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            deleteGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteGroup()\n                \n            \n\n\n            \n                \n                    Defined in libs/ng-usermanagement/src/lib/group/group-settings/group-settings.component.ts:48\n                \n            \n\n\n            \n                \n                    Delete the current group\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            errorHandler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    errorHandler(errorMessage: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ng-usermanagement/src/lib/group/group-settings/group-settings.component.ts:62\n                \n            \n\n\n            \n                \n                    remove the loading and show a snackbar of the error\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    errorMessage\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nAn error message\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateGroupData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateGroupData(groupData: Object)\n                \n            \n\n\n            \n                \n                    Defined in libs/ng-usermanagement/src/lib/group/group-settings/group-settings.component.ts:34\n                \n            \n\n\n            \n                \n                    Update the current group data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    groupData\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in libs/ng-usermanagement/src/lib/group/group-settings/group-settings.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SnackBarInterface\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(NgSnackBarToken)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/ng-usermanagement/src/lib/group/group-settings/group-settings.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject, Input } from '@angular/core';\nimport { NgSnackBarToken, SnackBarInterface } from '../../interfaces/snackbar-config.interface';\nimport { Group } from '../../models/group.model';\nimport { GroupService } from '../../services/group.service';\n\n@Component({\n  selector: 'ng-group-settings',\n  templateUrl: './group-settings.component.html',\n  styleUrls: ['./group-settings.component.css']\n})\n\nexport class GroupSettingsComponent {\n  \n  /**\n   * Add extra group data on updating the user settings\n   */\n  @Input() extraGroupData: Object;\n\n  /**\n   * The current group\n   */\n  @Input() currentGroup: Group;\n\n  loading: boolean = false;\n\n  constructor(private groupService: GroupService, \n    @Inject(NgSnackBarToken) public snackBar: SnackBarInterface) {\n  }\n  \n  /**\n   * Update the current group data\n   * @param groupData \n   */\n  public updateGroupData(groupData: Object): Promise {\n    this.loading = true;\n    groupData = { ...groupData, ...this.extraGroupData }\n    return this.groupService.updateGroupData(this.currentGroup.groupId, groupData)\n    .then(() => {\n      this.loading = false;\n      this.snackBar.open('update succesful', '', { duration: 2000 })\n    })\n    .catch((err) => this.errorHandler(err.message));\n  }\n\n  /**\n   * Delete the current group\n   */\n  public deleteGroup(): Promise {\n    this.loading = true;\n    return this.groupService.deleteGroup(this.currentGroup.groupId)\n    .then(() => {\n      this.loading = false;\n      this.snackBar.open('delete succesful', '', { duration: 2000 })\n    })\n    .catch((err) => this.errorHandler(err.message));\n  }\n\n  /**\n   * remove the loading and show a snackbar of the error\n   * @param errorMessage - An error message\n   */\n  private errorHandler(errorMessage: string){\n    this.loading = false;\n    this.snackBar.open(errorMessage, '', { duration: 2000 });\n  }\n}\n\n    \n\n    \n        \n  \n    \n    update settings\n    delete group\n  \n\n    \n\n    \n                \n                    ./group-settings.component.css\n                \n                .group-settings-collection {\n  padding: 80px 0;\n}\n\n.group-settings-collection form {\n  max-width: 400px;\n  width: 70%;\n  padding: 40px;\n  margin: 0 auto;\n}\n\n.delete-group-button {\n  float: right;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          update settings    delete group  '\n    var COMPONENTS = [{'name': 'AdminPopupComponent', 'selector': 'ng-admin-popup'},{'name': 'AdminSettingsComponent', 'selector': 'ng-admin-settings'},{'name': 'GroupCreateComponent', 'selector': 'ng-create-group'},{'name': 'GroupListComponent', 'selector': 'ng-group-list'},{'name': 'GroupSettingsComponent', 'selector': 'ng-group-settings'},{'name': 'GroupUsersSettingsComponent', 'selector': 'ng-group-users-settings'},{'name': 'LoginEmailPasswordComponent', 'selector': 'ng-login-email-password'},{'name': 'LoginGoogleComponent', 'selector': 'ng-login-google'},{'name': 'RegisterComponent', 'selector': 'ng-register'},{'name': 'SpinnerComponent', 'selector': 'ng-spinner'},{'name': 'UserSettingsComponent', 'selector': 'ng-user-settings'},{'name': 'ValidationMessageComponent', 'selector': 'ng-validation-message'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GroupSettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GroupUsersSettingsComponent.html":{"url":"components/GroupUsersSettingsComponent.html","title":"component - GroupUsersSettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GroupUsersSettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ng-usermanagement/src/lib/group/group-users/group-users.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ng-group-users-settings\n            \n\n            \n                styleUrls\n                ./group-users.component.css\n            \n\n\n\n            \n                templateUrl\n                ./group-users.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loading\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                userGroups\n                            \n                            \n                                users$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addUser\n                            \n                            \n                                    Private\n                                errorHandler\n                            \n                            \n                                    Public\n                                isPartOfGroup\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                removeUser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentGroup\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(adminService: AdminAuthService, groupService: GroupService, snackBar: SnackBarInterface, fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in libs/ng-usermanagement/src/lib/group/group-users/group-users.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        adminService\n                                                  \n                                                        \n                                                                        AdminAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        groupService\n                                                  \n                                                        \n                                                                        GroupService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                        SnackBarInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currentGroup\n                    \n                \n                \n                    \n                        Type :         Group\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ng-usermanagement/src/lib/group/group-users/group-users.component.ts:22\n                            \n                        \n                \n                    \n                        The current group selected\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addUser(userId: string, role: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ng-usermanagement/src/lib/group/group-users/group-users.component.ts:78\n                \n            \n\n\n            \n                \n                    Add user to the currentGroup with a given role\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    role\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            errorHandler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    errorHandler(errorMessage: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ng-usermanagement/src/lib/group/group-users/group-users.component.ts:106\n                \n            \n\n\n            \n                \n                    remove the loading and show a snackbar of the error\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    errorMessage\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nAn error message\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isPartOfGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isPartOfGroup(user: UserModel)\n                \n            \n\n\n            \n                \n                    Defined in libs/ng-usermanagement/src/lib/group/group-users/group-users.component.ts:68\n                \n            \n\n\n            \n                \n                    Checks if the user is part of the currentGroup\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in libs/ng-usermanagement/src/lib/group/group-users/group-users.component.ts:47\n                \n            \n\n\n            \n                \n                    Setup user$ and the userGroups\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            removeUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeUser(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ng-usermanagement/src/lib/group/group-users/group-users.component.ts:92\n                \n            \n\n\n            \n                \n                    Remove a user from the current group\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in libs/ng-usermanagement/src/lib/group/group-users/group-users.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SnackBarInterface\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(NgSnackBarToken)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/ng-usermanagement/src/lib/group/group-users/group-users.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userGroups\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ng-usermanagement/src/lib/group/group-users/group-users.component.ts:32\n                            \n                        \n\n                \n                    \n                        A formGroup with an array of groups\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            users$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ng-usermanagement/src/lib/group/group-users/group-users.component.ts:27\n                            \n                        \n\n                \n                    \n                        An list of all the users\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject, Input, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { NgSnackBarToken, SnackBarInterface } from '../../interfaces/snackbar-config.interface';\nimport { Group } from '../../models/group.model';\nimport { UserModel } from '../../models/user.model';\nimport { AdminAuthService } from '../../services/admin.auth.service';\nimport { GroupService } from '../../services/group.service';\n\n@Component({\n  selector: 'ng-group-users-settings',\n  templateUrl: './group-users.component.html',\n  styleUrls: ['./group-users.component.css']\n})\n\nexport class GroupUsersSettingsComponent implements OnInit {\n  \n  /**\n   * The current group selected\n   */\n  @Input() currentGroup: Group;\n\n  /**\n   * An list of all the users\n   */\n  users$: Observable;\n\n  /**\n   * A formGroup with an array of groups\n   */\n  userGroups: FormGroup;\n\n  loading: boolean = false;\n\n  constructor(\n    private adminService: AdminAuthService,\n    private groupService: GroupService, \n    @Inject(NgSnackBarToken) public snackBar: SnackBarInterface,\n    private fb: FormBuilder) {\n      \n  }\n\n  /**\n   * Setup user$ and the userGroups\n   */\n  ngOnInit(): void {\n    this.users$ = this.adminService.allUsers.pipe(\n      tap(users => { \n        this.userGroups = this.fb.group({users: this.fb.array([])})\n        users.forEach((user: UserModel) => {\n        (this.userGroups.get('users') as FormArray).push(\n          this.fb.group({\n            user: user,\n            role: ''\n          })\n        )\n      } \n      )}),\n      map(users => users)\n    );\n  }\n\n  /**\n   * Checks if the user is part of the currentGroup\n   * @param user \n   */\n  public isPartOfGroup(user: UserModel): boolean {\n    if (!user.groups) return false;\n    return user.groups.includes(this.currentGroup.groupId)     \n  }\n\n  /**\n   * Add user to the currentGroup with a given role\n   * @param userId \n   * @param role \n   */\n  public addUser(userId: string, role: string): Promise {\n    this.loading = true;\n    return this.groupService.addUsersToGroup([userId], role, this.currentGroup.groupId)\n    .then(() => {\n      this.loading = false;\n      this.snackBar.open('user has been added to the group', '', { duration: 2000 })\n    })\n    .catch((err) => this.errorHandler(err.message));\n  }\n\n  /**\n   * Remove a user from the current group\n   * @param userId \n   */\n  public removeUser(userId: string): Promise {\n    this.loading = true;\n    return this.groupService.removeUsersFromGroup([userId], this.currentGroup)\n    .then(() => {\n      this.loading = false;\n      this.snackBar.open('user has been removed from the group', '', { duration: 2000 })\n    })\n    .catch((err) => this.errorHandler(err.message));\n  }\n\n  /**\n   * remove the loading and show a snackbar of the error\n   * @param errorMessage - An error message\n   */\n  private errorHandler(errorMessage: string){\n    this.loading = false;\n    this.snackBar.open(errorMessage, '', { duration: 2000 });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n         \n          {{user.email}}\n          \n          Add user\n          remove user\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./group-users.component.css\n                \n                .group-settings-collection {\n  padding-top: 20px;\n}\n\n.group-settings-collection form {\n  padding-top: 10px;\n  padding-bottom: 10px;\n  min-height: 40px;\n}\n\n.add-or-remove-from-group-button {\n  position: absolute;\n  right: 10px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                               {{user.email}}                    Add user          remove user                    '\n    var COMPONENTS = [{'name': 'AdminPopupComponent', 'selector': 'ng-admin-popup'},{'name': 'AdminSettingsComponent', 'selector': 'ng-admin-settings'},{'name': 'GroupCreateComponent', 'selector': 'ng-create-group'},{'name': 'GroupListComponent', 'selector': 'ng-group-list'},{'name': 'GroupSettingsComponent', 'selector': 'ng-group-settings'},{'name': 'GroupUsersSettingsComponent', 'selector': 'ng-group-users-settings'},{'name': 'LoginEmailPasswordComponent', 'selector': 'ng-login-email-password'},{'name': 'LoginGoogleComponent', 'selector': 'ng-login-google'},{'name': 'RegisterComponent', 'selector': 'ng-register'},{'name': 'SpinnerComponent', 'selector': 'ng-spinner'},{'name': 'UserSettingsComponent', 'selector': 'ng-user-settings'},{'name': 'ValidationMessageComponent', 'selector': 'ng-validation-message'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GroupUsersSettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginEmailPasswordComponent.html":{"url":"components/LoginEmailPasswordComponent.html","title":"component - LoginEmailPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginEmailPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ng-usermanagement/src/lib/login/providers/login-email-password/login-email-password.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ng-login-email-password\n            \n\n            \n                styleUrls\n                ./login-email-password.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login-email-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                    Public\n                                loading\n                            \n                            \n                                    Public\n                                loginForm\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loginUser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                redirectOnSucces\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onFailed\n                            \n                            \n                                onSuccess\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, formBuilder: FormBuilder, router: Router, snackBar: SnackBarInterface)\n                    \n                \n                        \n                            \n                                Defined in libs/ng-usermanagement/src/lib/login/providers/login-email-password/login-email-password.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                        SnackBarInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        redirectOnSucces\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ng-usermanagement/src/lib/login/providers/login-email-password/login-email-password.component.ts:18\n                            \n                        \n                \n                    \n                        redirect the user to another page\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onFailed\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ng-usermanagement/src/lib/login/providers/login-email-password/login-email-password.component.ts:27\n                            \n                        \n                \n                    \n                        Emits the error message on a failed login\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        onSuccess\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ng-usermanagement/src/lib/login/providers/login-email-password/login-email-password.component.ts:23\n                            \n                        \n                \n                    \n                        Emits the user credentials on a succesfull login\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            loginUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loginUser(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ng-usermanagement/src/lib/login/providers/login-email-password/login-email-password.component.ts:53\n                \n            \n\n\n            \n                \n                    Login the user with email and password\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthenticationService\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ng-usermanagement/src/lib/login/providers/login-email-password/login-email-password.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in libs/ng-usermanagement/src/lib/login/providers/login-email-password/login-email-password.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loginForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ng-usermanagement/src/lib/login/providers/login-email-password/login-email-password.component.ts:32\n                            \n                        \n\n                \n                    \n                        FromGroup of the user data\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SnackBarInterface\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(NgSnackBarToken)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/ng-usermanagement/src/lib/login/providers/login-email-password/login-email-password.component.ts:40\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Inject, Input, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { auth } from 'firebase';\nimport { NgSnackBarToken, SnackBarInterface } from '../../../interfaces/snackbar-config.interface';\nimport { AuthenticationService } from '../../../services/auth.service';\n\n@Component({\n  selector: 'ng-login-email-password',\n  templateUrl: './login-email-password.component.html',\n  styleUrls: ['./login-email-password.component.css']\n})\nexport class LoginEmailPasswordComponent {\n\n  /**\n   * redirect the user to another page\n   */\n  @Input() redirectOnSucces: string;\n  \n  /**\n   * Emits the user credentials on a succesfull login\n   */\n  @Output() onSuccess: EventEmitter = new EventEmitter();\n  /**\n   * Emits the error message on a failed login\n   */\n  @Output() onFailed: EventEmitter = new EventEmitter();\n\n  /**\n   * FromGroup of the user data\n   */\n  public loginForm: FormGroup;\n\n  public loading: boolean = false;\n\n  constructor(\n    public authService: AuthenticationService,\n    private formBuilder: FormBuilder,\n    private router: Router,\n    @Inject(NgSnackBarToken) public snackBar: SnackBarInterface,\n  ) { \n    this.loginForm = this.formBuilder.group ({\n      email: ['',[Validators.email, Validators.required]],\n      password: ['',[Validators.required]]\n    });\n  }\n\n  /**\n   * Login the user with email and password\n   * @param email \n   * @param password \n   */\n  public loginUser(email: string, password: string): Promise {\n    this.loading = true;\n    return this.authService.loginWithEmailAndPassword(email, password)\n    .then((credential) => {\n      this.loading = false;\n      this.snackBar.open('welcome', '', { duration: 2000 });\n      this.onSuccess.next(credential);\n      if (this.redirectOnSucces != null) {\n        this.router.navigate([this.redirectOnSucces])\n      }\n      return credential;\n    })\n    .catch((err) => {\n      this.loading = false;\n      this.snackBar.open(err.message, '', { duration: 2000 });\n      this.onFailed.next(err.message);\n    })\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n  Login\n\n\n\n    \n\n    \n                \n                    ./login-email-password.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Login'\n    var COMPONENTS = [{'name': 'AdminPopupComponent', 'selector': 'ng-admin-popup'},{'name': 'AdminSettingsComponent', 'selector': 'ng-admin-settings'},{'name': 'GroupCreateComponent', 'selector': 'ng-create-group'},{'name': 'GroupListComponent', 'selector': 'ng-group-list'},{'name': 'GroupSettingsComponent', 'selector': 'ng-group-settings'},{'name': 'GroupUsersSettingsComponent', 'selector': 'ng-group-users-settings'},{'name': 'LoginEmailPasswordComponent', 'selector': 'ng-login-email-password'},{'name': 'LoginGoogleComponent', 'selector': 'ng-login-google'},{'name': 'RegisterComponent', 'selector': 'ng-register'},{'name': 'SpinnerComponent', 'selector': 'ng-spinner'},{'name': 'UserSettingsComponent', 'selector': 'ng-user-settings'},{'name': 'ValidationMessageComponent', 'selector': 'ng-validation-message'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginEmailPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginGoogleComponent.html":{"url":"components/LoginGoogleComponent.html","title":"component - LoginGoogleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginGoogleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ng-usermanagement/src/lib/login/providers/login-google/login-google.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ng-login-google\n            \n\n            \n                styleUrls\n                ../login-google/login-google.component.css\n            \n\n\n\n            \n                templateUrl\n                ../login-google/login-google.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                googleProvider\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                errorHandler\n                            \n                            \n                                loginWithGoogle\n                            \n                            \n                                    Private\n                                resultHandler\n                            \n                            \n                                signInWithPopup\n                            \n                            \n                                signInWithRedirect\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                authenticationFlowGoogle\n                            \n                            \n                                redirectOnSucces\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onFailed\n                            \n                            \n                                onSuccess\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, snackBar: SnackBarInterface, router: Router)\n                    \n                \n                        \n                            \n                                Defined in libs/ng-usermanagement/src/lib/login/providers/login-google/login-google.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                        SnackBarInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        authenticationFlowGoogle\n                    \n                \n                \n                    \n                        Type :         AuthenticationFlow\n\n                    \n                \n                \n                    \n                        Default value : AuthenticationFlow.popup\n                    \n                \n                        \n                            \n                                    Defined in libs/ng-usermanagement/src/lib/login/providers/login-google/login-google.component.ts:22\n                            \n                        \n                \n                    \n                        redirect the user or create a popup within the application.\noptions are: 'redirect' or 'popup'\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        redirectOnSucces\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ng-usermanagement/src/lib/login/providers/login-google/login-google.component.ts:26\n                            \n                        \n                \n                    \n                        redirect the user to another page\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onFailed\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ng-usermanagement/src/lib/login/providers/login-google/login-google.component.ts:35\n                            \n                        \n                \n                    \n                        Emits the error message on a failed login\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        onSuccess\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ng-usermanagement/src/lib/login/providers/login-google/login-google.component.ts:31\n                            \n                        \n                \n                    \n                        Emits the user credentials on a succesfull login\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            errorHandler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    errorHandler(error: any)\n                \n            \n\n\n            \n                \n                    Defined in libs/ng-usermanagement/src/lib/login/providers/login-google/login-google.component.ts:105\n                \n            \n\n\n            \n                \n                    Result handler after an failed promise result\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loginWithGoogle\n                        \n                        \n                    \n                \n            \n            \n                \nloginWithGoogle()\n                \n            \n\n\n            \n                \n                    Defined in libs/ng-usermanagement/src/lib/login/providers/login-google/login-google.component.ts:61\n                \n            \n\n\n            \n                \n                    Login with google\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            resultHandler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resultHandler(result: auth.UserCredential)\n                \n            \n\n\n            \n                \n                    Defined in libs/ng-usermanagement/src/lib/login/providers/login-google/login-google.component.ts:88\n                \n            \n\n\n            \n                \n                    Result handler after an succesfull promise result\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    result\n                                    \n                                            auth.UserCredential\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     auth.UserCredential\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            signInWithPopup\n                        \n                        \n                    \n                \n            \n            \n                \nsignInWithPopup()\n                \n            \n\n\n            \n                \n                    Defined in libs/ng-usermanagement/src/lib/login/providers/login-google/login-google.component.ts:78\n                \n            \n\n\n            \n                \n                    Sign in with a poup\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            signInWithRedirect\n                        \n                        \n                    \n                \n            \n            \n                \nsignInWithRedirect()\n                \n            \n\n\n            \n                \n                    Defined in libs/ng-usermanagement/src/lib/login/providers/login-google/login-google.component.ts:70\n                \n            \n\n\n            \n                \n                    Start a sign in process for an unauthenticated user\nwith redirect to google login service\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            googleProvider\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     auth.GoogleAuthProvider\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ng-usermanagement/src/lib/login/providers/login-google/login-google.component.ts:40\n                            \n                        \n\n                \n                    \n                        An reference to the google provider\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SnackBarInterface\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(NgSnackBarToken)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/ng-usermanagement/src/lib/login/providers/login-google/login-google.component.ts:44\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Inject, Input, Output } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { auth } from 'firebase';\nimport { NgSnackBarToken, SnackBarInterface } from '../../../interfaces/snackbar-config.interface';\nimport { AuthenticationService } from '../../../services/auth.service';\n\nexport enum AuthenticationFlow {\n  popup = 'popup',\n  redirect = 'redirect',\n}\n@Component({\n  selector: 'ng-login-google',\n  templateUrl: '../login-google/login-google.component.html',\n  styleUrls: ['../login-google/login-google.component.css'],\n})\nexport class LoginGoogleComponent{\n\n  /**\n   * redirect the user or create a popup within the application.\n   * options are: 'redirect' or 'popup'\n   */\n  @Input() authenticationFlowGoogle: AuthenticationFlow = AuthenticationFlow.popup;\n  /**\n   * redirect the user to another page\n   */\n  @Input() redirectOnSucces: string;\n  \n  /**\n   * Emits the user credentials on a succesfull login\n   */\n  @Output() onSuccess: EventEmitter = new EventEmitter();\n  /**\n   * Emits the error message on a failed login\n   */\n  @Output() onFailed: EventEmitter = new EventEmitter();\n\n  /**\n   * An reference to the google provider\n   */\n  private googleProvider: auth.GoogleAuthProvider;\n  \n  constructor(\n    private authService: AuthenticationService,\n    @Inject(NgSnackBarToken) public snackBar: SnackBarInterface,\n    private router: Router\n    ) {\n\n    this.googleProvider = new auth.GoogleAuthProvider();\n    this.googleProvider.addScope('profile');\n    this.googleProvider.addScope('email');\n\n    // Using a redirect.\n    this.authService.RedirectResult.then((result) => {\n      this.resultHandler(result);\n    }).catch(error => this.errorHandler(error));\n  }\n\n  /**\n   * Login with google\n   */\n  loginWithGoogle(){\n    if (this.authenticationFlowGoogle === AuthenticationFlow.redirect) this.signInWithRedirect();\n    else this.signInWithPopup()\n  }\n\n  /**\n   * Start a sign in process for an unauthenticated user\n   * with redirect to google login service\n   */\n  signInWithRedirect(){\n    this.authService.loginWithRedirect(this.googleProvider)\n    .catch(error => this.errorHandler(error));\n  }\n\n  /**\n   * Sign in with a poup\n   */\n  signInWithPopup(){\n    this.authService.loginWithPopup(this.googleProvider)\n    .then((Credential) => this.resultHandler(Credential))\n    .catch(error => this.errorHandler(error));\n  }\n\n  /**\n   * Result handler after an succesfull promise result\n   * @param result \n   */\n  private resultHandler(result: auth.UserCredential): auth.UserCredential{\n    //Check if we have a user\n    if (result.user) {\n      this.snackBar.open('welcome', '', { duration: 2000 });\n      this.onSuccess.next(result);\n\n      if (this.redirectOnSucces != null) {\n        this.router.navigate([this.redirectOnSucces])\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Result handler after an failed promise result\n   * @param result \n   */\n  private errorHandler(error: any): void {\n    this.onFailed.next(error.message);\n    this.snackBar.open(error.message, '', { duration: 2000 });\n  }\n}\n\n    \n\n    \n        Login with google\n\n    \n\n    \n                \n                    ../login-google/login-google.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Login with google'\n    var COMPONENTS = [{'name': 'AdminPopupComponent', 'selector': 'ng-admin-popup'},{'name': 'AdminSettingsComponent', 'selector': 'ng-admin-settings'},{'name': 'GroupCreateComponent', 'selector': 'ng-create-group'},{'name': 'GroupListComponent', 'selector': 'ng-group-list'},{'name': 'GroupSettingsComponent', 'selector': 'ng-group-settings'},{'name': 'GroupUsersSettingsComponent', 'selector': 'ng-group-users-settings'},{'name': 'LoginEmailPasswordComponent', 'selector': 'ng-login-email-password'},{'name': 'LoginGoogleComponent', 'selector': 'ng-login-google'},{'name': 'RegisterComponent', 'selector': 'ng-register'},{'name': 'SpinnerComponent', 'selector': 'ng-spinner'},{'name': 'UserSettingsComponent', 'selector': 'ng-user-settings'},{'name': 'ValidationMessageComponent', 'selector': 'ng-validation-message'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginGoogleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoginProvidersModule.html":{"url":"modules/LoginProvidersModule.html","title":"module - LoginProvidersModule","body":"\n                   \n\n\n\n\n    Modules\n    LoginProvidersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LoginProvidersModule\n\n\n\ncluster_LoginProvidersModule_declarations\n\n\n\ncluster_LoginProvidersModule_imports\n\n\n\ncluster_LoginProvidersModule_exports\n\n\n\n\nLoginEmailPasswordComponent\n\nLoginEmailPasswordComponent\n\n\n\nLoginProvidersModule\n\nLoginProvidersModule\n\nLoginProvidersModule -->\n\nLoginEmailPasswordComponent->LoginProvidersModule\n\n\n\n\n\nLoginGoogleComponent\n\nLoginGoogleComponent\n\nLoginProvidersModule -->\n\nLoginGoogleComponent->LoginProvidersModule\n\n\n\n\n\nLoginEmailPasswordComponent \n\nLoginEmailPasswordComponent \n\nLoginEmailPasswordComponent  -->\n\nLoginProvidersModule->LoginEmailPasswordComponent \n\n\n\n\n\nLoginGoogleComponent \n\nLoginGoogleComponent \n\nLoginGoogleComponent  -->\n\nLoginProvidersModule->LoginGoogleComponent \n\n\n\n\n\nSpinnerModule\n\nSpinnerModule\n\nLoginProvidersModule -->\n\nSpinnerModule->LoginProvidersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ng-usermanagement/src/lib/login/login-providers.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoginEmailPasswordComponent\n                        \n                        \n                            LoginGoogleComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SpinnerModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LoginEmailPasswordComponent\n                        \n                        \n                            LoginGoogleComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SpinnerModule } from '../spinner/spinner.module';\nimport { LoginEmailPasswordComponent } from './providers/login-email-password/login-email-password.component';\nimport { LoginGoogleComponent } from './providers/login-google/login-google.component';\nimport { MatSnackBarModule, MatInputModule, MatButtonModule } from '@angular/material';\n\n@NgModule({\n  declarations: [\n    LoginEmailPasswordComponent,\n    LoginGoogleComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SpinnerModule,\n    MatSnackBarModule,\n    MatInputModule,\n    MatButtonModule,\n  ],\n  exports: [\n    LoginEmailPasswordComponent,\n    LoginGoogleComponent\n  ],\n})\nexport class LoginProvidersModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgUserManagementModule.html":{"url":"modules/NgUserManagementModule.html","title":"module - NgUserManagementModule","body":"\n                   \n\n\n\n\n    Modules\n    NgUserManagementModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgUserManagementModule\n\n\n\ncluster_NgUserManagementModule_imports\n\n\n\ncluster_NgUserManagementModule_exports\n\n\n\ncluster_NgUserManagementModule_providers\n\n\n\n\nAdminPopupModule\n\nAdminPopupModule\n\n\n\nNgUserManagementModule\n\nNgUserManagementModule\n\nNgUserManagementModule -->\n\nAdminPopupModule->NgUserManagementModule\n\n\n\n\n\nAdminPopupModule \n\nAdminPopupModule \n\nAdminPopupModule  -->\n\nNgUserManagementModule->AdminPopupModule \n\n\n\n\n\nGroupModule \n\nGroupModule \n\nGroupModule  -->\n\nNgUserManagementModule->GroupModule \n\n\n\n\n\nLoginProvidersModule \n\nLoginProvidersModule \n\nLoginProvidersModule  -->\n\nNgUserManagementModule->LoginProvidersModule \n\n\n\n\n\nRegisterModule \n\nRegisterModule \n\nRegisterModule  -->\n\nNgUserManagementModule->RegisterModule \n\n\n\n\n\nSpinnerModule \n\nSpinnerModule \n\nSpinnerModule  -->\n\nNgUserManagementModule->SpinnerModule \n\n\n\n\n\nUserAdminSettingsModule \n\nUserAdminSettingsModule \n\nUserAdminSettingsModule  -->\n\nNgUserManagementModule->UserAdminSettingsModule \n\n\n\n\n\nAdminPopupService\n\nAdminPopupService\n\nNgUserManagementModule -->\n\nAdminPopupService->NgUserManagementModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ng-usermanagement/src/lib/ng-user-management.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AdminPopupService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AdminPopupModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AdminPopupModule\n                        \n                        \n                            GroupModule\n                        \n                        \n                            LoginProvidersModule\n                        \n                        \n                            RegisterModule\n                        \n                        \n                            SpinnerModule\n                        \n                        \n                            UserAdminSettingsModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config: ngUserManagementConfig, snackBar?: SnackBarInterface, appNameFactory?: () => void)\n                \n            \n\n\n            \n                \n                    Defined in libs/ng-usermanagement/src/lib/ng-user-management.module.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                ngUserManagementConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                                \n                                    snackBar\n                                    \n                                                SnackBarInterface\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    appNameFactory\n                                    \n                                                function\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { ModuleWithProviders, NgModule, Injector } from '@angular/core';\nimport { FirebaseNameOrConfigToken, FirebaseOptionsToken } from '@angular/fire';\nimport { ngUserManagementConfig, ngUserManagementConfigFactory, NgUserManagementConfigToken, UserProvidedConfigToken } from './interfaces/firebase-config.interface';\nimport { LoginProvidersModule } from './login/login-providers.module';\nimport { RegisterModule } from './register/register.module';\n\nimport { SpinnerModule } from './spinner/spinner.module';\nimport { UserAdminSettingsModule } from './settings/user.admin.settings.module';\nimport { GroupModule } from './group/group.Module';\n\nimport { AdminAuthGuardService } from './guards/admin-auth-guard.service';\nimport { AdminPopupModule } from './settings/admin/admin-popup/admin-popup.module';\nimport { AdminPopupService } from './settings/admin/admin-popup/admin-popup.service';\nimport { UserAuthGuardService } from './guards/user-auth-guard.service';\nimport { UserProvidedSnackBarToken, ngSnackBarFactory, SnackBarInterface, NgSnackBarToken } from './interfaces/snackbar-config.interface';\n\n\n@NgModule({\n  declarations: [\n  ],\n  imports: [AdminPopupModule],\n  exports: [\n    LoginProvidersModule,\n    RegisterModule,\n    SpinnerModule,\n    UserAdminSettingsModule,\n    AdminPopupModule,\n    GroupModule,\n  ],\n  providers: [\n    AdminAuthGuardService,\n    UserAuthGuardService,\n    AdminPopupService\n  ]\n})\nexport class NgUserManagementModule { \n  static forRoot(\n    //configFactory: FirebaseAppConfig,\n    config: ngUserManagementConfig = {},\n    snackBar?: SnackBarInterface,\n    appNameFactory?: () => string\n  ): ModuleWithProviders {\n    return {\n      ngModule: NgUserManagementModule,\n      providers:\n        [\n          {\n            provide: FirebaseOptionsToken,\n            useValue: config.firebaseConfig\n          },\n          {\n            provide: FirebaseNameOrConfigToken,\n            useFactory: appNameFactory\n          },\n          {provide: UserProvidedConfigToken, useValue: config},\n          {\n            provide: NgUserManagementConfigToken,\n            useFactory: ngUserManagementConfigFactory,\n            deps: [UserProvidedConfigToken]\n          },\n          {provide: UserProvidedSnackBarToken, useValue: snackBar},\n          {\n            provide: NgSnackBarToken,\n            useFactory: ngSnackBarFactory,\n            deps: [UserProvidedSnackBarToken, Injector]\n          }\n       ]\n    };\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ng-usermanagement/src/lib/register/register.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ng-register\n            \n\n            \n                styleUrls\n                ./register.component.css\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loading\n                            \n                            \n                                    Public\n                                registerForm\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                registerUser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                addExtraData\n                            \n                            \n                                redirectOnSucces\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onSuccesCreateAccount\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, snackBar: SnackBarInterface, router: Router, fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in libs/ng-usermanagement/src/lib/register/register.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                        SnackBarInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        addExtraData\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ng-usermanagement/src/lib/register/register.component.ts:23\n                            \n                        \n                \n                    \n                        Add extra data to the database on creating an account\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        redirectOnSucces\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ng-usermanagement/src/lib/register/register.component.ts:18\n                            \n                        \n                \n                    \n                        Redirect the user after a succesfully creating an account\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onSuccesCreateAccount\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ng-usermanagement/src/lib/register/register.component.ts:28\n                            \n                        \n                \n                    \n                        Sends an event after succesfully creating an account\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            registerUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerUser(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ng-usermanagement/src/lib/register/register.component.ts:55\n                \n            \n\n\n            \n                \n                    Register an user with an email and password\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in libs/ng-usermanagement/src/lib/register/register.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registerForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ng-usermanagement/src/lib/register/register.component.ts:35\n                            \n                        \n\n                \n                    \n                        register form group\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SnackBarInterface\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(NgSnackBarToken)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/ng-usermanagement/src/lib/register/register.component.ts:39\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Inject, Input, Output } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { NgSnackBarToken, SnackBarInterface } from '../interfaces/snackbar-config.interface';\nimport { AuthenticationService } from '../services/auth.service';\nimport { verifyPassword } from '../validation-message/validators';\n\n@Component({\n  selector: 'ng-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent {\n\n  /**\n   * Redirect the user after a succesfully creating an account\n   */\n  @Input() redirectOnSucces: string;\n\n  /**\n   * Add extra data to the database on creating an account\n   */\n  @Input() addExtraData: any;\n\n  /**\n   * Sends an event after succesfully creating an account\n   */\n  @Output() private onSuccesCreateAccount = new EventEmitter();\n\n  public loading: Boolean = false;\n\n  /**\n   * register form group\n   */\n  public registerForm: FormGroup;\n  \n  constructor(\n    private authService: AuthenticationService,\n    @Inject(NgSnackBarToken) public snackBar: SnackBarInterface,\n    private router: Router,\n    private fb: FormBuilder) \n  { \n    this.registerForm = fb.group({\n      email: new FormControl('', {updateOn: 'blur', validators: [Validators.required, Validators.email]}),\n      password: new FormControl('', {updateOn: 'blur', validators: [Validators.required]}),\n      confirmPassword: new FormControl('', {updateOn: 'blur', validators: [Validators.required]})\n    }, {updateOn: 'blur', validators: verifyPassword})\n  }\n\n  /**\n   * Register an user with an email and password\n   * @param email \n   * @param password \n   */\n  async registerUser(email: string, password: string): Promise {\n    try {\n      this.loading = true;\n      const userCredentials = await this.authService.createAccount(email, password, this.addExtraData)\n      this.onSuccesCreateAccount.emit(userCredentials)\n      this.loading = false\n      if (this.redirectOnSucces != null) {\n        await this.router.navigate([this.redirectOnSucces])\n      }\n      return Promise.resolve();\n    } catch(err) {\n      this.loading = false;\n      this.snackBar.open(err.message, '', { duration: 2000 });\n      return Promise.reject(err)\n    }\n  }\n}\n\n    \n\n    \n        \n  \n  \n\n  \n  \n\n  \n  \n  \n  create account\n\n\n\n    \n\n    \n                \n                    ./register.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                create account'\n    var COMPONENTS = [{'name': 'AdminPopupComponent', 'selector': 'ng-admin-popup'},{'name': 'AdminSettingsComponent', 'selector': 'ng-admin-settings'},{'name': 'GroupCreateComponent', 'selector': 'ng-create-group'},{'name': 'GroupListComponent', 'selector': 'ng-group-list'},{'name': 'GroupSettingsComponent', 'selector': 'ng-group-settings'},{'name': 'GroupUsersSettingsComponent', 'selector': 'ng-group-users-settings'},{'name': 'LoginEmailPasswordComponent', 'selector': 'ng-login-email-password'},{'name': 'LoginGoogleComponent', 'selector': 'ng-login-google'},{'name': 'RegisterComponent', 'selector': 'ng-register'},{'name': 'SpinnerComponent', 'selector': 'ng-spinner'},{'name': 'UserSettingsComponent', 'selector': 'ng-user-settings'},{'name': 'ValidationMessageComponent', 'selector': 'ng-validation-message'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RegisterModule.html":{"url":"modules/RegisterModule.html","title":"module - RegisterModule","body":"\n                   \n\n\n\n\n    Modules\n    RegisterModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RegisterModule\n\n\n\ncluster_RegisterModule_declarations\n\n\n\ncluster_RegisterModule_imports\n\n\n\ncluster_RegisterModule_exports\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\n\n\nRegisterModule\n\nRegisterModule\n\nRegisterModule -->\n\nRegisterComponent->RegisterModule\n\n\n\n\n\nRegisterComponent \n\nRegisterComponent \n\nRegisterComponent  -->\n\nRegisterModule->RegisterComponent \n\n\n\n\n\nSpinnerModule\n\nSpinnerModule\n\nRegisterModule -->\n\nSpinnerModule->RegisterModule\n\n\n\n\n\nValidationMessageModule\n\nValidationMessageModule\n\nRegisterModule -->\n\nValidationMessageModule->RegisterModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ng-usermanagement/src/lib/register/register.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RegisterComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SpinnerModule\n                        \n                        \n                            ValidationMessageModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RegisterComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SpinnerModule } from '../spinner/spinner.module';\nimport { ValidationMessageModule } from '../validation-message/validation-message.module';\nimport { RegisterComponent } from './register.component';\nimport { MatButtonModule, MatInputModule, MatSnackBarModule } from '@angular/material';\n\n@NgModule({\n  declarations: [\n    RegisterComponent,\n  ],\n  imports: [\n    CommonModule,\n    SpinnerModule,\n    FormsModule,\n    MatButtonModule,\n    MatInputModule,\n    MatSnackBarModule,\n    ReactiveFormsModule,\n    ValidationMessageModule,\n  ],\n  exports: [RegisterComponent]\n})\nexport class RegisterModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SnackBarInterface.html":{"url":"interfaces/SnackBarInterface.html","title":"interface - SnackBarInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SnackBarInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ng-usermanagement/src/lib/interfaces/snackbar-config.interface.ts\n        \n\n            \n                Description\n            \n            \n                An interface of a snackbar\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    open\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            open\n                        \n                        \n                    \n                \n            \n            \n                \nopen(message: string, action?: string, config?: any)\n                \n            \n\n\n            \n                \n                    Defined in libs/ng-usermanagement/src/lib/interfaces/snackbar-config.interface.ts:22\n                \n            \n\n\n            \n                \n                    open a snackbar message with extra configs\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    config\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { InjectionToken, Injector } from '@angular/core';\nimport { MatSnackBar } from '@angular/material';\n\n/**\n * This token is the official token containing the final configuration; ie. the merge between default and user provided configurations\n */ \nexport const NgSnackBarToken = new InjectionToken('NgSnackBarToken');\n\n/**\n * This is an intermediate token containing only user-provided configuration\n */\nexport const UserProvidedSnackBarToken = new InjectionToken('UserProvidedSnackBarToken');\n\n/**\n * An interface of a snackbar\n */\nexport interface SnackBarInterface {\n\n  /**\n   * open a snackbar message with extra configs\n   */\n  open(message: string, action?: string, config?: any): any;\n}\n\n/**\n * Switch between default snackbar and a userprovided snackbar\n * @param userProvidedSnackBar \n * @param injector \n */\nexport function ngSnackBarFactory(userProvidedSnackBar: SnackBarInterface, injector: Injector): SnackBarInterface {\n  if (userProvidedSnackBar === undefined || userProvidedSnackBar === null) {\n    return injector.get(MatSnackBar);\n  } else {\n    return userProvidedSnackBar;\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SpinnerComponent.html":{"url":"components/SpinnerComponent.html","title":"component - SpinnerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SpinnerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ng-usermanagement/src/lib/spinner/spinner.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ng-spinner\n            \n\n            \n                styleUrls\n                ./spinner.component.css\n            \n\n\n\n            \n                templateUrl\n                ./spinner.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in libs/ng-usermanagement/src/lib/spinner/spinner.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in libs/ng-usermanagement/src/lib/spinner/spinner.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ng-spinner',\n  templateUrl: './spinner.component.html',\n  styleUrls: ['./spinner.component.css']\n})\nexport class SpinnerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n}\n\n    \n\n    \n        \n  \n\n    \n\n    \n                \n                    ./spinner.component.css\n                \n                .mat-progress-spinner {\n  stroke: #673ab7;\n}\n\n.loader {\n  width: 450px;\n  height: 300px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%,-50%);\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AdminPopupComponent', 'selector': 'ng-admin-popup'},{'name': 'AdminSettingsComponent', 'selector': 'ng-admin-settings'},{'name': 'GroupCreateComponent', 'selector': 'ng-create-group'},{'name': 'GroupListComponent', 'selector': 'ng-group-list'},{'name': 'GroupSettingsComponent', 'selector': 'ng-group-settings'},{'name': 'GroupUsersSettingsComponent', 'selector': 'ng-group-users-settings'},{'name': 'LoginEmailPasswordComponent', 'selector': 'ng-login-email-password'},{'name': 'LoginGoogleComponent', 'selector': 'ng-login-google'},{'name': 'RegisterComponent', 'selector': 'ng-register'},{'name': 'SpinnerComponent', 'selector': 'ng-spinner'},{'name': 'UserSettingsComponent', 'selector': 'ng-user-settings'},{'name': 'ValidationMessageComponent', 'selector': 'ng-validation-message'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SpinnerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SpinnerModule.html":{"url":"modules/SpinnerModule.html","title":"module - SpinnerModule","body":"\n                   \n\n\n\n\n    Modules\n    SpinnerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SpinnerModule\n\n\n\ncluster_SpinnerModule_declarations\n\n\n\ncluster_SpinnerModule_exports\n\n\n\n\nSpinnerComponent\n\nSpinnerComponent\n\n\n\nSpinnerModule\n\nSpinnerModule\n\nSpinnerModule -->\n\nSpinnerComponent->SpinnerModule\n\n\n\n\n\nSpinnerComponent \n\nSpinnerComponent \n\nSpinnerComponent  -->\n\nSpinnerModule->SpinnerComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ng-usermanagement/src/lib/spinner/spinner.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SpinnerComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SpinnerComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatProgressSpinnerModule } from '@angular/material';\nimport { SpinnerComponent } from './spinner.component';\n\n@NgModule({\n  declarations: [SpinnerComponent],\n  imports: [\n    CommonModule,\n    MatProgressSpinnerModule,\n  ],\n  exports: [SpinnerComponent]\n})\nexport class SpinnerModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserAdminSettingsModule.html":{"url":"modules/UserAdminSettingsModule.html","title":"module - UserAdminSettingsModule","body":"\n                   \n\n\n\n\n    Modules\n    UserAdminSettingsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserAdminSettingsModule\n\n\n\ncluster_UserAdminSettingsModule_declarations\n\n\n\ncluster_UserAdminSettingsModule_imports\n\n\n\ncluster_UserAdminSettingsModule_exports\n\n\n\n\nAdminSettingsComponent\n\nAdminSettingsComponent\n\n\n\nUserAdminSettingsModule\n\nUserAdminSettingsModule\n\nUserAdminSettingsModule -->\n\nAdminSettingsComponent->UserAdminSettingsModule\n\n\n\n\n\nUserSettingsComponent\n\nUserSettingsComponent\n\nUserAdminSettingsModule -->\n\nUserSettingsComponent->UserAdminSettingsModule\n\n\n\n\n\nAdminSettingsComponent \n\nAdminSettingsComponent \n\nAdminSettingsComponent  -->\n\nUserAdminSettingsModule->AdminSettingsComponent \n\n\n\n\n\nUserSettingsComponent \n\nUserSettingsComponent \n\nUserSettingsComponent  -->\n\nUserAdminSettingsModule->UserSettingsComponent \n\n\n\n\n\nSpinnerModule\n\nSpinnerModule\n\nUserAdminSettingsModule -->\n\nSpinnerModule->UserAdminSettingsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ng-usermanagement/src/lib/settings/user.admin.settings.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AdminSettingsComponent\n                        \n                        \n                            UserSettingsComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            AdminPopupComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SpinnerModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AdminSettingsComponent\n                        \n                        \n                            UserSettingsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatSnackBarModule, MatButtonModule, MatInputModule } from '@angular/material';\nimport { AdminSettingsComponent } from './admin/admin.settings.Component';\nimport { UserSettingsComponent } from './user/user.settings.Component';\nimport { SpinnerModule } from '../spinner/spinner.module';\nimport { AdminPopupComponent } from './admin/admin-popup/admin-popup.component';\n\n@NgModule({\n  declarations: [\n    UserSettingsComponent,\n    AdminSettingsComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatSnackBarModule,\n    MatButtonModule,\n    MatInputModule,\n    SpinnerModule,\n  ],\n  exports: [\n    UserSettingsComponent,\n    AdminSettingsComponent\n  ],\n  entryComponents: [\n    AdminPopupComponent\n  ]\n})\nexport class UserAdminSettingsModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/UserAuthGuardService.html":{"url":"guards/UserAuthGuardService.html","title":"guard - UserAuthGuardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    UserAuthGuardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                libs/ng-usermanagement/src/lib/guards/user-auth-guard.service.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                snackBar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, snackBar: SnackBarInterface)\n                    \n                \n                        \n                            \n                                Defined in libs/ng-usermanagement/src/lib/guards/user-auth-guard.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                        SnackBarInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in libs/ng-usermanagement/src/lib/guards/user-auth-guard.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    next\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Inject, Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { NgSnackBarToken, SnackBarInterface } from '../interfaces/snackbar-config.interface';\nimport { UserService } from '../services/user.service';\n\n@Injectable()\nexport class UserAuthGuardService implements CanActivate {\n\n  constructor(\n    private userService: UserService, \n    @Inject(NgSnackBarToken) public snackBar: SnackBarInterface) {\n  }\n\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n    return this.userService.user$.pipe(\n      map(user => !!user),\n      tap(isUser => {\n        if(!isUser) {\n          this.snackBar.open('You are not logged in', '', { duration: 2000 })\n        }\n      })\n    );\n  }\n}\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserModel.html":{"url":"classes/UserModel.html","title":"class - UserModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ng-usermanagement/src/lib/models/user.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                adress\n                            \n                            \n                                    Optional\n                                age\n                            \n                            \n                                    Optional\n                                email\n                            \n                            \n                                    Optional\n                                groups\n                            \n                            \n                                    Optional\n                                name\n                            \n                            \n                                uid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            adress\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     [literal type]\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ng-usermanagement/src/lib/models/user.model.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            age\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ng-usermanagement/src/lib/models/user.model.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ng-usermanagement/src/lib/models/user.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            groups\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ng-usermanagement/src/lib/models/user.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ng-usermanagement/src/lib/models/user.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ng-usermanagement/src/lib/models/user.model.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UserModel {\n  uid: string;\n  age?: string;\n  name?: string;\n  email?: string;\n  groups?: string[];\n  adress?: [{\n    city?: string;\n    country?: string;\n    postcode?: string;\n    street?: string;\n    number?: string;\n  }]\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ng-usermanagement/src/lib/services/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                user$\n                            \n                            \n                                    Private\n                                userCollection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getUserWithId\n                            \n                            \n                                    Public\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(db: AngularFirestore, angularFireAuth: AngularFireAuth)\n                    \n                \n                        \n                            \n                                Defined in libs/ng-usermanagement/src/lib/services/user.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        db\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        angularFireAuth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUserWithId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserWithId(uid: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ng-usermanagement/src/lib/services/user.service.ts:46\n                \n            \n\n\n            \n                \n                    Get user data from firestore with the Id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUser(uid: string, userData: Object)\n                \n            \n\n\n            \n                \n                    Defined in libs/ng-usermanagement/src/lib/services/user.service.ts:38\n                \n            \n\n\n            \n                \n                    Update the user data in firestore\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userData\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            user$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ng-usermanagement/src/lib/services/user.service.ts:15\n                            \n                        \n\n                \n                    \n                        Current logged in user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            userCollection\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AngularFirestoreCollection\n\n                        \n                    \n                    \n                        \n                            Default value : this.db.collection('users')\n                        \n                    \n                        \n                            \n                                    Defined in libs/ng-usermanagement/src/lib/services/user.service.ts:20\n                            \n                        \n\n                \n                    \n                        user collection in firestore\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/firestore';\nimport { Observable, of } from 'rxjs';\nimport { map, shareReplay, switchMap } from 'rxjs/operators';\nimport { UserModel } from '../models/user.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  /**\n   * Current logged in user\n   */\n  public readonly user$: Observable;\n\n  /**\n   * user collection in firestore\n   */\n  private userCollection: AngularFirestoreCollection = this.db.collection('users');\n  \n  constructor(\n    private db: AngularFirestore,\n    private angularFireAuth: AngularFireAuth) {\n      \n    this.user$ = this.angularFireAuth.authState.pipe(\n      switchMap((fbUser) => fbUser ? this.userCollection.doc(fbUser.uid).valueChanges() : of(null)),\n      map(user => user as UserModel),\n      shareReplay(1)\n      );\n  }\n\n  /**\n   * Update the user data in firestore\n   * @param uid \n   * @param userData \n   */ \n  public updateUser(uid: string, userData: Object): Promise {\n    return this.userCollection.doc(uid).update(userData);\n  }\n\n  /**\n   * Get user data from firestore with the Id\n   * @param userId \n   */\n  public getUserWithId(uid: string): Observable {\n    return this.userCollection.doc(uid).valueChanges().pipe(\n      map(user => user as UserModel),\n      shareReplay(1)\n    )\n  }\n}\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserSettingsComponent.html":{"url":"components/UserSettingsComponent.html","title":"component - UserSettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserSettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ng-usermanagement/src/lib/settings/user/user.settings.Component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ng-user-settings\n            \n\n            \n                styleUrls\n                ./user.settings.component.css\n            \n\n\n\n            \n                templateUrl\n                ./user.settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentUser$\n                            \n                            \n                                    Public\n                                formBuilder\n                            \n                            \n                                    Public\n                                loading\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                    Public\n                                userService\n                            \n                            \n                                    Public\n                                userSettingsForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                errorHandler\n                            \n                            \n                                    Public\n                                    Async\n                                logout\n                            \n                            \n                                    Private\n                                snackBarMessage\n                            \n                            \n                                    Public\n                                updateUserData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                addExtraData\n                            \n                            \n                                redirectOnLogout\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, userService: UserService, formBuilder: FormBuilder, router: Router, snackBar: SnackBarInterface)\n                    \n                \n                        \n                            \n                                Defined in libs/ng-usermanagement/src/lib/settings/user/user.settings.Component.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                        SnackBarInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        addExtraData\n                    \n                \n                \n                    \n                        Type :         Object\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                        \n                            \n                                    Defined in libs/ng-usermanagement/src/lib/settings/user/user.settings.Component.ts:26\n                            \n                        \n                \n                    \n                        Add extra data to the database on update the user data\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        redirectOnLogout\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ng-usermanagement/src/lib/settings/user/user.settings.Component.ts:21\n                            \n                        \n                \n                    \n                        redirect the user on a succesful logout\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            errorHandler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    errorHandler(error: any)\n                \n            \n\n\n            \n                \n                    Defined in libs/ng-usermanagement/src/lib/settings/user/user.settings.Component.ts:96\n                \n            \n\n\n            \n                \n                    remove the loading and show a snackbar of the error\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nAn object with a message variable\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logout()\n                \n            \n\n\n            \n                \n                    Defined in libs/ng-usermanagement/src/lib/settings/user/user.settings.Component.ts:69\n                \n            \n\n\n            \n                \n                    Logout the current logged in user\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            snackBarMessage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    snackBarMessage(message: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/ng-usermanagement/src/lib/settings/user/user.settings.Component.ts:88\n                \n            \n\n\n            \n                \n                    Open a snackbar message\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateUserData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUserData(data: Object)\n                \n            \n\n\n            \n                \n                    Defined in libs/ng-usermanagement/src/lib/settings/user/user.settings.Component.ts:59\n                \n            \n\n\n            \n                \n                    Update the users data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentUser$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ng-usermanagement/src/lib/settings/user/user.settings.Component.ts:31\n                            \n                        \n\n                \n                    \n                        The current logged in user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            formBuilder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormBuilder\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ng-usermanagement/src/lib/settings/user/user.settings.Component.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in libs/ng-usermanagement/src/lib/settings/user/user.settings.Component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SnackBarInterface\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(NgSnackBarToken)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/ng-usermanagement/src/lib/settings/user/user.settings.Component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserService\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ng-usermanagement/src/lib/settings/user/user.settings.Component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userSettingsForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                    \n                        \n                            Default value : this.formBuilder.group({\n    uid: new FormControl(),\n    displayName: new FormControl(),\n    email: new FormControl()\n  })\n                        \n                    \n                        \n                            \n                                    Defined in libs/ng-usermanagement/src/lib/settings/user/user.settings.Component.ts:37\n                            \n                        \n\n                \n                    \n                        A formgroup with the users data\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject, Input } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { NgSnackBarToken, SnackBarInterface } from '../../interfaces/snackbar-config.interface';\nimport { UserModel } from '../../models/user.model';\nimport { AuthenticationService } from '../../services/auth.service';\nimport { UserService } from '../../services/user.service';\n\n@Component({\n  selector: 'ng-user-settings',\n  templateUrl: './user.settings.component.html',\n  styleUrls: ['./user.settings.component.css'],\n})\n\nexport class UserSettingsComponent {\n  /**\n   * redirect the user on a succesful logout\n   */\n  @Input() redirectOnLogout: string;\n\n  /**\n   * Add extra data to the database on update the user data\n   */\n  @Input() addExtraData: Object = {};\n  \n  /**\n   * The current logged in user\n   */\n  public currentUser$: Observable\n  public loading: boolean = false;\n  \n  /**\n   * A formgroup with the users data\n   */\n  public userSettingsForm: FormGroup = this.formBuilder.group({\n    uid: new FormControl(),\n    displayName: new FormControl(),\n    email: new FormControl()\n  });\n\n  constructor(\n    private authService: AuthenticationService, \n    public userService: UserService, \n    public formBuilder: FormBuilder,\n    private router: Router,\n    @Inject(NgSnackBarToken) public snackBar: SnackBarInterface)\n    {\n      this.currentUser$ = this.userService.user$.pipe(\n        tap(user => { this.userSettingsForm.patchValue(user)})\n      )\n    }\n\n  /**\n   * Update the users data\n   * @param data \n   */\n  public updateUserData(data: Object): Promise {\n    this.loading = true;\n    return this.userService.updateUser(this.userSettingsForm.controls['uid'].value, { ...data, ...this.addExtraData})\n      .then(() => { this.loading = false; this.snackBarMessage('update succesful') })\n      .catch((e) => this.errorHandler(e));\n  }\n\n  /**\n   * Logout the current logged in user\n   */\n  public async logout(): Promise {\n    this.loading = true;\n    try {\n      await this.authService.logout();\n      this.loading = false;\n      this.snackBarMessage('logout succesfull')\n      if (this.redirectOnLogout != null) await this.router.navigate([this.redirectOnLogout])\n      return Promise.resolve()\n    } catch(err) {\n      this.loading = false\n      this.snackBarMessage(err.message);\n      return Promise.reject(err);\n    }\n  }\n\n  /**\n   * Open a snackbar message\n   * @param message\n   */\n  private snackBarMessage(message: string): void {\n    this.snackBar.open(message, '', { duration: 2000 })\n  }\n\n  /**\n   * remove the loading and show a snackbar of the error\n   * @param error - An object with a message variable\n   */\n  private errorHandler(error: any): void {\n    this.loading = false;\n    this.snackBarMessage(error.message);\n  }\n}\n    \n\n    \n        \n\n  \n    Name\n    \n    Update settings\n    Logout         \n  \n\n\n\n    \n\n    \n                \n                    ./user.settings.component.css\n                \n                .user-settings-collection form {\n  max-width: 400px;\n  width: 70%;\n  padding: 40px;\n  margin: 0 auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Name        Update settings    Logout           '\n    var COMPONENTS = [{'name': 'AdminPopupComponent', 'selector': 'ng-admin-popup'},{'name': 'AdminSettingsComponent', 'selector': 'ng-admin-settings'},{'name': 'GroupCreateComponent', 'selector': 'ng-create-group'},{'name': 'GroupListComponent', 'selector': 'ng-group-list'},{'name': 'GroupSettingsComponent', 'selector': 'ng-group-settings'},{'name': 'GroupUsersSettingsComponent', 'selector': 'ng-group-users-settings'},{'name': 'LoginEmailPasswordComponent', 'selector': 'ng-login-email-password'},{'name': 'LoginGoogleComponent', 'selector': 'ng-login-google'},{'name': 'RegisterComponent', 'selector': 'ng-register'},{'name': 'SpinnerComponent', 'selector': 'ng-spinner'},{'name': 'UserSettingsComponent', 'selector': 'ng-user-settings'},{'name': 'ValidationMessageComponent', 'selector': 'ng-validation-message'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserSettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ValidationMessageComponent.html":{"url":"components/ValidationMessageComponent.html","title":"component - ValidationMessageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ValidationMessageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/ng-usermanagement/src/lib/validation-message/validation-message.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ng-validation-message\n            \n\n            \n                styleUrls\n                ./validation-message.component.css\n            \n\n\n\n            \n                templateUrl\n                ./validation-message.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                errorMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                control\n                            \n                            \n                                validationMessage\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in libs/ng-usermanagement/src/lib/validation-message/validation-message.component.ts:27\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                        \n                            \n                                    Defined in libs/ng-usermanagement/src/lib/validation-message/validation-message.component.ts:16\n                            \n                        \n                \n                    \n                        The formControl the application is validating\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        validationMessage\n                    \n                \n                \n                    \n                        Default value : {\n    required: 'Required',\n    email: 'Invalid email address',\n    verifyPassword: 'Verify your password',\n  }\n                    \n                \n                        \n                            \n                                    Defined in libs/ng-usermanagement/src/lib/validation-message/validation-message.component.ts:21\n                            \n                        \n                \n                    \n                        All of the possible messages the error can give\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in libs/ng-usermanagement/src/lib/validation-message/validation-message.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/ng-usermanagement/src/lib/validation-message/validation-message.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject, Input, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'ng-validation-message',\n  templateUrl: './validation-message.component.html',\n  styleUrls: ['./validation-message.component.css']\n})\nexport class ValidationMessageComponent implements OnInit {\n\n  /**\n   * The formControl the application is validating\n   */\n  @Input() control: FormControl;\n\n  /**\n   * All of the possible messages the error can give\n   */\n  @Input() validationMessage = {\n    required: 'Required',\n    email: 'Invalid email address',\n    verifyPassword: 'Verify your password',\n  }\n\n  public errorMessage: Observable;\n\n  constructor() {}\n  \n  ngOnInit() {\n    this.errorMessage = this.control.valueChanges.pipe(\n      map((control) => {\n        for (let propertyName in this.control.errors) {\n          if (this.control.touched) {\n            return this.validationMessage[propertyName]\n          }\n        }\n        return\n      })\n    )\n  }\n}\n    \n\n    \n        \n  {{errorMessage | async }}\n\n    \n\n    \n                \n                    ./validation-message.component.css\n                \n                .validationMessage p {\n  color: red;\n  padding: 0px;\n  margin: 0px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{errorMessage | async }}'\n    var COMPONENTS = [{'name': 'AdminPopupComponent', 'selector': 'ng-admin-popup'},{'name': 'AdminSettingsComponent', 'selector': 'ng-admin-settings'},{'name': 'GroupCreateComponent', 'selector': 'ng-create-group'},{'name': 'GroupListComponent', 'selector': 'ng-group-list'},{'name': 'GroupSettingsComponent', 'selector': 'ng-group-settings'},{'name': 'GroupUsersSettingsComponent', 'selector': 'ng-group-users-settings'},{'name': 'LoginEmailPasswordComponent', 'selector': 'ng-login-email-password'},{'name': 'LoginGoogleComponent', 'selector': 'ng-login-google'},{'name': 'RegisterComponent', 'selector': 'ng-register'},{'name': 'SpinnerComponent', 'selector': 'ng-spinner'},{'name': 'UserSettingsComponent', 'selector': 'ng-user-settings'},{'name': 'ValidationMessageComponent', 'selector': 'ng-validation-message'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ValidationMessageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ValidationMessageModule.html":{"url":"modules/ValidationMessageModule.html","title":"module - ValidationMessageModule","body":"\n                   \n\n\n\n\n    Modules\n    ValidationMessageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ValidationMessageModule\n\n\n\ncluster_ValidationMessageModule_declarations\n\n\n\ncluster_ValidationMessageModule_exports\n\n\n\n\nValidationMessageComponent\n\nValidationMessageComponent\n\n\n\nValidationMessageModule\n\nValidationMessageModule\n\nValidationMessageModule -->\n\nValidationMessageComponent->ValidationMessageModule\n\n\n\n\n\nValidationMessageComponent \n\nValidationMessageComponent \n\nValidationMessageComponent  -->\n\nValidationMessageModule->ValidationMessageComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/ng-usermanagement/src/lib/validation-message/validation-message.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ValidationMessageComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ValidationMessageComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ValidationMessageComponent } from './validation-message.component';\n\n@NgModule({\n  declarations: [\n    ValidationMessageComponent,\n  ],\n  imports: [\n    CommonModule,\n  ],\n  exports: [ValidationMessageComponent]\n})\nexport class ValidationMessageModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                libs/ng-usermanagement/src/lib/group/group-create/group-create.component.ts\n            \n            component\n            GroupCreateComponent\n            \n                60 %\n                (6/10)\n            \n        \n        \n            \n                \n                libs/ng-usermanagement/src/lib/group/group-list/group-list.component.ts\n            \n            component\n            GroupListComponent\n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                libs/ng-usermanagement/src/lib/group/group-settings/group-settings.component.ts\n            \n            component\n            GroupSettingsComponent\n            \n                55 %\n                (5/9)\n            \n        \n        \n            \n                \n                libs/ng-usermanagement/src/lib/group/group-users/group-users.component.ts\n            \n            component\n            GroupUsersSettingsComponent\n            \n                66 %\n                (8/12)\n            \n        \n        \n            \n                \n                libs/ng-usermanagement/src/lib/guards/admin-auth-guard.service.ts\n            \n            guard\n            AdminAuthGuardService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                libs/ng-usermanagement/src/lib/guards/user-auth-guard.service.ts\n            \n            guard\n            UserAuthGuardService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                libs/ng-usermanagement/src/lib/interfaces/firebase-config.interface.ts\n            \n            interface\n            ngUserManagementConfig\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                libs/ng-usermanagement/src/lib/interfaces/firebase-config.interface.ts\n            \n            function\n            ngUserManagementConfigFactory\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ng-usermanagement/src/lib/interfaces/firebase-config.interface.ts\n            \n            variable\n            defaultUserManagementConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ng-usermanagement/src/lib/interfaces/firebase-config.interface.ts\n            \n            variable\n            NgUserManagementConfigToken\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ng-usermanagement/src/lib/interfaces/firebase-config.interface.ts\n            \n            variable\n            UserProvidedConfigToken\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ng-usermanagement/src/lib/interfaces/snackbar-config.interface.ts\n            \n            interface\n            SnackBarInterface\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/ng-usermanagement/src/lib/interfaces/snackbar-config.interface.ts\n            \n            function\n            ngSnackBarFactory\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ng-usermanagement/src/lib/interfaces/snackbar-config.interface.ts\n            \n            variable\n            NgSnackBarToken\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ng-usermanagement/src/lib/interfaces/snackbar-config.interface.ts\n            \n            variable\n            UserProvidedSnackBarToken\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                libs/ng-usermanagement/src/lib/login/providers/login-email-password/login-email-password.component.ts\n            \n            component\n            LoginEmailPasswordComponent\n            \n                50 %\n                (5/10)\n            \n        \n        \n            \n                \n                libs/ng-usermanagement/src/lib/login/providers/login-google/login-google.component.ts\n            \n            component\n            LoginGoogleComponent\n            \n                76 %\n                (10/13)\n            \n        \n        \n            \n                \n                libs/ng-usermanagement/src/lib/models/group.model.ts\n            \n            class\n            Group\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                libs/ng-usermanagement/src/lib/models/user.model.ts\n            \n            class\n            UserModel\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                libs/ng-usermanagement/src/lib/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                55 %\n                (5/9)\n            \n        \n        \n            \n                \n                libs/ng-usermanagement/src/lib/services/admin.auth.service.ts\n            \n            injectable\n            AdminAuthService\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                libs/ng-usermanagement/src/lib/services/auth.service.ts\n            \n            injectable\n            AuthenticationService\n            \n                60 %\n                (6/10)\n            \n        \n        \n            \n                \n                libs/ng-usermanagement/src/lib/services/group.service.ts\n            \n            injectable\n            GroupService\n            \n                66 %\n                (6/9)\n            \n        \n        \n            \n                \n                libs/ng-usermanagement/src/lib/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                libs/ng-usermanagement/src/lib/settings/admin/admin-popup/admin-popup.component.ts\n            \n            component\n            AdminPopupComponent\n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                libs/ng-usermanagement/src/lib/settings/admin/admin-popup/admin-popup.service.ts\n            \n            injectable\n            AdminPopupService\n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                libs/ng-usermanagement/src/lib/settings/admin/admin.settings.Component.ts\n            \n            component\n            AdminSettingsComponent\n            \n                66 %\n                (10/15)\n            \n        \n        \n            \n                \n                libs/ng-usermanagement/src/lib/settings/user/user.settings.Component.ts\n            \n            component\n            UserSettingsComponent\n            \n                57 %\n                (8/14)\n            \n        \n        \n            \n                \n                libs/ng-usermanagement/src/lib/spinner/spinner.component.ts\n            \n            component\n            SpinnerComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/ng-usermanagement/src/lib/validation-message/validation-message.component.ts\n            \n            component\n            ValidationMessageComponent\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                libs/ng-usermanagement/src/lib/validation-message/validators.ts\n            \n            variable\n            verifyPassword\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^8.2.10\n        \n            @angular/cdk : ^8.2.3\n        \n            @angular/common : ~8.2.0\n        \n            @angular/compiler : ~8.2.0\n        \n            @angular/core : ~8.2.0\n        \n            @angular/fire : ^5.2.1\n        \n            @angular/flex-layout : ^8.0.0-beta.27\n        \n            @angular/forms : ^8.2.10\n        \n            @angular/material : ^8.2.3\n        \n            @angular/platform-browser : ~8.2.0\n        \n            @angular/platform-browser-dynamic : ~8.2.0\n        \n            @angular/router : ^8.2.10\n        \n            @ngx-pwa/local-storage : ^8.2.2\n        \n            @nrwl/angular : ^8.7.0\n        \n            @nrwl/workspace : ^8.7.0\n        \n            angular2-materialize : ^15.1.10\n        \n            angular2-toaster : ^8.0.0\n        \n            core-js : ^2.5.4\n        \n            firebase : ^6.6.2\n        \n            hammerjs : ^2.0.8\n        \n            jquery : ^2.2.4\n        \n            materialize-css : ^1.0.0\n        \n            rxjs : ~6.4.0\n        \n            sinon : ^8.1.0\n        \n            tslib : ^1.10.0\n        \n            zone.js : ~0.9.1\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthenticationFlow   (libs/.../login-google.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/ng-usermanagement/src/lib/login/providers/login-google/login-google.component.ts\n    \n        \n            \n                \n                    \n                        \n                        AuthenticationFlow\n                    \n                \n                        \n                            \n                                 popup\n                            \n                        \n                        \n                            \n                                Value : popup\n                            \n                        \n                        \n                            \n                                 redirect\n                            \n                        \n                        \n                            \n                                Value : redirect\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ngSnackBarFactory   (libs/.../snackbar-config.interface.ts)\n                        \n                        \n                            ngUserManagementConfigFactory   (libs/.../firebase-config.interface.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/ng-usermanagement/src/lib/interfaces/snackbar-config.interface.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            ngSnackBarFactory\n                        \n                        \n                    \n                \n            \n            \n                \nngSnackBarFactory(userProvidedSnackBar, injector)\n                \n            \n\n\n\n\n            \n                \n                    Switch between default snackbar and a userprovided snackbar\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userProvidedSnackBar\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    injector\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SnackBarInterface\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    libs/ng-usermanagement/src/lib/interfaces/firebase-config.interface.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            ngUserManagementConfigFactory\n                        \n                        \n                    \n                \n            \n            \n                \nngUserManagementConfigFactory(userProvidedConfig)\n                \n            \n\n\n\n\n            \n                \n                    Merge default config with user provided config.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userProvidedConfig\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ngUserManagementConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nTable of Contents\n\nLibrary's Components\nSupported Providers\nSupported Processes and Actions\nSupported Angular Guards\nPeer Dependencies\nInstallation\ntesting\n\n\n\n\nLibrary's Components\n\n standalone registration component to create new accounts\n standalone login component with email & password\n standalone login component with the google provider\n standalone user settings component\n standalone admin settings component, for implementation click here\n standalone create group component\n standalone group list of current logged in user\n standalone group settings component of given group\n standalone user settings of given group\n\nfor an complete guide of the files go click here\n\n\n\nSupported Providers:\n\nemail and password (traditional)\ngoogle\n\n\n\n\nSupported Processes and Actions:\n\nsign up\nsign in\nsign out\ndelete user's account\nImpersonate a user (admin only)\nfirestore sync\n\n\nSupported Angular Guards\n\nLoggedInGuard used to protect angular routes from unauthenticated users (with fallback routes via NgxAuthFirebaseUIConfig)\nAdminAuthGuard used to protect angular routes from non admin users (with fallback routes via NgxAuthFirebaseUIConfig)\n\n\n\n\nPeer Dependencies - please make sure that peerDependencies are installed\n\"peerDependencies\": {\n    \"@angular/common\": \"^8.2.0\",\n    \"@angular/core\": \"^8.2.0\",\n    \"@angular/router\": \"^8.2.10\",\n    \"@angular/fire\": \"^5.2.1\",\n    \"@angular/material\": \"8.2.3\",\n    \"firebase\": \"^6.6.2\",\n    \"rxjs\": \"~6.4.0\"\n  }\n\n\nInstallation\n1. Install with npm\nInstall all of the above dependencies with npm\nInstall the library with npm\nnpm install ng-usermanagement\n2. Configs\nOnce you have installed the library you need to import the module into the main module.\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\n// Import the library\nimport { NgUserManagementModule } from 'ng-usermanagement';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nconst firebaseConfig = {\n  authGuardLoggedInURL: \"[fallback Url]\" // Fallback to this url if the user isn't logged in\n  firebaseConfig: {\n    apiKey: \"[Project Key]\",\n    authDomain: \"[Project Id].firebaseapp.com\",\n    databaseURL: \"https://[Project Id].firebaseio.com\",\n    projectId: \"[Project Id]\",\n    storageBucket: \"[Project Id].appspot.com\",\n    messagingSenderId: \"[messageSender Id]\",\n    appId: \"[App Id]\"\n  }\n};\n\nconst inputValidationConfig = {\n  required: 'Required',\n  email: 'Invalid email address',\n  verifyPassword: 'Verify your password',\n}\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    NgUserManagementModule.forRoot(firebaseConfig, inputValidationConfig),\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n3. firebase cloud functions\nCopy and paste the firebase cloud functions into your cloud functions folder.\nIf the folder doens't exist yet run the following command.\nfirebase init functionscopy the following cloud functions here\ndeploy the cloud functions with the following command.\nfirebase deploy --only functions\n4. firestore rules\nCopy and paste the firestore rules into your firestore rules file.\nIf the file doesn't exist yet run the following command.\nfirebase init firestorecopy the following firestore rules here\ndeploy the firestore rules with the following command.\nfirebase deploy --only firestore:rules\nFor development only\n\n\nstart cypress testing\nng serve\nnpm run build:testConfig\nnpx cypress openstart unit test\nng test ng-usermanagement\npublishing to npm\nBuild the library.\nng build ng-usermanagementnavigate to the dist folder cd dist/ng-usermanagement\ncd dist/ng-usermanagement\nnpm publish\ndeploy documentation to firebase\nBuild the compodoc file & serve it for testing if needed\nnpm run compodoc\nnpm run compodoc:serveCopy and paste the files in documentation into the public folder.\nRun the deploy command to firebase\nfirebase deploy\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AdminPopupModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GroupModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoginProvidersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgUserManagementModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RegisterModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SpinnerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserAdminSettingsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ValidationMessageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ngUserManagementConfig.html":{"url":"interfaces/ngUserManagementConfig.html","title":"interface - ngUserManagementConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ngUserManagementConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/ng-usermanagement/src/lib/interfaces/firebase-config.interface.ts\n        \n\n            \n                Description\n            \n            \n                An interface of the firebase configs\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        firebaseConfig\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        firebaseConfig\n                                    \n                                \n                                \n                                    \n                                        firebaseConfig:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\n\n/**\n * This token is the official token containing the final configuration; ie. the merge between default and user provided configurations\n */\nexport const NgUserManagementConfigToken = new InjectionToken('NgUserManagementConfigToken');\n\n/**\n * This is an intermediate token containing only user-provided configuration\n */\nexport const UserProvidedConfigToken = new InjectionToken('UserProvidedConfigToken');\n\n/**\n * An interface of the firebase configs\n */\nexport interface ngUserManagementConfig {\n  /**\n   * @usageNotes\n   * Firebase configurations\n   * ```\n   * example = {\n   *  apiKey: \"Key here\",\n   *  authDomain: \"[projectId].firebaseapp.com\",\n   *  databaseURL: \"https://[projectId].firebaseio.com\",\n   *  projectId: \"[projectId]\",\n   *  storageBucket: \"[projectId].appspot.com\",\n   *  messagingSenderId: \"123\",\n   *  appId: \"123\"\n   * }\n   * ```\n   */\n  firebaseConfig?: any;\n}\n\n/**\n * default firebase configs\n */\nexport const defaultUserManagementConfig: ngUserManagementConfig = {\n  firebaseConfig: {}\n}\n\n/**\n * Merge default config with user provided config.\n * @param userProvidedConfig \n */\nexport function ngUserManagementConfigFactory(userProvidedConfig: ngUserManagementConfig): ngUserManagementConfig {\n  return Object.assign({}, defaultUserManagementConfig, userProvidedConfig);\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminPopupModule\n\n\n\ncluster_AdminPopupModule_declarations\n\n\n\ncluster_AdminPopupModule_exports\n\n\n\ncluster_GroupModule\n\n\n\ncluster_GroupModule_declarations\n\n\n\ncluster_GroupModule_imports\n\n\n\ncluster_GroupModule_exports\n\n\n\ncluster_LoginProvidersModule\n\n\n\ncluster_LoginProvidersModule_declarations\n\n\n\ncluster_LoginProvidersModule_exports\n\n\n\ncluster_NgUserManagementModule\n\n\n\ncluster_NgUserManagementModule_exports\n\n\n\ncluster_NgUserManagementModule_providers\n\n\n\ncluster_RegisterModule\n\n\n\ncluster_RegisterModule_declarations\n\n\n\ncluster_RegisterModule_imports\n\n\n\ncluster_RegisterModule_exports\n\n\n\ncluster_SpinnerModule\n\n\n\ncluster_SpinnerModule_declarations\n\n\n\ncluster_SpinnerModule_exports\n\n\n\ncluster_UserAdminSettingsModule\n\n\n\ncluster_UserAdminSettingsModule_declarations\n\n\n\ncluster_UserAdminSettingsModule_exports\n\n\n\ncluster_ValidationMessageModule\n\n\n\ncluster_ValidationMessageModule_declarations\n\n\n\ncluster_ValidationMessageModule_exports\n\n\n\n\nAdminPopupComponent\n\nAdminPopupComponent\n\n\n\nAdminPopupModule\n\nAdminPopupModule\n\nAdminPopupModule -->\n\nAdminPopupComponent->AdminPopupModule\n\n\n\n\n\nAdminPopupComponent \n\nAdminPopupComponent \n\nAdminPopupComponent  -->\n\nAdminPopupModule->AdminPopupComponent \n\n\n\n\n\nNgUserManagementModule\n\nNgUserManagementModule\n\nNgUserManagementModule -->\n\nAdminPopupModule->NgUserManagementModule\n\n\n\n\n\nGroupCreateComponent\n\nGroupCreateComponent\n\n\n\nGroupModule\n\nGroupModule\n\nGroupModule -->\n\nGroupCreateComponent->GroupModule\n\n\n\n\n\nGroupListComponent\n\nGroupListComponent\n\nGroupModule -->\n\nGroupListComponent->GroupModule\n\n\n\n\n\nGroupSettingsComponent\n\nGroupSettingsComponent\n\nGroupModule -->\n\nGroupSettingsComponent->GroupModule\n\n\n\n\n\nGroupUsersSettingsComponent\n\nGroupUsersSettingsComponent\n\nGroupModule -->\n\nGroupUsersSettingsComponent->GroupModule\n\n\n\n\n\nGroupCreateComponent \n\nGroupCreateComponent \n\nGroupCreateComponent  -->\n\nGroupModule->GroupCreateComponent \n\n\n\n\n\nGroupListComponent \n\nGroupListComponent \n\nGroupListComponent  -->\n\nGroupModule->GroupListComponent \n\n\n\n\n\nGroupSettingsComponent \n\nGroupSettingsComponent \n\nGroupSettingsComponent  -->\n\nGroupModule->GroupSettingsComponent \n\n\n\n\n\nGroupUsersSettingsComponent \n\nGroupUsersSettingsComponent \n\nGroupUsersSettingsComponent  -->\n\nGroupModule->GroupUsersSettingsComponent \n\n\n\n\n\nSpinnerModule\n\nSpinnerModule\n\nGroupModule -->\n\nSpinnerModule->GroupModule\n\n\n\n\n\nLoginProvidersModule\n\nLoginProvidersModule\n\nLoginProvidersModule -->\n\nSpinnerModule->LoginProvidersModule\n\n\n\n\n\nRegisterModule\n\nRegisterModule\n\nRegisterModule -->\n\nSpinnerModule->RegisterModule\n\n\n\n\n\nSpinnerComponent \n\nSpinnerComponent \n\nSpinnerComponent  -->\n\nSpinnerModule->SpinnerComponent \n\n\n\n\n\nUserAdminSettingsModule\n\nUserAdminSettingsModule\n\nUserAdminSettingsModule -->\n\nSpinnerModule->UserAdminSettingsModule\n\n\n\n\n\nLoginEmailPasswordComponent\n\nLoginEmailPasswordComponent\n\nLoginProvidersModule -->\n\nLoginEmailPasswordComponent->LoginProvidersModule\n\n\n\n\n\nLoginGoogleComponent\n\nLoginGoogleComponent\n\nLoginProvidersModule -->\n\nLoginGoogleComponent->LoginProvidersModule\n\n\n\n\n\nLoginEmailPasswordComponent \n\nLoginEmailPasswordComponent \n\nLoginEmailPasswordComponent  -->\n\nLoginProvidersModule->LoginEmailPasswordComponent \n\n\n\n\n\nLoginGoogleComponent \n\nLoginGoogleComponent \n\nLoginGoogleComponent  -->\n\nLoginProvidersModule->LoginGoogleComponent \n\n\n\n\n\nAdminPopupModule \n\nAdminPopupModule \n\nAdminPopupModule  -->\n\nNgUserManagementModule->AdminPopupModule \n\n\n\n\n\nGroupModule \n\nGroupModule \n\nGroupModule  -->\n\nNgUserManagementModule->GroupModule \n\n\n\n\n\nLoginProvidersModule \n\nLoginProvidersModule \n\nLoginProvidersModule  -->\n\nNgUserManagementModule->LoginProvidersModule \n\n\n\n\n\nRegisterModule \n\nRegisterModule \n\nRegisterModule  -->\n\nNgUserManagementModule->RegisterModule \n\n\n\n\n\nSpinnerModule \n\nSpinnerModule \n\nSpinnerModule  -->\n\nNgUserManagementModule->SpinnerModule \n\n\n\n\n\nUserAdminSettingsModule \n\nUserAdminSettingsModule \n\nUserAdminSettingsModule  -->\n\nNgUserManagementModule->UserAdminSettingsModule \n\n\n\n\n\nAdminPopupService\n\nAdminPopupService\n\nNgUserManagementModule -->\n\nAdminPopupService->NgUserManagementModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nRegisterModule -->\n\nRegisterComponent->RegisterModule\n\n\n\n\n\nRegisterComponent \n\nRegisterComponent \n\nRegisterComponent  -->\n\nRegisterModule->RegisterComponent \n\n\n\n\n\nValidationMessageModule\n\nValidationMessageModule\n\nRegisterModule -->\n\nValidationMessageModule->RegisterModule\n\n\n\n\n\nValidationMessageComponent \n\nValidationMessageComponent \n\nValidationMessageComponent  -->\n\nValidationMessageModule->ValidationMessageComponent \n\n\n\n\n\nSpinnerComponent\n\nSpinnerComponent\n\nSpinnerModule -->\n\nSpinnerComponent->SpinnerModule\n\n\n\n\n\nAdminSettingsComponent\n\nAdminSettingsComponent\n\nUserAdminSettingsModule -->\n\nAdminSettingsComponent->UserAdminSettingsModule\n\n\n\n\n\nUserSettingsComponent\n\nUserSettingsComponent\n\nUserAdminSettingsModule -->\n\nUserSettingsComponent->UserAdminSettingsModule\n\n\n\n\n\nAdminSettingsComponent \n\nAdminSettingsComponent \n\nAdminSettingsComponent  -->\n\nUserAdminSettingsModule->AdminSettingsComponent \n\n\n\n\n\nUserSettingsComponent \n\nUserSettingsComponent \n\nUserSettingsComponent  -->\n\nUserAdminSettingsModule->UserSettingsComponent \n\n\n\n\n\nValidationMessageComponent\n\nValidationMessageComponent\n\nValidationMessageModule -->\n\nValidationMessageComponent->ValidationMessageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        8 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    12 Components\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            defaultUserManagementConfig   (libs/.../firebase-config.interface.ts)\n                        \n                        \n                            NgSnackBarToken   (libs/.../snackbar-config.interface.ts)\n                        \n                        \n                            NgUserManagementConfigToken   (libs/.../firebase-config.interface.ts)\n                        \n                        \n                            UserProvidedConfigToken   (libs/.../firebase-config.interface.ts)\n                        \n                        \n                            UserProvidedSnackBarToken   (libs/.../snackbar-config.interface.ts)\n                        \n                        \n                            verifyPassword   (libs/.../validators.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/ng-usermanagement/src/lib/interfaces/firebase-config.interface.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultUserManagementConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ngUserManagementConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  firebaseConfig: {}\n}\n                        \n                    \n\n                \n                    \n                        default firebase configs\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            NgUserManagementConfigToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('NgUserManagementConfigToken')\n                        \n                    \n\n                \n                    \n                        This token is the official token containing the final configuration; ie. the merge between default and user provided configurations\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UserProvidedConfigToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('UserProvidedConfigToken')\n                        \n                    \n\n                \n                    \n                        This is an intermediate token containing only user-provided configuration\n\n                    \n                \n\n            \n        \n\n    libs/ng-usermanagement/src/lib/interfaces/snackbar-config.interface.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NgSnackBarToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('NgSnackBarToken')\n                        \n                    \n\n                \n                    \n                        This token is the official token containing the final configuration; ie. the merge between default and user provided configurations\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UserProvidedSnackBarToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('UserProvidedSnackBarToken')\n                        \n                    \n\n                \n                    \n                        This is an intermediate token containing only user-provided configuration\n\n                    \n                \n\n            \n        \n\n    libs/ng-usermanagement/src/lib/validation-message/validators.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            verifyPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ValidatorFn\n\n                        \n                    \n                    \n                        \n                            Default value : (group: FormGroup): ValidationErrors | null => {\n  const pass = group.get('password').value;\n  const confirmPass = group.get('confirmPassword').value;\n  if (!(pass === confirmPass)) {\n      return { 'verifyPassword': true };\n  }\n  else return null;\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
